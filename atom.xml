<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CSRJTAN</title>
  <subtitle>Keep Moving</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://csrjtan.github.io/"/>
  <updated>2016-06-03T09:02:34.000Z</updated>
  <id>https://csrjtan.github.io/</id>
  
  <author>
    <name>CsrjTan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CS231n_1 and 2</title>
    <link href="https://csrjtan.github.io/2016/06/03/CS231n-1/"/>
    <id>https://csrjtan.github.io/2016/06/03/CS231n-1/</id>
    <published>2016-06-03T04:53:24.000Z</published>
    <updated>2016-06-03T09:02:34.000Z</updated>
    
    <content type="html">&lt;p&gt;回来积极投身CNN的学习和研究中，受到博后哥哥宪标的推荐，毅然决然去学习standford CS231n关于CNN的公开课CNN for Visual Recognition，主要由飞飞姐和Karpathy、Johnson主讲，&lt;br&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=ngXbD21b4qk&amp;amp;index=2&amp;amp;list=PLrZmhn8sSgye6ijhLzIIXiU9GNaIwbF8B&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Youtube视频&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://cs231n.stanford.edu/syllabus.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;课程主页&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;第一课-Introduction&quot;&gt;&lt;a href=&quot;#第一课-Introduction&quot; class=&quot;headerlink&quot; title=&quot;第一课 Introduction&quot;&gt;&lt;/a&gt;第一课 Introduction&lt;/h3&gt;&lt;p&gt;首先不出意外地第一节课是Introduction,飞飞对CV的研究发展历史给出了一个比较中肯的conclusion,从生物视觉的起源到Da Vinci的摄影技术以及第一篇CV phd Thesis. 主要提到了计算机视觉围绕主要的问题，有一个宏观意义上的认识。物体是识别、分类、切割、定位等，还能延伸出许多的子问题。&lt;/p&gt;
&lt;h4 id=&quot;经典工作&quot;&gt;&lt;a href=&quot;#经典工作&quot; class=&quot;headerlink&quot; title=&quot;经典工作&quot;&gt;&lt;/a&gt;经典工作&lt;/h4&gt;&lt;p&gt;这里关键读一下CV历史上影响巨大的几篇文章：&lt;br&gt;一.AdaBoost Face Detection:使得人脸的识别可以实时应用，主要Contribution:1.Harr特征的边缘提取 2.积分图的快速计算 3.AdaBoost的学习分类器&lt;br&gt;二.SIFT：Lowe大神经典之作，每个CV人都知道的图片经典特征点,具有shift、rotate、scale不变性：1.构建高斯图像金字塔 2.提取特征点 3.特征描述子的建立&lt;br&gt;三.金字塔匹配：CVPR06工作，将图片分块成多个空间金字塔，从而结合BoW等技术进行有效的匹配和分类&lt;/p&gt;
&lt;p&gt;ImageNet主要关注在CV核心问题，图像识别和分类定位等问题。起初使用的模型一般是提取特征点-&amp;gt;建立字典和模型-&amp;gt;学习分类算法(SVM)-&amp;gt;预测结果；如今DL的火热，使得CNN成为研究CV的主工具。&lt;/p&gt;
&lt;h4 id=&quot;关于CNN的工作&quot;&gt;&lt;a href=&quot;#关于CNN的工作&quot; class=&quot;headerlink&quot; title=&quot;关于CNN的工作&quot;&gt;&lt;/a&gt;关于CNN的工作&lt;/h4&gt;&lt;p&gt;1.LeCun大神的MNIST文字识别库，文章比较了多种ML方法在库上的表现，当年使用的CNN达到了非常好的效果，但具有训练速度慢、收敛难等问题&lt;br&gt;2.ImageNet12上，AlexNet这篇经典的CNN文章引爆了潮流，主要使用ReLU、GPU加速、LRN、Data Augument等技术使得CNN避免Overfitting，方便梯度传递，加速训练、解决DL收敛困难的主要问题，在比赛上获得惊人的效果。&lt;/p&gt;
&lt;h4 id=&quot;课程的Pre-Requisite&quot;&gt;&lt;a href=&quot;#课程的Pre-Requisite&quot; class=&quot;headerlink&quot; title=&quot;课程的Pre-Requisite&quot;&gt;&lt;/a&gt;课程的Pre-Requisite&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;high proficiency in python和c++&lt;/li&gt;
&lt;li&gt;Linear Algebra&lt;/li&gt;
&lt;li&gt;Machine Learning&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;第二课-Classification&quot;&gt;&lt;a href=&quot;#第二课-Classification&quot; class=&quot;headerlink&quot; title=&quot;第二课 Classification&quot;&gt;&lt;/a&gt;第二课 Classification&lt;/h3&gt;&lt;h4 id=&quot;Image-Classification&quot;&gt;&lt;a href=&quot;#Image-Classification&quot; class=&quot;headerlink&quot; title=&quot;Image Classification&quot;&gt;&lt;/a&gt;Image Classification&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://cs231n.github.io/classification/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ImageClassification Tutorial&lt;/a&gt;&lt;br&gt;Challenges:Viewpoint Variation, Scale Variation, Deformation, Occlusion, Iluumnation conditions, Background Clutter, Intra-class Variation.（图像识别的经典难点）&lt;/p&gt;
&lt;p&gt;Data-Driven Approach: Input-&amp;gt;Learning-&amp;gt;Evaluation&lt;br&gt;根据训练样本的学习出来模型，从而对新来的样本进行分类识别的方法&lt;/p&gt;
&lt;p&gt;Nearest Neighbor Classifier,具体为KNN: 1.Distance Metric的选择 2.k值的选择（根据Cross Validation,e.g. 5-fold cross-validation）,从训练集中切成5份，轮着用一份训练，剩余四份Evaluate,从而调整hyperParameters&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/cs231n060301.png&quot; alt=&quot;k-fold分析图&quot;&gt;，对于一般性的数据集，K在4-7取得更加的效果，K越大越smooth,expensive也越大&lt;/p&gt;
&lt;p&gt;[tips:Evaluate on the test set only a single time, at the very end.确保最后才使用testSets,避免overfit for testSets,保证了模型的generlzation]&lt;/p&gt;
&lt;p&gt;Ads: Easy to understand and implement&lt;br&gt;Draws: Pay computational cost at test time(因此提出了ANN的近似加速，还有FLANN的库)&lt;br&gt;Pixel-based distances on high-dimensional data can be very unintuitive.(不适用，就像图片平移或者出现Artifacts等情况，但pixel-based distance是不适应人眼的;这里karpathy用了t-SNE对CIFAR-10的图片作了一个分布排列，相似的放在一起，可以看到背景相似但内容不一的东西反而靠在一起了)&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/cs231n060303.jpg&quot; alt=&quot;t-SNE对CIFAR-10的分布&quot;&gt;&lt;br&gt;cons: suit for the low-dimensional data&lt;/p&gt;
&lt;p&gt;Summary: 1.Introduce the problem of image classification, image mapping label&lt;br&gt;2.introduce the NN classifier&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Using validation set for tuning the hyperparameters, split training data into two: a training set and a fake test set. Try different hyperparameter values&lt;/li&gt;
&lt;li&gt;Once the parameter found, we fixed and use actual test set to evaluation&lt;/li&gt;
&lt;li&gt;the NN only get about 40% accuracy on CIFAR-10, while human achieve 94% and CNN achieve already 95%!&lt;/li&gt;
&lt;li&gt;the L1 or L2 distances on raw pixel is not adequate since more strongly relative with backgrounds and color distributions rather than semantic content&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;Practice-with-kNN&quot;&gt;&lt;a href=&quot;#Practice-with-kNN&quot; class=&quot;headerlink&quot; title=&quot;Practice with kNN:&quot;&gt;&lt;/a&gt;Practice with kNN:&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;Preprocessing: Normalize the data in zero mean and unit variance&lt;/li&gt;
&lt;li&gt;If the data is high dimensional, using dimensionality reduction technique such as PCA or even Random Projections&lt;/li&gt;
&lt;li&gt;Split your traiing data randomly into train/val splits. About 70%~90% of data usually goes to the train split. It depens on how many hyperparameters you have and how much influence you expect them to have. (Cross-validation with the more folds the better, but more expensive)&lt;/li&gt;
&lt;li&gt;Train and evaluate kNN on validation data for many choices of k and across different distance types(暴力人为去尝试，加上自己实验的理解)&lt;/li&gt;
&lt;li&gt;If kNN running too long, consider using ANN library(FLANN, cost of some accuracy)&lt;/li&gt;
&lt;li&gt;Normaly do not use the validation set into the training data, we burned it for unestimated influence. Then evaluate with the test set and report the result as the performance of the kNN models.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;Linear-Claissification&quot;&gt;&lt;a href=&quot;#Linear-Claissification&quot; class=&quot;headerlink&quot; title=&quot;Linear Claissification&quot;&gt;&lt;/a&gt;Linear Claissification&lt;/h4&gt;&lt;p&gt;kNN disadvantages: 1.需要存储training data for comparison&lt;br&gt;                   2.与数据库comparison十分耗时&lt;/p&gt;
&lt;p&gt;Using a score function and loss function to build a powerful model rather than the kNN&lt;br&gt;$f(x_i,W,b) = Wx_i+b$&lt;/p&gt;
&lt;p&gt;这里主要把W,b的参数学习，x为图片输入，将像素和通道展开成一维超长向量，假设有10类，则b为【10*1】为，得到一个10维的向量，分别表示对应类别的得分。如此一来，新来样本分类只要计算一个矩阵乘法和向量加法就得到结果了，比原先kNN不知道快到哪里去。&lt;/p&gt;
&lt;p&gt;思考：这里Linear Classification相当于做了什么，怎么去理解？1.学习了对应类别的一个模板匹配 2.在高维度空间对数据样本做线性分类学习（有点像SVM)&lt;br&gt;这里将学习得到的Linear Classification再重新可视化之后，得到以下的结果&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/cs231n060302.png&quot; alt=&quot;类别模板可视化&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;回来积极投身CNN的学习和研究中，受到博后哥哥宪标的推荐，毅然决然去学习standford CS231n关于CNN的公开课CNN for Visual Recognition，主要由飞飞姐和Karpathy、Johnson主讲，&lt;br&gt;&lt;a href=&quot;https://ww
    
    </summary>
    
      <category term="Tech" scheme="https://csrjtan.github.io/categories/Tech/"/>
    
    
      <category term="公开课 CNN" scheme="https://csrjtan.github.io/tags/%E5%85%AC%E5%BC%80%E8%AF%BE-CNN/"/>
    
  </entry>
  
  <entry>
    <title>书单</title>
    <link href="https://csrjtan.github.io/2016/06/01/books/"/>
    <id>https://csrjtan.github.io/2016/06/01/books/</id>
    <published>2016-06-01T11:28:07.000Z</published>
    <updated>2016-06-02T15:12:13.000Z</updated>
    
    <content type="html">&lt;p&gt;这里记录一下书单，包括在读的、想读的、他人推荐读的。后面可以写一下正在进展的项目和工作，最后记录已读的。&lt;/p&gt;
&lt;h2 id=&quot;在读：&quot;&gt;&lt;a href=&quot;#在读：&quot; class=&quot;headerlink&quot; title=&quot;在读：&quot;&gt;&lt;/a&gt;在读：&lt;/h2&gt;&lt;p&gt;《情人》、《时间简史》、《MATLAB从入门到精通》&lt;/p&gt;
&lt;h2 id=&quot;想读：&quot;&gt;&lt;a href=&quot;#想读：&quot; class=&quot;headerlink&quot; title=&quot;想读：&quot;&gt;&lt;/a&gt;想读：&lt;/h2&gt;&lt;h3 id=&quot;面试微软之前的十本书&quot;&gt;&lt;a href=&quot;#面试微软之前的十本书&quot; class=&quot;headerlink&quot; title=&quot;面试微软之前的十本书&quot;&gt;&lt;/a&gt;面试微软之前的十本书&lt;/h3&gt;&lt;p&gt;Code: The Hidden Language of Computer Hardware and Software （《编码的奥秘》）&lt;br&gt;Computer System: A Programmer’s Perspective （《深入理解计算机系统》） / Windows via C/C++ （《Windows核心编程》 / 《程序员的自我修养》&lt;br&gt;Code Complete 2（《代码大全》）/ The Pragmatic Programmer （《程序员修炼之道》，我也把这本书称为《代码小全》）&lt;br&gt;Programming Pearls （《编程珠玑》） / Algorithms / Algorithm Design / 《编程之美》&lt;br&gt;The C Programming Language&lt;br&gt;The C++ Programming Language / Programming: Principles and Practice Using C++ / Accelerated C++&lt;br&gt;The Structure and Interpretation of Computer Programs （《计算机程序的构造和解释》）&lt;br&gt;Clean Code / Implementation Patterns&lt;br&gt;Design Patterns （《设计模式》） / Agile Software Development, Principles, Patterns, and Practices&lt;br&gt;Refactoring （《重构》）&lt;/p&gt;
&lt;h3 id=&quot;云风推荐&quot;&gt;&lt;a href=&quot;#云风推荐&quot; class=&quot;headerlink&quot; title=&quot;云风推荐&quot;&gt;&lt;/a&gt;云风推荐&lt;/h3&gt;&lt;p&gt;C++编程思想&lt;br&gt;Effective C++&lt;br&gt;深度探索C++对象模型&lt;br&gt;C++语言的设计和演化&lt;br&gt;C专家编程&lt;br&gt;C陷阱与缺陷&lt;br&gt;C语言接口与实现&lt;br&gt;Lua程序设计&lt;br&gt;Linkers and Loaders&lt;br&gt;COM本质论&lt;br&gt;Windows核心编程&lt;br&gt;深入解析Windows操作系统&lt;br&gt;程序员修炼之道&lt;br&gt;代码大全&lt;br&gt;UNIX编程艺术&lt;br&gt;设计模式&lt;br&gt;代码优化：有效使用内存&lt;br&gt;深入理解计算机系统&lt;br&gt;深入理解LINUX内核&lt;br&gt;TCP/IP 详解&lt;/p&gt;
&lt;h3 id=&quot;冯大辉&quot;&gt;&lt;a href=&quot;#冯大辉&quot; class=&quot;headerlink&quot; title=&quot;冯大辉&quot;&gt;&lt;/a&gt;冯大辉&lt;/h3&gt;&lt;p&gt;软件随想录&lt;br&gt;黑客与画家&lt;br&gt;重来&lt;br&gt;UNIX编程艺术&lt;br&gt;编程人生&lt;/p&gt;
&lt;h3 id=&quot;豆瓣CTO&quot;&gt;&lt;a href=&quot;#豆瓣CTO&quot; class=&quot;headerlink&quot; title=&quot;豆瓣CTO&quot;&gt;&lt;/a&gt;豆瓣CTO&lt;/h3&gt;&lt;p&gt;Code Complete 2&lt;br&gt;The Mythical Man-Month （《人月神话》）&lt;br&gt;Code: The Hidden Language of Computer Hardware and Software （《编码的奥秘》）&lt;br&gt;TAOCP （不解释）&lt;br&gt;The Pragmatic Programmer （《程序员修炼之道》）&lt;br&gt;Design Patterns （《设计模式》）&lt;br&gt;The Structure and Interpretation of Computer Programs （《计算机程序的构造和解释》）&lt;br&gt;Refactoring （《重构》）&lt;br&gt;The C Programming Language&lt;br&gt;Introduction to Algorithms （《算法导论》）&lt;/p&gt;
&lt;h2 id=&quot;已读：&quot;&gt;&lt;a href=&quot;#已读：&quot; class=&quot;headerlink&quot; title=&quot;已读：&quot;&gt;&lt;/a&gt;已读：&lt;/h2&gt;&lt;h3 id=&quot;技术&quot;&gt;&lt;a href=&quot;#技术&quot; class=&quot;headerlink&quot; title=&quot;技术&quot;&gt;&lt;/a&gt;技术&lt;/h3&gt;&lt;p&gt;《统计学习方法》、《这就是搜索引擎》、《浪潮之巅》、《数学之美》&lt;/p&gt;
&lt;h3 id=&quot;非技术&quot;&gt;&lt;a href=&quot;#非技术&quot; class=&quot;headerlink&quot; title=&quot;非技术&quot;&gt;&lt;/a&gt;非技术&lt;/h3&gt;&lt;p&gt;《苏菲的世界》、《如何阅读一本书》、《黑客与画家》、《解忧杂货铺》、《当我在跑步，我在谈论什么》、《白夜行》、《一个人的朝圣》、《人性的弱点》、《从0到1》、《35岁前要做的33件事》、《站在两个世界的边缘》、《极简欧洲史》、《未来在现实的第几层》、《再穷也要去旅游》、《活着》、《小王子》、《自控力》&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这里记录一下书单，包括在读的、想读的、他人推荐读的。后面可以写一下正在进展的项目和工作，最后记录已读的。&lt;/p&gt;
&lt;h2 id=&quot;在读：&quot;&gt;&lt;a href=&quot;#在读：&quot; class=&quot;headerlink&quot; title=&quot;在读：&quot;&gt;&lt;/a&gt;在读：&lt;/h2&gt;&lt;p&gt;《情人》、《
    
    </summary>
    
      <category term="Tech" scheme="https://csrjtan.github.io/categories/Tech/"/>
    
    
  </entry>
  
  <entry>
    <title>潮汕之旅&amp;拼图合照</title>
    <link href="https://csrjtan.github.io/2016/05/30/%E6%BD%AE%E6%B1%95%E4%B9%8B%E6%97%85/"/>
    <id>https://csrjtan.github.io/2016/05/30/潮汕之旅/</id>
    <published>2016-05-30T06:47:13.000Z</published>
    <updated>2016-06-01T14:49:47.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Seminar-Report&quot;&gt;&lt;a href=&quot;#Seminar-Report&quot; class=&quot;headerlink&quot; title=&quot;Seminar Report&quot;&gt;&lt;/a&gt;Seminar Report&lt;/h3&gt;&lt;p&gt;理大上学期的十个Seminar Report的1500 words的总结&lt;br&gt;&lt;a href=&quot;https://drive.google.com/file/d/0B5mtSYlvfwArMVAzblpPZjRRNmM/view&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Seminar Report&lt;/a&gt;&lt;br&gt;买设备的单据&lt;br&gt;&lt;a href=&quot;https://drive.google.com/drive/folders/0B5mtSYlvfwArbDI2N1lIdlFpZ0U&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;电脑单据&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;潮汕&quot;&gt;&lt;a href=&quot;#潮汕&quot; class=&quot;headerlink&quot; title=&quot;潮汕&quot;&gt;&lt;/a&gt;潮汕&lt;/h3&gt;&lt;p&gt;在深圳工作了一会儿了，周末借着万圣节的假期和珊爷出去玩，由于港客特别多放假，珠海长隆和周边的温泉都爆满了，所以决定去潮汕享受一下美食。结果却累得不行，时间不够，交通紧张，没有领略到什么旅游的特色，倒是和珊宝确实走了更多的路了。&lt;/p&gt;
&lt;p&gt;去了两天，住在状元街周边的旅店，总体感觉消费也不低，但人确实有点凶，不大适合旅游，受到小明的建议，决定到此体验一下潮汕的文化和美食。毕竟大学堆里有不少潮汕的朋友，这有利于了解他们的生活方式。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CS053001.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;潮州状元坊&quot;&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;这个状元坊就是当年的秀才考取功名，衣锦还乡而建的，一条街证明大家都是为了这个奋发，读书走这条路为的就是衣锦还乡呀。所以潮汕的教育应该还是很不错，相对来说还是比较重视教育和后代的，所以才会出现那么严重的超生、重男轻女之类的，确实很有趣。现在珠三角的年轻人群体不乏潮汕群体，而且公司和大学也很多，所以这个地方还是值得去了解一下，遗憾的是时间不够，没有去到汕头。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CS053002.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;潮汕牛肉面&quot;&gt;&lt;br&gt;潮汕的牛肉丸、牛杂和牛肉面自然是不容错过的，只是感觉味精有点多，不适合我这种传统顺德口味。回来还发烧和嘴巴发炎了，太上火了，以致于现在的口味也趋向清淡了。也应了年轻的时候轻狂，过了这段也就归于本性；年轻的时候爱吃辣，过了就知道自己自小的培养起来的口味和体质，还是趋于清淡。（家里人的口味和小珊的口味熏陶了我）。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CS053003.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;驸马府&quot;&gt;&lt;br&gt;在潮汕很多那些电动三轮，虽然导致交通阻塞，但却很受用，上了一个把驸马府、西湖都转了个遍，毕竟潮州的景点也不大。所以在这儿当了一回驸马，了解了很多潮州以及华南地区的建筑格局和模式。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CS053004.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;芝麻茶和杏仁茶&quot;&gt;&lt;br&gt;其实就是糊，不过口味还挺不错的，值得一试。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CS053006.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;广济桥合照&quot;&gt;&lt;br&gt;这是历史已久的桥，后来李嘉诚斥巨资翻修，很多的潮汕人漂洋过海谋求发展，功成名就就帮助建设家乡，汕头大学也是因此受惠不少。奈何潮州这个地区好像经济发展还是比较颓势，新城区可能还好一些吧。&lt;/p&gt;
&lt;p&gt;总结：这趟旅程只有两天但其实有点时间不足，交通上耗时较多，到旅游点后也没有了解和玩到太多的东西，要多加锻炼自己的策划能力，看了很多的攻略但没有地图确实还是不好弄，只有手机软件还是不够用的。需要做好手绘地图攻略，合理安排好时间出行。特别找饭店这个好像一直都不大重视，但食是旅游中十分重要的一件事情。下次改进吧。&lt;/p&gt;
&lt;h3 id=&quot;拼图合照&quot;&gt;&lt;a href=&quot;#拼图合照&quot; class=&quot;headerlink&quot; title=&quot;拼图合照&quot;&gt;&lt;/a&gt;拼图合照&lt;/h3&gt;&lt;p&gt;这里把lofter和手机拼图都放在一起了，有空可以怀缅一下。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CS053005.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;可爱的人&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CS053007.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;大四时光&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CS053008.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;合照&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CS053009.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;哥哥大婚&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Seminar-Report&quot;&gt;&lt;a href=&quot;#Seminar-Report&quot; class=&quot;headerlink&quot; title=&quot;Seminar Report&quot;&gt;&lt;/a&gt;Seminar Report&lt;/h3&gt;&lt;p&gt;理大上学期的十个Seminar Report的1500 words的总结&lt;br&gt;&lt;a href=&quot;https://drive.google.com/file/d/0B5mtSYlvfwArMVAzblpPZjRRNmM/view&quot;&gt;Seminar Report&lt;/a&gt;&lt;br&gt;买设备的单据&lt;br&gt;&lt;a href=&quot;https://drive.google.com/drive/folders/0B5mtSYlvfwArbDI2N1lIdlFpZ0U&quot;&gt;电脑单据&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;潮汕&quot;&gt;&lt;a href=&quot;#潮汕&quot; class=&quot;headerlink&quot; title=&quot;潮汕&quot;&gt;&lt;/a&gt;潮汕&lt;/h3&gt;&lt;p&gt;在深圳工作了一会儿了，周末借着万圣节的假期和珊爷出去玩，由于港客特别多放假，珠海长隆和周边的温泉都爆满了，所以决定去潮汕享受一下美食。结果却累得不行，时间不够，交通紧张，没有领略到什么旅游的特色，倒是和珊宝确实走了更多的路了。&lt;/p&gt;
&lt;p&gt;去了两天，住在状元街周边的旅店，总体感觉消费也不低，但人确实有点凶，不大适合旅游，受到小明的建议，决定到此体验一下潮汕的文化和美食。毕竟大学堆里有不少潮汕的朋友，这有利于了解他们的生活方式。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CS053001.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;潮州状元坊&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Life" scheme="https://csrjtan.github.io/categories/Life/"/>
    
    
      <category term="旅游 美食" scheme="https://csrjtan.github.io/tags/%E6%97%85%E6%B8%B8-%E7%BE%8E%E9%A3%9F/"/>
    
  </entry>
  
  <entry>
    <title>重回理大</title>
    <link href="https://csrjtan.github.io/2016/05/29/%E9%87%8D%E5%9B%9E%E7%90%86%E5%A4%A7/"/>
    <id>https://csrjtan.github.io/2016/05/29/重回理大/</id>
    <published>2016-05-29T05:18:43.000Z</published>
    <updated>2016-06-01T14:27:44.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;在深圳最后一周&quot;&gt;&lt;a href=&quot;#在深圳最后一周&quot; class=&quot;headerlink&quot; title=&quot;在深圳最后一周&quot;&gt;&lt;/a&gt;在深圳最后一周&lt;/h3&gt;&lt;p&gt;从今年的3月中旬去到了相机部门里面去实习，认识了很多牛人，迄今为止一次在公司里比较真切完整的体验，几乎足足有三个月。（不想说有多苦，宝宝心里苦，宝宝认真上班）总结来说并没有进步很多，但确实学到不少，企业的管理模式，内部沟通机制，安全机制等，我住在新安的宿舍，每天上班需要40分钟，过着早上10点上班，中午12点半点外卖，午休到2点，晚饭6点吃完，7点休息聊天看书，8点回去散漫工作的日子。虽然紧张，但规律有节奏的生活带来的好处却是有目共睹的。很庆幸认识了共同入职的新伙伴，陪我度&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;过了这段富有意义的旅程。遗憾的是没有想象中的那样学到很多很有意义的东西，一方面是自己实力或者积极性不够的原因，一方面也是公司内部管理以及机密性原因，对实习生确实不能太坦诚相对。这是一家非常棒的公司，拥有非常棒的员工，大家工作节奏快而有效，虽然缺少一些生活的气息，但已经感觉到他们的工作与生活是无法割离的。这样的长时间工作带来了高薪但却缺少了个人娱乐以及陪伴家人的时间（其实还是有的，主要是在周末吧）。不得不说这段岁月过得飞快，每天都能拿出绝大部分的时间放在技术、代码上，这才是应该要有的学习和进步的态度，希望自己能保持。&lt;/p&gt;
&lt;p&gt;这最后一周本来还不想离去，但我家的小珊考完期末试，没人陪她玩，愣是过来骚扰我了，于是我就白天上班，晚上陪她去了。周二的第一天我们去了创维大厦的藕厨，点了个番茄鱼。继水煮鱼和番茄鱼之后，又刷新我世界观的🐟。还有肉团和爆炒娃娃菜，我家宝宝是有多爱吃娃娃菜~第二天去了COCO PARK，为了吃到她朋友SHOW的美奈小馆，一个吃非常FRESH的越南菜的馆子，还等了几乎一个小时，肚子又要快饿扁了，真希望能健康按时地作息。接下来秀一下拍的FRESH越南菜美食：&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life052901.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;宝宝试衣&quot;&gt;这个衣服还是跟宝宝很配的，宝宝的穿衣审美一直希望尝试新风格突破自我，所以经常想尝试欧美风，奈何骨架太小，人还偏瘦，想穿衣好看，就得吃饭。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life052905.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;薄荷紫苏柠七&quot;&gt;还有如此清新可口的饮料&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life052902.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;绿豆糕&quot;&gt;还行，但太黏了，不及我二姑妈做的呀！&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life052904.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;越南春卷&quot;&gt;野味，唯一一个比较多肉的，满足我食肉兽欲望的菜式&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life052903.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;招牌越南寿司&quot;&gt;感觉不到好味之处，只是各种酸甜香辣还有些芒果肉混在其中，这就是越南菜让人回味的特点。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life052906.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;美奈小馆&quot;&gt;&lt;br&gt;最后一晚去了科技园旁边的一个西餐厅，点了双人套餐，吃了两份大扒还有自助，吃得也是够称的，那块香喷喷的牛肋确实是值得再尝，8分熟旁边拌上椒盐和蛋黄酸甜汁，好吃到不要不要的。还带宝宝第一次体验了一下沐足，确实有点玩过头了，回去要好好工作了！&lt;/p&gt;
&lt;h3 id=&quot;重回理大&quot;&gt;&lt;a href=&quot;#重回理大&quot; class=&quot;headerlink&quot; title=&quot;重回理大&quot;&gt;&lt;/a&gt;重回理大&lt;/h3&gt;&lt;h4 id=&quot;周六&quot;&gt;&lt;a href=&quot;#周六&quot; class=&quot;headerlink&quot; title=&quot;周六&quot;&gt;&lt;/a&gt;周六&lt;/h4&gt;&lt;p&gt;早上：回到学校的感觉真好，劳累了两个多月，是要好好做些喜欢的事情，比如说看个球什么的，今年常规赛勇士太猛，在81场常规赛里拿到了73场胜利，破了当年乔丹带领的公牛队的联盟记录。库里也大丰收，拿到了常规赛MVP，常规赛三分球也破了联盟记录了，可谓了人在巅峰的丰收年了，上一年拿到了总冠军，今年不知道是否也能冲击卫冕。早上起来看的是热火对阵猛龙，不得不说今年猛龙确实进步神速，双枪德罗赞和小钢炮罗瑞发挥出色，高歌挺进了东决，奈何詹姆斯、欧文和勒夫三巨头的骑士融合得和谐有节奏，事实上还是差距许多，特别赞许今年詹姆斯的球风和领袖气质日趋成熟稳重，主动的助攻和分球，使得除了猛龙的两场发挥出色的比赛，可谓一路在季后赛上无人能挡的，冲击总冠军的势头也是十分的猛。詹姆斯的身体素质和技术还是十分的强悍，联盟第一人确实不是儿戏，基本上两个人也防不住，看的这一场三巨头基本上也是三双，早早就结束悬念了。&lt;/p&gt;
&lt;p&gt;中午：PolyU的Research OpenDay,看到老师和同学们在展厅展示的DEMO，有分布式机器人阵列、老姐的云计算、我们的深度场景重建和辉辉的HDR；大张组的生物识别类的根据呼吸检查糖尿病、掌纹特征打卡、根据舌头识别之类的；一些基于社交信息的数据挖掘、手势控制飞机、游戏等等，看到高校里丰富多彩的应用也是欣喜十足，回来继续做学术的感觉也是真好。下午和新栋、刘日升老师一起去射射篮，单挑一下。&lt;/p&gt;
&lt;p&gt;晚上： 研究了一下HEXO，缘起看到中大师兄小土刀的博客，感觉自己也应该记录一下生活，多花点生活记录每一点点滴，可以看到自己的人生轨迹，也在写作中不断沉淀思考，做更好的自我吧。把分类和图片设置大小的做起来，七牛那可以帮助把图片设成对应所需要的大小,用&lt;a href=&quot;http://developer.qiniu.com/code/v6/api/kodo-api/image/imageview2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;imageView2&lt;/a&gt;:&lt;br&gt;&lt;figure class=&quot;highlight dts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;imageView2/&lt;span class=&quot;params&quot;&gt;&amp;lt;mode&amp;gt;&lt;/span&gt;&lt;span class=&quot;meta-keyword&quot;&gt;/w/&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;LongEdge&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;meta-keyword&quot;&gt;/h/&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;ShortEdge&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;meta-keyword&quot;&gt;/format/&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;Format&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;meta-keyword&quot;&gt;/interlace/&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;Interlace&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;meta-keyword&quot;&gt;/q/&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;Quality&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;meta-keyword&quot;&gt;/ignore-error/&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;ignoreError&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;周日&quot;&gt;&lt;a href=&quot;#周日&quot; class=&quot;headerlink&quot; title=&quot;周日&quot;&gt;&lt;/a&gt;周日&lt;/h4&gt;&lt;p&gt;早上：好不容易8点钟爬起来了，想着好好学习，奈何雷霆对阵勇士的GAME6,现在雷霆几乎要淘汰勇士了，身为勇士的支持者，当然需要支持一下球队。这个系列赛可以看到二少的成长，球风趋于稳重，进攻侵略性不变之余，投篮和技术都在渐进，基本上可以称为联盟最强突破控卫了。雷霆这边一帮人等身体素质都是好得一比，各种篮底进攻，前场篮板球都是如探囊取物来着。反观勇士这边打得很累，各种掩护后依然没有出手空间，各种突破后屡遭封盖或者近距离投射但面对着大山大墙却命中不高。所幸的是今天汤神发挥又再超神，一记又一记的三分球帮勇士把命续到最好两分钟，两队打平。勇士下半场的三分手感火热，几乎没有投失，雷霆的篮底冲击和中投依然是十分稳定，两队不断飚分上扬，知道最后两分钟，汤神再来一记三分，最好11记三分拿到全场最高的41分还破了季后赛三分最多的联盟记录。雷霆士气关键时刻在主场士气反而有点低落，威少连续两个末节关键失误断送了在主场淘汰勇士的机会，最后一场抢七大战将会在勇士展开，我只想说主场优势还是很明显，这很可能是我想看到的最终骑士对阵勇士的大战，三巨头大战水花，两队的三分都是十分强劲，而骑士这边有詹姆斯相对来说，全队实力更为稳定和全面。&lt;/p&gt;
&lt;p&gt;下午： 去整理一下以前的相片和文字，前移到HEXO这里来吧，在这里记录我的生活，展示我的人生，思考奋斗和调整我的方向&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life052908.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;理大小广场的一角&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life052909.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;理大校道&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life052910.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;设计大楼&quot;&gt;&lt;br&gt;晚上： 约了宝宝大人一起去看五月天的演唱会，十分期待，相信一定是一个难忘的体验，第一场就是五月天了，肯定要挥泪青春岁月的节奏了！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;在深圳最后一周&quot;&gt;&lt;a href=&quot;#在深圳最后一周&quot; class=&quot;headerlink&quot; title=&quot;在深圳最后一周&quot;&gt;&lt;/a&gt;在深圳最后一周&lt;/h3&gt;&lt;p&gt;从今年的3月中旬去到了相机部门里面去实习，认识了很多牛人，迄今为止一次在公司里比较真切完整的体验，几乎足足有三个月。（不想说有多苦，宝宝心里苦，宝宝认真上班）总结来说并没有进步很多，但确实学到不少，企业的管理模式，内部沟通机制，安全机制等，我住在新安的宿舍，每天上班需要40分钟，过着早上10点上班，中午12点半点外卖，午休到2点，晚饭6点吃完，7点休息聊天看书，8点回去散漫工作的日子。虽然紧张，但规律有节奏的生活带来的好处却是有目共睹的。很庆幸认识了共同入职的新伙伴，陪我度
    
    </summary>
    
      <category term="Life" scheme="https://csrjtan.github.io/categories/Life/"/>
    
    
      <category term="感想" scheme="https://csrjtan.github.io/tags/%E6%84%9F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>Demosaic Comparison</title>
    <link href="https://csrjtan.github.io/2016/05/16/ColorDemosaicComparison/"/>
    <id>https://csrjtan.github.io/2016/05/16/ColorDemosaicComparison/</id>
    <published>2016-05-16T13:12:12.000Z</published>
    <updated>2016-06-01T14:50:34.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Demosaic-Comparison&quot;&gt;&lt;a href=&quot;#Demosaic-Comparison&quot; class=&quot;headerlink&quot; title=&quot;Demosaic Comparison&quot;&gt;&lt;/a&gt;Demosaic Comparison&lt;/h3&gt;&lt;p&gt;  进入公司2个月多了，对于ISP和Demosaic才刚起步，赶紧把CNN掌握好，做出点工作来吧！&lt;/p&gt;
&lt;p&gt;总体来说， nnr和sht直接插值，锯齿感太强，Lu和NAT的方法效率不行，然后感觉AP和SA的PSNR虚高，实际效果不行。可以考虑测一下CPSNR和CIE L&lt;em&gt;a&lt;/em&gt;b或者锯齿等其它指标。&lt;br&gt;  下面比较一下AP[1], SA,LCC1和DLMMSE[2], RI[3]的结果。&lt;/p&gt;
&lt;p&gt;[1] SA, &lt;a href=&quot;http://www.csee.wvu.edu/~xinl/demo/demosaic.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.csee.wvu.edu/~xinl/demo/demosaic.html&lt;/a&gt;&lt;br&gt;[2] DLMMSE, Zhang L, Wu X. Color demosaicking via directional linear minimum mean square-error estimation[J]. Image Processing, IEEE Transactions on, 2005, 14(12): 2167-2178.&lt;br&gt;[3] RI, &lt;a href=&quot;http://www.ok.ctrl.titech.ac.jp/res/DM/RI.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.ok.ctrl.titech.ac.jp/res/DM/RI.html&lt;/a&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CDC-5281.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CDC-5282.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CDC-5283.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;结果总结&quot;&gt;&lt;a href=&quot;#结果总结&quot; class=&quot;headerlink&quot; title=&quot;结果总结&quot;&gt;&lt;/a&gt;结果总结&lt;/h3&gt;&lt;p&gt;总体来说，这些方法都在大部分地方插值准确，肉眼不容易区分，都没有发现有锯齿等明显不和谐区域的出现。主要是在变化剧烈的边缘和光亮变化强的区域出现Artifacts。时间上以SA、AP、LCC1、RI占优，效果上以DLMMSE和RI最优。&lt;br&gt;从实现来说LCC1是简单高效的，AP做了一个映射也是可以的，DLMMSE主要做了PCA的分解，SA是有迭代的求解，RI有待进一步学习。&lt;/p&gt;
&lt;h3 id=&quot;ImageJ&quot;&gt;&lt;a href=&quot;#ImageJ&quot; class=&quot;headerlink&quot; title=&quot;ImageJ&quot;&gt;&lt;/a&gt;ImageJ&lt;/h3&gt;&lt;p&gt;看了不少的论文和代码了，及时地来总结一下吧，马上又要开展对于DL的学习了。先来ImageJ的吧？把JAva各个类和用例都看了，然而并没有派上用场，所以应该吸取教训，先学足够的，马上就用。不然看完也没有机会用，看完也用不上，看完也还是不会用，对于CODING这样的事情来说就是实用至上，不断使用行动，付出并成为一种习惯，从而变成一种轻松的反射或者习惯，最后培养成为爱好。ImageJ主要是一个科学图像的小插件，由JAVA框架开发，可以不依赖系统，自带JRE。一般分为MARCRO,SCRIPTS等，做些命令脚本批量处理之类的。系统自带功能包括图像基本操作、处理和分析，强大之处在于用户可以开发插件Plugin快速量身定做图像处理工具。&lt;/p&gt;
&lt;p&gt;Plugin分为普通plugin，图片filter plugin以及堆 stack plugin。先setup了，获得指定图片类型后，然后用run()方法对读入的图片进行处理。总体还是看一下一本图像处理ImageJ实战和ImageJ手册吧，要用就回头去看一下。现在先放一放ImageJ吧，主力还是在Matlab和MatConv,高层的调用可以帮助开发者在思维和方法层面上更专注，不然用c和c++这样的还是需要花费力气在数据结构和指针，语言组织上，确实吃力不讨好的事情。&lt;/p&gt;
&lt;h3 id=&quot;ISP&quot;&gt;&lt;a href=&quot;#ISP&quot; class=&quot;headerlink&quot; title=&quot;ISP&quot;&gt;&lt;/a&gt;ISP&lt;/h3&gt;&lt;p&gt;   再者说一下关于ISP的流程吧，进来后发现组里是做相机的，包括从硬到软的各个层面，硬件-&amp;gt;FPGA-&amp;gt;嵌入式-&amp;gt;图像算法-&amp;gt;IQ等等。这里说一下相机出图的ISP流程，从RAW到用户看到的JPEG： RAW-&amp;gt;BLC-&amp;gt;LSC-&amp;gt;AWB-&amp;gt;DEMOSAIC-&amp;gt;DENOISE-&amp;gt;CC-&amp;gt;GAMMA-&amp;gt;JPEG，里面每个算法和相机原理都是进来才学习了解到的。希望对以后有用。&lt;/p&gt;
&lt;h3 id=&quot;Demosaic&quot;&gt;&lt;a href=&quot;#Demosaic&quot; class=&quot;headerlink&quot; title=&quot;Demosaic&quot;&gt;&lt;/a&gt;Demosaic&lt;/h3&gt;&lt;p&gt;   然后回到今天要记录的重点，Demosaic的papers和学习总结：首先看了Comparison和Survey这两篇关于去马赛克发展的重要文章，科普了不少要点：比如说如何用空间相关信息和谱间相关信息来恢复Downsample后的信息，讲述了主要包括空域和谱域的方法，color ratio and color difference的基本假设。空域上利用插值，bilinear以及梯度适应的adaptive gradient interpolation，还有转到其他频域如傅里叶和小波上面去做滤波的，根据不同频段的相关性来进行近似恢复。这里着重说一下影响力比较高的文章，首先是Alternating Projection：将谱间的强相关性信息映射到一个POCS(Project onto convex set）里面，然后求解convex问题得到一个较优的像素解来作为插值。然后是Succesive Approximate是将谱间差值的difference变成一个由局部迭代成局部最优的过程，先从简单的插值后，然后迭代更新color difference从而到达局部较优的位置。SSD是利用增强自相关性，还没仔细了解。还有利用非局部相似块的方法，如定义Non-local Similarity，如果它表达的相关性（梯度小）比当前块强，则用该块作为当前块的插值结果。然后我老板的两个比较突破性的论文：DLMMSE提出了去马赛克噪声，然后引入去噪模型，转换成求解最优color difference的方法，里面有些数学证明还待细看，该工作直接把PSNR提高了5db。后来的LDI_NAT也是经过LDI的梯度插值后，然后使用PCA的方法分解构造出sparse模型，从而去掉artifacts. 再后来的方法就包括一些sparse模型，dictionary learning，tv等，还有Tokyo Insitute 的RI方法，利用残差的方法，快速有效进行去马赛克。&lt;/p&gt;
&lt;h3 id=&quot;CNN&quot;&gt;&lt;a href=&quot;#CNN&quot; class=&quot;headerlink&quot; title=&quot;CNN&quot;&gt;&lt;/a&gt;CNN&lt;/h3&gt;&lt;p&gt;   后面用凯爷的网络跑了一下CNN的结果，目测要比Tokyo Institute的RI要好，这里用的是5层卷积神经网络，使用柯德IQA的库中500多张图片作为TrainingSets,Kodak的24张图作为TestSets，使用的是MatconvNet的框架。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Demosaic-Comparison&quot;&gt;&lt;a href=&quot;#Demosaic-Comparison&quot; class=&quot;headerlink&quot; title=&quot;Demosaic Comparison&quot;&gt;&lt;/a&gt;Demosaic Comparison&lt;/h3&gt;&lt;p&gt;  进入公司2个月多了，对于ISP和Demosaic才刚起步，赶紧把CNN掌握好，做出点工作来吧！&lt;/p&gt;
&lt;p&gt;总体来说， nnr和sht直接插值，锯齿感太强，Lu和NAT的方法效率不行，然后感觉AP和SA的PSNR虚高，实际效果不行。可以考虑测一下CPSNR和CIE L&lt;em&gt;a&lt;/em&gt;b或者锯齿等其它指标。&lt;br&gt;  下面比较一下AP[1], SA,LCC1和DLMMSE[2], RI[3]的结果。&lt;/p&gt;
&lt;p&gt;[1] SA, &lt;a href=&quot;http://www.csee.wvu.edu/~xinl/demo/demosaic.html&quot;&gt;http://www.csee.wvu.edu/~xinl/demo/demosaic.html&lt;/a&gt;&lt;br&gt;[2] DLMMSE, Zhang L, Wu X. Color demosaicking via directional linear minimum mean square-error estimation[J]. Image Processing, IEEE Transactions on, 2005, 14(12): 2167-2178.&lt;br&gt;[3] RI, &lt;a href=&quot;http://www.ok.ctrl.titech.ac.jp/res/DM/RI.html&quot;&gt;http://www.ok.ctrl.titech.ac.jp/res/DM/RI.html&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Tech" scheme="https://csrjtan.github.io/categories/Tech/"/>
    
    
      <category term="paper Demosaic" scheme="https://csrjtan.github.io/tags/paper-Demosaic/"/>
    
  </entry>
  
  <entry>
    <title>Ted《光荣与梦想》</title>
    <link href="https://csrjtan.github.io/2016/04/21/ted-glories-and-dream/"/>
    <id>https://csrjtan.github.io/2016/04/21/ted-glories-and-dream/</id>
    <published>2016-04-21T08:48:13.000Z</published>
    <updated>2016-06-01T14:52:06.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;特奥会冠军讲解智障人士生活&quot;&gt;&lt;a href=&quot;#特奥会冠军讲解智障人士生活&quot; class=&quot;headerlink&quot; title=&quot;特奥会冠军讲解智障人士生活&quot;&gt;&lt;/a&gt;特奥会冠军讲解智障人士生活&lt;/h3&gt;&lt;p&gt;首先看完一个感动的TED TALK，关于社会对智障人士的看法，一位特奥会的冠军以身作则提及他们的生活，受歧视，然特奥会提供了一个平台，展示属于他们生命的价值，他们的梦想和他们的尊严。相比于我们，诚然他们的舞台太小，但我们应该看到他们所作的努力。对于自己，四肢健全，家庭幸福安康，应该有更多的理由去追逐幸福，有时候不要一直想着缺少的，应该惦记自己所拥有的，记得感恩。并去勇敢自信的追逐自己所想所求，不要害怕失败，不要害怕别人的目光，勇敢的be yourself.虽然那可能不容易，但人生只有一次，时间是宝贵的&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;，追逐自己所看重的东西吧。成长在于做减法，在于专注，努力。奉献，寻找自己的价值，承担应有的价值。看到了不丹的视频，信仰让他们满足，与自然的好好相处让他们轻松。自己看得多可能欲望也多，但有时候压抑一下自己的欲望，追逐真正渴求的，也是一种成熟，我不知道是否经历过才算真的看透，但有些事情觉得经历了也不一定幸福，所以还是应该保有自己，一直是不断地思考迷茫，殊不知其实自己静不下来，无法专注于自己的学业。我认为应当认真一丝不苟地完成自己的任务，才是最大的意义，多去看有用实用的书，做有价值的事情，珍惜自己有的机会。完成好课程，做好实习的任务，要有一个研究生的觉悟。&lt;/p&gt;
&lt;p&gt;另外，追逐幸福的要素：&lt;br&gt;1.找到喜欢的工作，高收入，受到社会的尊重&lt;br&gt;2.减少上下班耗费的时间，有充足的社交时间&lt;br&gt;3.对国家和社会有政治热情，参与度。&lt;/p&gt;
&lt;h3 id=&quot;笔记本里的诗&quot;&gt;&lt;a href=&quot;#笔记本里的诗&quot; class=&quot;headerlink&quot; title=&quot;笔记本里的诗&quot;&gt;&lt;/a&gt;笔记本里的诗&lt;/h3&gt;&lt;p&gt;不论曾经的彼此多么幼稚，多么可笑&lt;br&gt;终有一天我们都变得成熟；&lt;br&gt;也终有一天，我们都会老去；&lt;br&gt;可是，却没有人可以永远不长大，&lt;br&gt;却没有人可以永远年轻，&lt;br&gt;成熟，有时候会让人心痛、很无奈。&lt;br&gt;那个时候才会懂得–&lt;br&gt;爱情本不是件该执着的事情。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/poem5291.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;特奥会冠军讲解智障人士生活&quot;&gt;&lt;a href=&quot;#特奥会冠军讲解智障人士生活&quot; class=&quot;headerlink&quot; title=&quot;特奥会冠军讲解智障人士生活&quot;&gt;&lt;/a&gt;特奥会冠军讲解智障人士生活&lt;/h3&gt;&lt;p&gt;首先看完一个感动的TED TALK，关于社会对智障人士的看法，一位特奥会的冠军以身作则提及他们的生活，受歧视，然特奥会提供了一个平台，展示属于他们生命的价值，他们的梦想和他们的尊严。相比于我们，诚然他们的舞台太小，但我们应该看到他们所作的努力。对于自己，四肢健全，家庭幸福安康，应该有更多的理由去追逐幸福，有时候不要一直想着缺少的，应该惦记自己所拥有的，记得感恩。并去勇敢自信的追逐自己所想所求，不要害怕失败，不要害怕别人的目光，勇敢的be yourself.虽然那可能不容易，但人生只有一次，时间是宝贵的
    
    </summary>
    
      <category term="Life" scheme="https://csrjtan.github.io/categories/Life/"/>
    
    
      <category term="Ted" scheme="https://csrjtan.github.io/tags/Ted/"/>
    
  </entry>
  
  <entry>
    <title>leetcode15</title>
    <link href="https://csrjtan.github.io/2016/04/17/leetcode15/"/>
    <id>https://csrjtan.github.io/2016/04/17/leetcode15/</id>
    <published>2016-04-17T09:20:41.000Z</published>
    <updated>2016-06-01T14:50:50.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;3Sum&quot;&gt;&lt;a href=&quot;#3Sum&quot; class=&quot;headerlink&quot; title=&quot;3Sum&quot;&gt;&lt;/a&gt;3Sum&lt;/h3&gt;&lt;p&gt;问题：给出一个数组S，找出里面三个数组成a+b+c = 0,且a&amp;lt;b&amp;lt;c,并且是唯一triplets&lt;/p&gt;
&lt;p&gt;思路：先排序，从两边逼近中间求解twoSum。最开始是从前往后匹配，发现超时了。现在复杂度在O(n^2)&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vector&amp;lt;vector&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;gt; threeSum(vector&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//排序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;std::sort(&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;.begin(),&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;.end());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vector&amp;lt;vector&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; len = &lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;len;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; target = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;- &lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; start = i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, end = len - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//twoSum求解&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(start&amp;lt;end)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[start]+&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[end]==target)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            vector&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt; solution;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            solution.push_back(&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            solution.push_back(&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[start]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            solution.push_back(&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[end]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result.push_back(solution);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            start++,end--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//当前一位和后一位是一样的时候，直接跳过这一层的判断&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(start&amp;lt;end&amp;amp;&amp;amp;&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[start]==&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[start&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]) start++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(start&amp;lt;end&amp;amp;&amp;amp;&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[end] ==&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[end+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]) end--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//两边判断逼近&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[start]+&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[end]&amp;lt;target)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            start++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            end--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//时刻判断第一位a是否重复&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(i&amp;lt;len&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[i]==&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;3ClosestSum&quot;&gt;&lt;a href=&quot;#3ClosestSum&quot; class=&quot;headerlink&quot; title=&quot;3ClosestSum&quot;&gt;&lt;/a&gt;3ClosestSum&lt;/h3&gt;&lt;p&gt;问题：求三个和的最相近近似解&lt;br&gt;思路：转化成求两个和离target的最相近似解&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// return the twoSumClosest sum&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;twoSumClosest&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(vector&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; &amp;amp;sortedNum,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; start,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; head = start , tail = sortedNum.size()&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; res = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,dis = INT_MAX;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//依据最近距离返回res&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(head &amp;lt; tail)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; tmp = sortedNum[head]+ sortedNum[tail];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(tmp&amp;lt;&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;-tmp&amp;lt;dis)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                res = tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dis = &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;-tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            head++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(tmp &amp;gt; &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(tmp-&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;&amp;lt;dis)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                res = tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dis = tmp-&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tail--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;threeSumClosest&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(vector&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; &amp;amp;num,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n = num.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sort(num.begin(),num.end());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; res,dis = INT_MAX;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;n&lt;span class=&quot;number&quot;&gt;-2&lt;/span&gt;;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; target2 = &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;-num[i],tmpdis;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; tmpres = twoSumClosest(num,i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,target2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 若有更近解，更新res&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;((tmpdis = abs(tmpres-target2))&amp;lt;dis)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res = tmpres + num[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dis = tmpdis;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// 有一样解即刻返回&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(res==&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;4Sum&quot;&gt;&lt;a href=&quot;#4Sum&quot; class=&quot;headerlink&quot; title=&quot;4Sum&quot;&gt;&lt;/a&gt;4Sum&lt;/h3&gt;&lt;p&gt;问题： 4个和为target&lt;br&gt;思路：2+2的方法，遍历前两个，然后求解twoSum问题&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vector&amp;lt;vector&amp;lt;int&amp;gt; &amp;gt; fourSum(vector&amp;lt;int&amp;gt; &amp;amp;num, int target) {
    int n = num.size();
    vector&amp;lt;vector&amp;lt;int&amp;gt; &amp;gt; res;
    sort(num.begin(), num.end());
    for(int i = 0; i &amp;lt; n-3; i++)
    {
        if(i &amp;gt; 0 &amp;amp;&amp;amp; num[i] == num[i-1])continue;//防止第一个元素重复
        for(int j = i+1; j &amp;lt; n-2; j++)
        {
            if(j &amp;gt; i+1 &amp;amp;&amp;amp; num[j] == num[j-1])continue;//防止第二个元素重复
            int target2 = target - num[i] - num[j];
            int head = j+1, tail = n-1;
            //Two Sum Problem
            while(head &amp;lt; tail)
            {
                int tmp = num[head] + num[tail];
                if(tmp &amp;gt; target2)
                    tail--;
                else if(tmp &amp;lt; target2)
                    head++;
                else
                {
                    res.push_back(vector&amp;lt;int&amp;gt;{num[i], num[j], num[head], num[tail]});
                    //为了防止出现重复的二元组，使结果等于target2
                    int k = head+1;
                    while(k &amp;lt; tail &amp;amp;&amp;amp; num[k] == num[head])k++;
                    head = k;

                    k = tail-1;
                    while(k &amp;gt; head &amp;amp;&amp;amp; num[k] == num[tail])k--;
                    tail = k;
                }
            }
        }
    }
    return res;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;```&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;3Sum&quot;&gt;&lt;a href=&quot;#3Sum&quot; class=&quot;headerlink&quot; title=&quot;3Sum&quot;&gt;&lt;/a&gt;3Sum&lt;/h3&gt;&lt;p&gt;问题：给出一个数组S，找出里面三个数组成a+b+c = 0,且a&amp;lt;b&amp;lt;c,并且是唯一triplets&lt;/p&gt;
&lt;p&gt;思路：先排序，从两边逼近中间求解twoSum。最开始是从前往后匹配，发现超时了。现在复杂度在O(n^2)&lt;br&gt;
    
    </summary>
    
      <category term="Tech" scheme="https://csrjtan.github.io/categories/Tech/"/>
    
    
      <category term="leetcode" scheme="https://csrjtan.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>leetcode7-14</title>
    <link href="https://csrjtan.github.io/2016/04/13/leetcode7-14/"/>
    <id>https://csrjtan.github.io/2016/04/13/leetcode7-14/</id>
    <published>2016-04-13T07:52:37.000Z</published>
    <updated>2016-06-01T14:51:09.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;leetcode7&quot;&gt;&lt;a href=&quot;#leetcode7&quot; class=&quot;headerlink&quot; title=&quot;leetcode7&quot;&gt;&lt;/a&gt;leetcode7&lt;/h4&gt;&lt;p&gt;问题：逆序输出INTEGER&lt;br&gt;思路：分为正负，然后用模和除来一位位逆序输出&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;int reverse(int &lt;span class=&quot;keyword&quot;&gt;x&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//使用long long以方便边界处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       long long i = &lt;span class=&quot;keyword&quot;&gt;x&lt;/span&gt;%&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       int &lt;span class=&quot;keyword&quot;&gt;j&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;j&lt;/span&gt;==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; i&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;((&lt;span class=&quot;keyword&quot;&gt;j&lt;/span&gt;/=&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)!=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#123;	&lt;span class=&quot;comment&quot;&gt;//从低位往高位运算结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           i = i*&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;j&lt;/span&gt;%&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;//边界判断&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(i&amp;gt;&lt;span class=&quot;number&quot;&gt;2147483647&lt;/span&gt; || i&amp;lt;-&lt;span class=&quot;number&quot;&gt;2147483647&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; i&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;leetcode8&quot;&gt;&lt;a href=&quot;#leetcode8&quot; class=&quot;headerlink&quot; title=&quot;leetcode8&quot;&gt;&lt;/a&gt;leetcode8&lt;/h4&gt;&lt;p&gt;问题：String to Integer(ATOI)&lt;/p&gt;
&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; myAtoi(string &lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//遇到空格跳过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;[i]==&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//区分正负&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; flag=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;[i]==&lt;span class=&quot;string&quot;&gt;&#39;+&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;    flag = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;[i]==&lt;span class=&quot;string&quot;&gt;&#39;-&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;    flag = &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;[i]&amp;gt;=&lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;&amp;amp;&amp;amp;&lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;[i]&amp;lt;=&lt;span class=&quot;string&quot;&gt;&#39;9&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	&lt;span class=&quot;comment&quot;&gt;//用long long方便判断溢出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; res =&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res += (&lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;[i]-&lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//string转换成int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;[i]&amp;gt;=&lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;[i]&amp;lt;=&lt;span class=&quot;string&quot;&gt;&#39;9&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                res = res *&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; +(&lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;[i]-&lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(res&amp;gt;INT_MAX)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; flag==&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;?INT_MAX:INT_MIN;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res = res * flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;leetcode9&quot;&gt;&lt;a href=&quot;#leetcode9&quot; class=&quot;headerlink&quot; title=&quot;leetcode9&quot;&gt;&lt;/a&gt;leetcode9&lt;/h4&gt;&lt;p&gt;问题：判断integer是否回文&lt;br&gt;&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bool isPalindrome(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//不考虑负数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (x&amp;lt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;div&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//最大除项&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;((x/&lt;span class=&quot;keyword&quot;&gt;div&lt;/span&gt;)&amp;gt;=&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;div&lt;/span&gt;*=&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(x&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; l = x /&lt;span class=&quot;keyword&quot;&gt;div&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; r = x %&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(l!=r)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//reduce left and right&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//如果一致，同时左右一起消去&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            x = x%&lt;span class=&quot;keyword&quot;&gt;div&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;div&lt;/span&gt;/=&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;leetcode10&quot;&gt;&lt;a href=&quot;#leetcode10&quot; class=&quot;headerlink&quot; title=&quot;leetcode10&quot;&gt;&lt;/a&gt;leetcode10&lt;/h4&gt;&lt;p&gt;问题：正则匹配,.表示任意字母，*表示任意个数&lt;br&gt;&lt;a href=&quot;http://articles.leetcode.com/regular-expression-matching&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;作者回答&lt;/a&gt;&lt;br&gt;这个问题是正则匹配的问题，比较复杂，是一个状态机匹配的问题，可以用递归去求解。&lt;br&gt;&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; bool isMatch(string &lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;, string p) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&lt;span class=&quot;comment&quot;&gt;//空串匹配&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (p[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] == &#39;\&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] == &#39;\&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&#39;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//遇到的是非&#39;*&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (p[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] != &#39;*&#39;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//字符匹配或者匹配&#39;.&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ((p[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] == &lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]) || (p[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] == &#39;.&#39; &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] != &#39;\&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&#39;)) &amp;amp;&amp;amp; isMatch(&lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;.substr(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;.length() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), p.substr(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, p.length() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//遇到&#39;*&#39;,使用while去递归尝试搜索每一种可能的情况&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ((p[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] == &lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]) || (p[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] == &#39;.&#39; &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] != &#39;\&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&#39;))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isMatch(&lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;, p.substr(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,p.length()-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; true&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;=&lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;.substr(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;.length()-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//跨过&#39;*&#39;的字符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; isMatch(&lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;, p.substr(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,p.length()-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;leetcode11&quot;&gt;&lt;a href=&quot;#leetcode11&quot; class=&quot;headerlink&quot; title=&quot;leetcode11&quot;&gt;&lt;/a&gt;leetcode11&lt;/h4&gt;&lt;p&gt;问题：给一组正数数组，任意两个数组元素$a_i,a_j$,使得有最大面积$S=min(a_i,a_j)*(j-i)&lt;/p&gt;
&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//求出最大的装水面积&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; maxArea(vector&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;height&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; start = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;height&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;()&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; maxV = INT_MIN;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;//从两边向中间收拢&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;while&lt;/span&gt;(start&amp;lt;&lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; contains = &lt;span class=&quot;built_in&quot;&gt;min&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;height&lt;/span&gt;[&lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt;],&lt;span class=&quot;built_in&quot;&gt;height&lt;/span&gt;[start]) * (&lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt;-start);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           maxV = &lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(maxV,contains);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//左比右的板短，移动左边&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;built_in&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;height&lt;/span&gt;[start]&amp;lt;&lt;span class=&quot;built_in&quot;&gt;height&lt;/span&gt;[&lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               start++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;built_in&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt;--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; maxV;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;leetcode12&quot;&gt;&lt;a href=&quot;#leetcode12&quot; class=&quot;headerlink&quot; title=&quot;leetcode12&quot;&gt;&lt;/a&gt;leetcode12&lt;/h4&gt;&lt;p&gt;问题：INTEGER TO ROMAN&lt;br&gt;思路：关键在于罗马数制和阿拉伯数制的映射，分为M,D,C,L,V,I。&lt;br&gt;由罗马字母的数值大小取模匹配。&lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;intToRoman&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; num&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (num &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; num &amp;lt; &lt;span class=&quot;number&quot;&gt;4000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; res = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//建立映射&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; symbol[] = &amp;#123; &lt;span class=&quot;string&quot;&gt;&quot;M&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;CM&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;D&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;CD&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;XC&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;L&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;XL&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;X&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;IX&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;V&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;IV&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;I&quot;&lt;/span&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;[] = &amp;#123; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;900&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (num&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; (&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;)/&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)); i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#123;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;comment&quot;&gt;//将integer由罗马字母的大到小匹配，然后输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (num / &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;[i]&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; (num / &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;[i]); j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						res += symbol[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					num %= &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;leetcode13&quot;&gt;&lt;a href=&quot;#leetcode13&quot; class=&quot;headerlink&quot; title=&quot;leetcode13&quot;&gt;&lt;/a&gt;leetcode13&lt;/h4&gt;&lt;p&gt;问题：ROMAN TO INTEGER&lt;br&gt;最简思路：罗马字母里，左比右小，则为右减左；左比右大，则为右加左。&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//遍历罗马字串，左和右是指罗马字值M,D,C,X,V,I&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	res+= res-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*&lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	res+= res+&lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//我的思路：先匹配两字的，再匹配一字的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;romanToInt&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; s&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; res=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; symbol[] = &amp;#123; &lt;span class=&quot;string&quot;&gt;&quot;M&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;CM&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;D&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;CD&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;XC&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;L&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;XL&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;X&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;IX&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;V&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;IV&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;I&quot;&lt;/span&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;[] = &amp;#123; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;900&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; s.length(); i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; flag = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;s,i,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//First find the two in advance&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; (&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(symbol) / &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(symbol[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])); j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// match symbol&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;a href=&quot;http://match.compare&quot; class=&quot;test test-url&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;match.compare&lt;/a&gt;(symbol[j]) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				res += &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				flag = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (flag == &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//find the one then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;match1&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;s, i, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; (&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(symbol) / &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(symbol[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])); j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;a href=&quot;http://match1.compare&quot; class=&quot;test test-url&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;match1.compare&lt;/a&gt;(symbol[j]) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				res += &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (res &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; res &amp;lt; &lt;span class=&quot;number&quot;&gt;4000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;leetcode14&quot;&gt;&lt;a href=&quot;#leetcode14&quot; class=&quot;headerlink&quot; title=&quot;leetcode14&quot;&gt;&lt;/a&gt;leetcode14&lt;/h4&gt;&lt;p&gt;问题：Longest Common Prefix，求字符串组里面，公共有的前缀子串。&lt;br&gt;思路：这个是公共子串的特例，前缀子串，公共子串的学问很深，可以参考&lt;a href=&quot;http://www.cnblogs.com/ider/p/longest-common-substring-problem-optimization.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文章&lt;/a&gt;，里面使用一个个起始字符暴力匹配O(N^3),和DP的O(N^2)等。&lt;br&gt;这个问题也十分有用，可以判断字符串的相似度等等，经典的面试题。&lt;/p&gt;
&lt;figure class=&quot;highlight mel&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; longestCommonPrefix(&lt;span class=&quot;keyword&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;&amp;gt;&amp;amp; strs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//判断边界条件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (strs.&lt;span class=&quot;keyword&quot;&gt;size&lt;/span&gt;() == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (strs.&lt;span class=&quot;keyword&quot;&gt;size&lt;/span&gt;() == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; strs[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; com = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; res = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//先比较两串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; len = strs[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].length() &amp;lt; strs[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].length() ? strs[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].length() : strs[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].length();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; len; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (strs[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][i] == strs[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;][i])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			com += strs[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (strs.&lt;span class=&quot;keyword&quot;&gt;size&lt;/span&gt;() == &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//用common串跟之后每一个串比较，common会越来越短&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; (strs.&lt;span class=&quot;keyword&quot;&gt;size&lt;/span&gt;()); i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		res = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; len = com.length()&amp;lt;strs[i].length() ? com.length() : strs[i].length();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; len; j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (com[j] == strs[i][j])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				res += com[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		com = res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;leetcode7&quot;&gt;&lt;a href=&quot;#leetcode7&quot; class=&quot;headerlink&quot; title=&quot;leetcode7&quot;&gt;&lt;/a&gt;leetcode7&lt;/h4&gt;&lt;p&gt;问题：逆序输出INTEGER&lt;br&gt;思路：分为正负，然后用模和除来一位位逆序输出&lt;br&gt;
    
    </summary>
    
      <category term="Tech" scheme="https://csrjtan.github.io/categories/Tech/"/>
    
    
      <category term="leetcode" scheme="https://csrjtan.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>leetcode3-6</title>
    <link href="https://csrjtan.github.io/2016/04/13/leetcode3-6/"/>
    <id>https://csrjtan.github.io/2016/04/13/leetcode3-6/</id>
    <published>2016-04-13T06:55:42.000Z</published>
    <updated>2016-06-01T14:51:06.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;LeetCode-3&quot;&gt;&lt;a href=&quot;#LeetCode-3&quot; class=&quot;headerlink&quot; title=&quot;LeetCode 3&quot;&gt;&lt;/a&gt;LeetCode 3&lt;/h4&gt;&lt;p&gt;Ques: Find the length of longest substring without repeating characters.&lt;/p&gt;
&lt;p&gt;思路：用table记录出现char字符的次数，256个ASCII字符初始化为-1.如果遇到重复，则记录在table里面，&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;我的代码:&lt;br&gt;&lt;figure class=&quot;highlight q&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; lengthOfLongestSubstring(&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; s) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;tables&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;256&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fill(&lt;span class=&quot;built_in&quot;&gt;tables&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;tables&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;256&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; result=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,lastRepeatedPos=&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for(&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;s.size();i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//当找到重复元素且lastRepeatedPos小于找到重复元素的下表时，更新lastRepeatedPos&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if(&lt;span class=&quot;built_in&quot;&gt;tables&lt;/span&gt;[s[i]]!=&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&amp;amp;&amp;amp;lastRepeatedPos&amp;lt;&lt;span class=&quot;built_in&quot;&gt;tables&lt;/span&gt;[s[i]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                lastRepeatedPos=&lt;span class=&quot;built_in&quot;&gt;tables&lt;/span&gt;[s[i]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//更新最大值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result=&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(result,i-lastRepeatedPos);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//元素插入表中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;tables&lt;/span&gt;[s[i]]=i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;官方解题：&lt;br&gt;&lt;a href=&quot;https://leetcode.com/articles/longest-substring-without-repeating-characters/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeetCode 3 Solution&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;AP-1&quot;&gt;&lt;a href=&quot;#AP-1&quot; class=&quot;headerlink&quot; title=&quot;AP 1&quot;&gt;&lt;/a&gt;AP 1&lt;/h5&gt;&lt;p&gt;暴力破解，但超时了,TC = O(N^3),对于字符串中的每个子串都去扫，是否子串为独立的。&lt;/p&gt;
&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// JAVA VERSION&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; lengthOfLongestSubstring(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; s) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; n = s.length();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; ans = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; n; ++i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; j = i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; j &amp;lt;= n; ++j)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            	&lt;span class=&quot;comment&quot;&gt;//是否存在唯一的子串，记录最长值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (allUnique(s, i, j)) ans = Math.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(ans, j - i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; allUnique(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; s, &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; start, &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; end) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Set&amp;lt;Character&amp;gt; &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashSet&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//将串S从头到尾的放入set匹配一次是否重复&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; i = start; i &amp;lt; end; ++i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Character ch = s.charAt(start);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;.contains(ch)) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;add&lt;/span&gt;(ch);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;AP-2&quot;&gt;&lt;a href=&quot;#AP-2&quot; class=&quot;headerlink&quot; title=&quot;AP 2&quot;&gt;&lt;/a&gt;AP 2&lt;/h5&gt;&lt;p&gt;基于上述，我们重复扫了很多子串，假设固定开始位置一个个扫的话，可以减少重复扫串的运算。这样可以使TC = O(N^2),LEFT-CLOSED AND RIGHT OPEN&lt;/p&gt;
&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// SLIDING WINDOW &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// JAVA VERSION&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public int lengthOfLongestSubstring(String &lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int n = &lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;.length()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;Set&lt;/span&gt;&amp;lt;Character&amp;gt; &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashSet&amp;lt;&amp;gt;()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int ans = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;j&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//固定i，先把j搜完，再加i&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (i &amp;lt; n &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;j&lt;/span&gt; &amp;lt; n) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// try to extend the range [i, j]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;.contains(&lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;.charAt(&lt;span class=&quot;keyword&quot;&gt;j&lt;/span&gt;)))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;.add(&lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;.charAt(&lt;span class=&quot;keyword&quot;&gt;j&lt;/span&gt;++))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ans = Math.max(ans, &lt;span class=&quot;keyword&quot;&gt;j&lt;/span&gt; - i)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;.remove(&lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;.charAt(i++))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ans&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;AP-3&quot;&gt;&lt;a href=&quot;#AP-3&quot; class=&quot;headerlink&quot; title=&quot;AP 3&quot;&gt;&lt;/a&gt;AP 3&lt;/h5&gt;&lt;p&gt;SLDING WINDOW OPTIMIZED, TC=N = O(N)，SC=m=O(1). m为charset大小&lt;br&gt;&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; lengthOfLongestSubstring(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; s) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n = s.length(), ans = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Map&amp;lt;Character, Integer&amp;gt; &lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;(); &lt;span class=&quot;comment&quot;&gt;// current index of character&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;// try to extend the range [i, j]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; n; ++j) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;built_in&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;.containsKey(s.charAt(j))) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               i = Math.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(s.charAt(j)), i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           ans = Math.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(ans, j - i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;put&lt;/span&gt;(s.charAt(j), j + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;LEETCODE-4&quot;&gt;&lt;a href=&quot;#LEETCODE-4&quot; class=&quot;headerlink&quot; title=&quot;LEETCODE 4&quot;&gt;&lt;/a&gt;LEETCODE 4&lt;/h4&gt;&lt;p&gt;QUES: 找两个有序数组中的中位数&lt;br&gt;解法：1.暴力地将两个数组合并然后排序，直接得到中位数&lt;br&gt;     2.求得数组大小，用堆排的合并方法，找到中位数。 复杂度O(log(m+n))&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// My Code&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//合并两个数组排序，再根据大小分为奇偶情况输出中位数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;findMedianSortedArrays&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;amp; nums1, &lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;amp; nums2)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; l1 = nums1.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; l2 = nums2.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;l1;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res.push_back(nums1[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;l2;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res.push_back(nums2[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sort(res.begin(),res.end());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(res.size()%&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;)(res[(l1+l2&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)&amp;gt;&amp;gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]+res[(l1+l2 &amp;gt;&amp;gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)])/&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;)(res[(l1+l2)&amp;gt;&amp;gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;LEETCODE-5&quot;&gt;&lt;a href=&quot;#LEETCODE-5&quot; class=&quot;headerlink&quot; title=&quot;LEETCODE 5&quot;&gt;&lt;/a&gt;LEETCODE 5&lt;/h4&gt;&lt;p&gt;问题： 给一个串S,找出其中最长的回文子串&lt;/p&gt;
&lt;p&gt;官方使用DP的方法以及EXPAND AROUNG CENTER，其中我的代码就是EXPAND AROUND CENTER。还有一个Manacher’s Algorithm,它通过在字母间加#和以$作为起始符，使得串不再分为奇偶的情况，有效地统一起来，核心思想还是基于中央字母的展开策略。&lt;br&gt;&lt;a href=&quot;https://leetcode.com/articles/longest-palindromic-substring/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方解法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我的解法：分为奇偶情况判断，遍历串，寻找以该字符为中心，两边的回文串最大长度，把最长的情况的信息保留，然后返回。TC=O(N^2)&lt;/p&gt;
&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string &lt;/span&gt;longestPalindrome(&lt;span class=&quot;keyword&quot;&gt;string &lt;/span&gt;s) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int len = s.length()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int i,j&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int &lt;span class=&quot;keyword&quot;&gt;subTempLength=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;        int &lt;span class=&quot;keyword&quot;&gt;subMax=0,subMaxIndex=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;        for(i&lt;span class=&quot;number&quot;&gt;=0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;; i&amp;lt; len;i++)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //Odd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            for(j&lt;span class=&quot;number&quot;&gt;=0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;(i-j)&amp;gt;=0&amp;amp;&amp;amp;(i+j)&amp;lt;len;j++)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;meta&quot;&gt;if&lt;/span&gt;(s[i-j]!&lt;span class=&quot;symbol&quot;&gt;=s&lt;/span&gt;[i+j])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;                &lt;span class=&quot;keyword&quot;&gt;subTempLength &lt;/span&gt;= j*&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;meta&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;subTempLength &lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;subMax)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;subMax &lt;/span&gt;= &lt;span class=&quot;keyword&quot;&gt;subTempLength;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;                &lt;span class=&quot;keyword&quot;&gt;subMaxIndex &lt;/span&gt;= i&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //Even&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            for(j&lt;span class=&quot;number&quot;&gt;=0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;(i-j)&amp;gt;=0&amp;amp;&amp;amp;(i+j+1)&amp;lt;len;j++)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;meta&quot;&gt;if&lt;/span&gt;(s[i-j]!&lt;span class=&quot;symbol&quot;&gt;=s&lt;/span&gt;[i+j+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;                &lt;span class=&quot;keyword&quot;&gt;subTempLength &lt;/span&gt;= j*&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; +&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;meta&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;subTempLength &lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;subMax)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;subMax &lt;/span&gt;= &lt;span class=&quot;keyword&quot;&gt;subTempLength;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;                &lt;span class=&quot;keyword&quot;&gt;subMaxIndex &lt;/span&gt;= i&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int startIndex &lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;meta&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;subMax &lt;/span&gt;% &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; =&lt;span class=&quot;number&quot;&gt;=0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            startIndex= &lt;span class=&quot;keyword&quot;&gt;subMaxIndex &lt;/span&gt;- &lt;span class=&quot;keyword&quot;&gt;subMax/2 &lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;meta&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            startIndex = &lt;span class=&quot;keyword&quot;&gt;subMaxIndex &lt;/span&gt;- &lt;span class=&quot;keyword&quot;&gt;subMax/2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;        &lt;span class=&quot;keyword&quot;&gt;string &lt;/span&gt;result(s,startIndex,&lt;span class=&quot;keyword&quot;&gt;subMax);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;        return result&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;LEETCODE-6&quot;&gt;&lt;a href=&quot;#LEETCODE-6&quot; class=&quot;headerlink&quot; title=&quot;LEETCODE 6&quot;&gt;&lt;/a&gt;LEETCODE 6&lt;/h4&gt;&lt;p&gt;问题：ZigZag Conversion&lt;br&gt;一开始没看懂，将串转化成蛇形，然后输出，有点点加密的味道&lt;br&gt;思路：关键理解到蛇形转化的过渡的字母是怎么在数组表示即可&lt;br&gt;&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//My Code&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; convert(&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; s, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; nRows) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;if&lt;/span&gt;(s.length()==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;||nRows &amp;lt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;if&lt;/span&gt;(nRows ==&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//蛇形过渡的位置和行的关系&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * nRows - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//逐行输出蛇形字符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;for&lt;/span&gt;( &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;nRows;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	&lt;span class=&quot;comment&quot;&gt;//根据原长转换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j=i;j&amp;lt;s.length();j+=&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;	&lt;span class=&quot;comment&quot;&gt;//输出竖直的字符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                res+=s[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//输出斜形的字符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;if&lt;/span&gt;(i!=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;amp;&amp;amp;i!=nRows&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&amp;amp;&amp;amp; j+&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-2&lt;/span&gt;*i&amp;lt;s.length())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    res+=s[j+&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-2&lt;/span&gt;*i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;LeetCode-3&quot;&gt;&lt;a href=&quot;#LeetCode-3&quot; class=&quot;headerlink&quot; title=&quot;LeetCode 3&quot;&gt;&lt;/a&gt;LeetCode 3&lt;/h4&gt;&lt;p&gt;Ques: Find the length of longest substring without repeating characters.&lt;/p&gt;
&lt;p&gt;思路：用table记录出现char字符的次数，256个ASCII字符初始化为-1.如果遇到重复，则记录在table里面，&lt;br&gt;
    
    </summary>
    
      <category term="Tech" scheme="https://csrjtan.github.io/categories/Tech/"/>
    
    
      <category term="leetcode" scheme="https://csrjtan.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>leetcode2&amp;3</title>
    <link href="https://csrjtan.github.io/2016/03/07/leetcode2/"/>
    <id>https://csrjtan.github.io/2016/03/07/leetcode2/</id>
    <published>2016-03-07T05:59:56.000Z</published>
    <updated>2016-06-01T14:50:58.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;leetcode2-Add-Two-Numbers&quot;&gt;&lt;a href=&quot;#leetcode2-Add-Two-Numbers&quot; class=&quot;headerlink&quot; title=&quot;leetcode2:Add Two Numbers&quot;&gt;&lt;/a&gt;leetcode2:Add Two Numbers&lt;/h3&gt;&lt;p&gt;I:(2-&amp;gt;4-&amp;gt;3)+(5-&amp;gt;6-&amp;gt;4)&lt;br&gt;O:(7-&amp;gt;0-&amp;gt;8)&lt;br&gt;原则：有进位往后增加，无则扩展&lt;br&gt;&lt;figure class=&quot;highlight ocaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;type&quot;&gt;Definition&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; singly-linked &lt;span class=&quot;built_in&quot;&gt;list&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;ListNode&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *     &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *     &lt;span class=&quot;type&quot;&gt;ListNode&lt;/span&gt; *next;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *     &lt;span class=&quot;type&quot;&gt;ListNode&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; x) : &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt;(x), next(&lt;span class=&quot;type&quot;&gt;NULL&lt;/span&gt;) &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&amp;lt;!--more--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Solution&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;ListNode&lt;/span&gt;* addTwoNumbers(&lt;span class=&quot;type&quot;&gt;ListNode&lt;/span&gt;* l1, &lt;span class=&quot;type&quot;&gt;ListNode&lt;/span&gt;* l2) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;ListNode&lt;/span&gt; dummy(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;ListNode&lt;/span&gt;* p = &amp;amp;dummy;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; cn=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(l1||l2)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; = cn+(l1?l1-&amp;gt;&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)+(l2?l2-&amp;gt;&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cn = &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt;%&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            p-&amp;gt;next = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;ListNode&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            p = p-&amp;gt;next;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(l1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                l1 = l1-&amp;gt;next;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(l2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                l2 = l2-&amp;gt;next;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(cn!=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            p-&amp;gt;next = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;ListNode&lt;/span&gt;(cn);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            p = p-&amp;gt;next;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return dummy.next;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;leetcode3-Longest-Substring-Without-Repeating-Characters&quot;&gt;&lt;a href=&quot;#leetcode3-Longest-Substring-Without-Repeating-Characters&quot; class=&quot;headerlink&quot; title=&quot;leetcode3:Longest Substring Without Repeating Characters&quot;&gt;&lt;/a&gt;leetcode3:Longest Substring Without Repeating Characters&lt;/h3&gt;&lt;p&gt;问题：寻找最大不重复字母的子串长度&lt;br&gt;解法：1.从每个元素找起始无重复字符串，时间复杂度为O(n^3)&lt;br&gt;      2.将没出现的字母放入set，当重复字母出现时，把已有之前的set的字母移除，并记录最长的子串长度&lt;br&gt;      3.用数组不用Map,直接定义一个变量来保存无重复字符串的第一个字符的下标，碰到重复的就更新下标&lt;/p&gt;
&lt;figure class=&quot;highlight q&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; lengthOfLongestSubstring(&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; s) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;tables&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;256&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fill(&lt;span class=&quot;built_in&quot;&gt;tables&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;tables&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;256&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; result=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,lastRepeatedPos=&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for(&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;s.size();i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//当找到重复元素且lastRepeatedPos小于找到重复元素的下表时，更新lastRepeatedPos&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if(&lt;span class=&quot;built_in&quot;&gt;tables&lt;/span&gt;[s[i]]!=&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&amp;amp;&amp;amp;lastRepeatedPos&amp;lt;&lt;span class=&quot;built_in&quot;&gt;tables&lt;/span&gt;[s[i]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                lastRepeatedPos=&lt;span class=&quot;built_in&quot;&gt;tables&lt;/span&gt;[s[i]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//更新最大值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result=&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(result,i-lastRepeatedPos);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//元素插入表中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;tables&lt;/span&gt;[s[i]]=i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;总结：对于一个字符串，如果未出现重复，则该值放入数组中，由于ASCII最多有256种符号，则放入一个大小为256的数组里；如果出现重复的字母，即不为默认的-1，且第一个字符下标比这个重复字母下标小，则更新下标以及最长长度，并将该长度放入对应符号的数组值里。&lt;/p&gt;
&lt;h4 id=&quot;std-fill用法&quot;&gt;&lt;a href=&quot;#std-fill用法&quot; class=&quot;headerlink&quot; title=&quot;std::fill用法&quot;&gt;&lt;/a&gt;std::fill用法&lt;/h4&gt;&lt;p&gt;void fill(first,last,val);&lt;br&gt;fill(array,array+n,element);&lt;/p&gt;
&lt;p&gt;memset(array,array+n,element);&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;leetcode2-Add-Two-Numbers&quot;&gt;&lt;a href=&quot;#leetcode2-Add-Two-Numbers&quot; class=&quot;headerlink&quot; title=&quot;leetcode2:Add Two Numbers&quot;&gt;&lt;/a&gt;leetcode2:A
    
    </summary>
    
      <category term="Tech" scheme="https://csrjtan.github.io/categories/Tech/"/>
    
    
      <category term="leetcode" scheme="https://csrjtan.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>paper-reading-20160306</title>
    <link href="https://csrjtan.github.io/2016/03/06/paper-reading-20160306/"/>
    <id>https://csrjtan.github.io/2016/03/06/paper-reading-20160306/</id>
    <published>2016-03-06T05:34:57.000Z</published>
    <updated>2016-06-01T14:51:43.000Z</updated>
    
    <content type="html">&lt;p&gt;之前阅读了左老师的两个paper,一直没有给总结，今天来赶紧写一下&lt;/p&gt;
&lt;h3 id=&quot;《On-kernel-difference-weighted-k-nearest-neighbor-classification》&quot;&gt;&lt;a href=&quot;#《On-kernel-difference-weighted-k-nearest-neighbor-classification》&quot; class=&quot;headerlink&quot; title=&quot;《On kernel difference-weighted k-nearest neighbor classification》&quot;&gt;&lt;/a&gt;《On kernel difference-weighted k-nearest neighbor classification》&lt;/h3&gt;&lt;p&gt;KNN的改进方法，利用临近点的差距作为权值的学习策略。将权值的学习转化成约束优化的问题，从优化数学的角度论证了易求解和适应高斯噪声以及扩展为kernel version，实验部分k,n以及theta是prefix然后相互学习下降求解的。&lt;br&gt;Contribution:&lt;br&gt;1.提出difference-weighted,转化成约束优化Model&lt;br&gt;2.证明了理论性以及适应于非线性数据集，kernel&lt;br&gt;3.得到实验结果比一些state-of-art的NN要好&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h4&gt;&lt;p&gt;NN是一个简单有效的模式识别聚类方法,这个论文提出了Kernel difference-weighted的KDF-KNN方法，用difference-weighted作为计算聚类距离时的权值，将一般的权值求解编程带约束的优化问题，并基于此理论Kernel化，最后验证数学理论和算法复杂度&lt;/p&gt;
&lt;h4 id=&quot;问题建模&quot;&gt;&lt;a href=&quot;#问题建模&quot; class=&quot;headerlink&quot; title=&quot;问题建模&quot;&gt;&lt;/a&gt;问题建模&lt;/h4&gt;&lt;p&gt;将最近邻的权值设置为 $W = argmin\frac{1}{2}||x-w^TX||^2 $ , $s.t. \sum_i^w w_i =1 $ , x为样本与相邻的欧几距离，w为当前权值。w是最终关于该数据集模型的最优权值，所以接下来的DW-KNN就是求解上述方程的约束最优化问题了&lt;/p&gt;
&lt;p&gt;接下来使用凸优化和朗格朗日的方法求解,接下来做了关于高斯噪声的优化以及Kernel提升以适应非线性数据集，还理论分析对比了该方法与其他方法的复杂度&lt;/p&gt;
&lt;h4 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h4&gt;&lt;p&gt;该方法计算使用x与邻近的不同作为权值来计算，而非简单的距离。将该问题有效转化成约束优化问题，从理论上证明该方法的理论有效性并从实验验证了该算法的有效性。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/KDW-KNN.png&quot; alt=&quot;Difference-Weighted&quot;&gt; &lt;/p&gt;
&lt;h3 id=&quot;《On-accurate-orientation-extraction-and-appropriate-distance-measure-for-low-resolution-palmprint-recognition》&quot;&gt;&lt;a href=&quot;#《On-accurate-orientation-extraction-and-appropriate-distance-measure-for-low-resolution-palmprint-recognition》&quot; class=&quot;headerlink&quot; title=&quot;《On accurate orientation extraction and appropriate distance measure for low-resolution palmprint recognition》&quot;&gt;&lt;/a&gt;《On accurate orientation extraction and appropriate distance measure for low-resolution palmprint recognition》&lt;/h3&gt;&lt;p&gt;左老师在理大生物识别实验室的掌纹识别工作&lt;/p&gt;
&lt;p&gt;1.掌纹识别的背景&lt;br&gt;2.两个问题：低分辨下，feature和distance measure&lt;br&gt;3.提出orientation feature&lt;br&gt;4.提出General angular distance的框架&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;之前阅读了左老师的两个paper,一直没有给总结，今天来赶紧写一下&lt;/p&gt;
&lt;h3 id=&quot;《On-kernel-difference-weighted-k-nearest-neighbor-classification》&quot;&gt;&lt;a href=&quot;#《On-kernel-difference-weighted-k-nearest-neighbor-classification》&quot; class=&quot;headerlink&quot; title=&quot;《On kernel difference-weighted k-nearest neighbor classification》&quot;&gt;&lt;/a&gt;《On kernel difference-weighted k-nearest neighbor classification》&lt;/h3&gt;&lt;p&gt;KNN的改进方法，利用临近点的差距作为权值的学习策略。将权值的学习转化成约束优化的问题，从优化数学的角度论证了易求解和适应高斯噪声以及扩展为kernel version，实验部分k,n以及theta是prefix然后相互学习下降求解的。&lt;br&gt;Contribution:&lt;br&gt;1.提出difference-weighted,转化成约束优化Model&lt;br&gt;2.证明了理论性以及适应于非线性数据集，kernel&lt;br&gt;3.得到实验结果比一些state-of-art的NN要好&lt;br&gt;
    
    </summary>
    
      <category term="Tech" scheme="https://csrjtan.github.io/categories/Tech/"/>
    
    
      <category term="paper" scheme="https://csrjtan.github.io/tags/paper/"/>
    
  </entry>
  
  <entry>
    <title>16年二月之旅</title>
    <link href="https://csrjtan.github.io/2016/03/01/16%E5%B9%B4%E4%BA%8C%E6%9C%88%E4%B9%8B%E6%97%85/"/>
    <id>https://csrjtan.github.io/2016/03/01/16年二月之旅/</id>
    <published>2016-03-01T05:59:55.000Z</published>
    <updated>2016-06-01T14:50:09.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;广州海心沙家庭乐&quot;&gt;&lt;a href=&quot;#广州海心沙家庭乐&quot; class=&quot;headerlink&quot; title=&quot;广州海心沙家庭乐&quot;&gt;&lt;/a&gt;广州海心沙家庭乐&lt;/h3&gt;&lt;p&gt;幸福美满的家庭一直是我所拥有，只是可能与家人缺乏情感上的交流，我们需要多点磨合，进行积极有意义的沟通。这次海心沙的旅程让爸爸妈妈很是高兴，勇于表达自己的情感吧！&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life023001.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;爸妈合照&quot;&gt;&lt;/p&gt;
&lt;p&gt;爸：1961.7.8，牛，55岁，会计。爱好军事，经济，唱歌。性格硬朗好面子，喜欢他人夸赞，爱戴我们，烟酒。大男子的东西。优点：沉稳，处事有方，得体，疼爱儿子&lt;br&gt;妈：1961.11.12，牛，55岁，仓库管理，准备退休，爱好运动，看书。居家女人，有点小生活。优点：勤劳善良和气，爱我们&lt;br&gt;哥：1987.8.9，兔，28岁，前端攻城狮，爱好酷帅，音乐，潮流时尚。优点：能力突出，迁就随和&lt;br&gt;我：1992.8.13，猴，24岁，研究僧，优点：聪明，会思考，勇敢乐观&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life023002.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;家庭合照&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;广州花市&quot;&gt;&lt;a href=&quot;#广州花市&quot; class=&quot;headerlink&quot; title=&quot;广州花市&quot;&gt;&lt;/a&gt;广州花市&lt;/h3&gt;&lt;p&gt;今年过年上去找了小明玩，到他家玩了两局实况，还和他的家人一块吃了个饭，然后就出去领略过年广州的气息和花市的浓厚氛围。傍晚还吃了个萨莉亚，然后返程归家去。小明还是个会玩和值得信赖的哥们儿呀！&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life023003.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;北京路花市&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life023003.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;小明合照&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;带宝宝去花灯汇&quot;&gt;&lt;a href=&quot;#带宝宝去花灯汇&quot; class=&quot;headerlink&quot; title=&quot;带宝宝去花灯汇&quot;&gt;&lt;/a&gt;带宝宝去花灯汇&lt;/h3&gt;&lt;p&gt;去了佛山的岭南新天地看，大概是白天吧，没有灯饰不够动人，但有蜡笔小新，看到珊爷还是很喜欢的！勒流上佛山还真是方便，还有快线，果然是勒流白富美。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life023007.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;岭南新天地&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后回到香港去了看百万LED的花灯展，以及去了科大游玩，领略了无敌海景和科大的学术氛围。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life023008.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;灯展&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life023009.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;科大&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;广州海心沙家庭乐&quot;&gt;&lt;a href=&quot;#广州海心沙家庭乐&quot; class=&quot;headerlink&quot; title=&quot;广州海心沙家庭乐&quot;&gt;&lt;/a&gt;广州海心沙家庭乐&lt;/h3&gt;&lt;p&gt;幸福美满的家庭一直是我所拥有，只是可能与家人缺乏情感上的交流，我们需要多点磨合，进行积极有意义的沟通。这次海心沙的旅程让爸爸妈妈很是高兴，勇于表达自己的情感吧！&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life023001.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;爸妈合照&quot;&gt;&lt;/p&gt;
&lt;p&gt;爸：1961.7.8，牛，55岁，会计。爱好军事，经济，唱歌。性格硬朗好面子，喜欢他人夸赞，爱戴我们，烟酒。大男子的东西。优点：沉稳，处事有方，得体，疼爱儿子&lt;br&gt;妈：1961.11.12，牛，55岁，仓库管理，准备退休，爱好运动，看书。居家女人，有点小生活。优点：勤劳善良和气，爱我们&lt;br&gt;哥：1987.8.9，兔，28岁，前端攻城狮，爱好酷帅，音乐，潮流时尚。优点：能力突出，迁就随和&lt;br&gt;我：1992.8.13，猴，24岁，研究僧，优点：聪明，会思考，勇敢乐观&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life023002.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;家庭合照&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Life" scheme="https://csrjtan.github.io/categories/Life/"/>
    
    
      <category term="回忆" scheme="https://csrjtan.github.io/tags/%E5%9B%9E%E5%BF%86/"/>
    
  </entry>
  
  <entry>
    <title>台湾之旅</title>
    <link href="https://csrjtan.github.io/2016/02/29/%E5%8F%B0%E6%B9%BE%E4%B9%8B%E6%97%85/"/>
    <id>https://csrjtan.github.io/2016/02/29/台湾之旅/</id>
    <published>2016-02-29T07:26:05.000Z</published>
    <updated>2016-06-01T14:49:23.000Z</updated>
    
    <content type="html">&lt;p&gt;现在才来整理一下上年跨年之旅，台湾Trip。生活的东西确实需要不断的及时整理，及时思考。我们是从2016-01-29的时候出发的，01-07回港，持续了10天左右，这趟旅程收获了很多台湾美食，风景以及同行真挚的小伙伴。&lt;/p&gt;
&lt;h2 id=&quot;台北&quot;&gt;&lt;a href=&quot;#台北&quot; class=&quot;headerlink&quot; title=&quot;台北&quot;&gt;&lt;/a&gt;台北&lt;/h2&gt;&lt;h3 id=&quot;第一天&quot;&gt;&lt;a href=&quot;#第一天&quot; class=&quot;headerlink&quot; title=&quot;第一天&quot;&gt;&lt;/a&gt;第一天&lt;/h3&gt;&lt;p&gt;因为大家都是临近第一个学期的期末，所以对于攻略方便的功课确实做得不够好。旅程一共四个小伙伴，我和宝宝还有静静和WINDY。大家各自带好的行李，出发在香港国际机场集合去，我们太蠢直接从地铁过去，每个人要98HKD的样子机场跨线，殊不知做巴士好像也才30HKD，时间是差不多的！上机前还担心肚子饿，吃了个M记，不过觉得香港的M记还真不错。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052901.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;机票&quot;&gt;&lt;br&gt;四位同伴就此结识并开始上路了！第一次来到了香港国际机场，整个航班的设施和服务都是很到位的，顺带带宝宝第一次坐了灰机。（有如过山车般的好玩吧）&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052902.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;香港航空合照&quot;&gt;&lt;br&gt;落地后，我们果断打车前往珊珊大人选的西门町住处，离捷运和地铁、景点商圈都很近，十分的赞！遗憾的是，我们还没买跨年去台南的票，而且我们因为价格太贵，没有订住处。所以悲催的在那边弄这个本应该攻略弄好的事，也只能怪台北跨年人太多了，各种挤，中途还找科长借了他女朋友家的车钥匙放行李，在上面躺了半个晚上，真是够凄惨的。（这是后话）台湾的民宿确实便宜呢，消费也不高，适合去旅行。放下行李我们出去西门町的小夜市吃小吃，这是当晚饭了，台湾基本晚饭就是小吃吃的，不然不够肚子用！吃了个火烤牛肉，还有鸡肉肠（她们都说好吃，我是没怎么吃到)。吃完逛了一会，回到去还要帮珊爷写Dissertation Proposal,我的天哪，我旅游的时间都用来做了什么。睡觉？买车票？写Proposal?.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;第二天&quot;&gt;&lt;a href=&quot;#第二天&quot; class=&quot;headerlink&quot; title=&quot;第二天&quot;&gt;&lt;/a&gt;第二天&lt;/h3&gt;&lt;p&gt;果断爬起来很晚，庆幸小伙伴们好像习惯我们拖拉的节奏，早上吃了个台湾牛肉面，中午就去台北故宫了，看了不少的珍宝。总结一下博物馆的珍宝一般就是华夏文化的历史文物，不外乎就是各种器具保留得比较好，铁器、青铜、玉、书画、陶瓷等等了，听说里面有国家一级文物瑰宝，可以感受到古代人的生活方式，以及礼制、文明等等。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052903.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;台北故宫&quot;&gt;&lt;br&gt;之后没有去迷你博物馆，去了猫空，但因为我们动作慢而且阴天，坐水晶缆车好像也没有想象中的带感，也告诫了我们下次一定要计划好才出发。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052904.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;猫空水晶缆车&quot;&gt;&lt;br&gt;这天晚上好像也在写Proposal,反正在旅行中写了两个！一个是关于Turing Test的Decaptcha，另一个有点忘了，关于UI设计之类的。&lt;/p&gt;
&lt;h3 id=&quot;第三天&quot;&gt;&lt;a href=&quot;#第三天&quot; class=&quot;headerlink&quot; title=&quot;第三天&quot;&gt;&lt;/a&gt;第三天&lt;/h3&gt;&lt;p&gt;依然爬起来很晚，坑踩多了就知道，去旅行一定不要睡太多，花钱花时间去旅游，交通费是大头，其他该花应该花，把旅程玩开心了，东西看够了，地方文化了解了，美食吃到了，这样才算真正的旅程。要么就不要去，去了不愿意花钱了解，花钱尝试美食，花时间和精力去走，还是休息睡觉的话，不如去度假比较好。&lt;/p&gt;
&lt;p&gt;起来后马上去台北车站弄车票，最终买了商务高铁，RMB500左右，这个怪我，不应该去之前赌气说宝宝你来PLAN，这个计划我有份参与，我们就是一个TEAM，我的态度从一开始就不对，想看宝宝出洋相害的是大家和自己，吃力不讨好，没必要在这种事情上计较，珊爷的性格就是这样好胜逞强，平时多让着她点就好了。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052905.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;台北车站&quot;&gt;&lt;br&gt;等弄好了这些好像已经有点晚了，赶去中正纪念堂看4点的站岗交接仪式，看了台北仪仗队的交接，真心帅气，那个踏步也是很刚劲有力而又优美的。中正就是蒋介石，对于台湾来说，孙中山和蒋介石都是一样的地位，一个为国父，一个为最高领导人，乃至宋美龄都是受到崇高尊敬的。关于台湾的政治可谓一匹布都说不完，蓝绿阵营抗争多年，政治内耗也是导致台湾经济萎靡不振的重要原因，庆幸台湾的旅游业发展迅猛，高新产业和娱乐业一直是强项。只是今年国内市场巨大，发展迅猛，不免使得台湾不少优质企业资源和人才外流。对于台湾而言，年轻人的就业压力还是比较大的，年轻人都往北部赶谋求好的发展，相对人情味没那么浓厚。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052907.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;居酒屋&quot;&gt;&lt;br&gt;晚上去了WINDY找的一家居酒屋吃饭，感觉真的很好吃。完全停不下来，各种什么烧，照日烧，秋刀鱼也很不错，清酒怡情。然后就是台北的跨年演唱会和101烟火，千辛万苦为的就是这两个！比较遗憾的是没有登上101大楼，应该纠正去旅行觉得门票贵，请导游贵等不值得花的观念，该花的钱不应该省，让生活细节到位才最重要！跨年晚会看到了一系列的台湾明星，潘帅的劲歌热舞、毕书剑这位艺人让我眼前一亮、萧亚轩还有阿妹的压轴嗨歌热舞，到了阿妹，整场都要嗨翻了。人群到了1点多还是围着阿妹在跳动，我也是第一次感受到这种现场感染力的气氛，瞬间整个人都释放了。演唱会结束了，我们就着地铁来到晚上安顿的位置，在面包车上度过了艰辛的两小时，赶往捷运站乘坐6点的商务高铁。（对了，我们中途还遇到退宿后行李没办法处理的问题，所以是拿到科长的车上了，有点小尴尬。想着把行李寄放在台北车站，还被大叔各种鄙视，可算是这次台湾之旅唯一一次遇到不友好的人了，其他的对待游客和世界各地的人都如同朋友和亲人一般）&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052908.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;2016台北跨年演唱会&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052909.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;101大楼&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;高雄&quot;&gt;&lt;a href=&quot;#高雄&quot; class=&quot;headerlink&quot; title=&quot;高雄&quot;&gt;&lt;/a&gt;高雄&lt;/h2&gt;&lt;h3 id=&quot;第四天-amp-第五天&quot;&gt;&lt;a href=&quot;#第四天-amp-第五天&quot; class=&quot;headerlink&quot; title=&quot;第四天&amp;amp;第五天&quot;&gt;&lt;/a&gt;第四天&amp;amp;第五天&lt;/h3&gt;&lt;p&gt;到达高雄已经快到10点了，吃个东西蹭一会就可以check in了，我们住在一个民宿里，屋主很NICE，还送了汉堡王之类的早餐劵，不得不说珊珊挑选的民宿都很不错，那个早餐也是很棒的，我们首先去看了美丽岛的中转站美景，然后去了打狗领事馆，高雄原来是一个抵御倭寇的军事港口，有一个地儿原住民成为Dakok，所以大家顺带也成为打狗了。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052910.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;高雄车站一景&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052911.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;静静抠脚大汉&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052913.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;平安符&quot;&gt;在这里大家对着人像拍着玩，也上山去走了，山上有一家小寺庙，可以求个平安符之类的，我们来了一个挂着，预示今年的新年愿望，上年是顺顺利利，今年多一个长长久久。记得上一年跨年的时候，我们还是在大学城里面跟着一大群大学生在园内瞎逛，就在新天地吃了一个手抓饼就过完我们的2015年了，也忘了总结这一年是否做到了自己所达的目标，但得到林老师的推荐确实是人生中最重要的事之一，我必须珍惜。在CV的路上，写作的路上，编程的路上，技术的路上，找到自我！&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052912.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;打狗合照&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052914.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;山上合照&quot;&gt;&lt;br&gt;之后我们来到国立中山大学，毕竟我们也是中大学子，跨越海峡来看望中山爷爷也是必须要做的事)，这是一个傍海而建的大学，有种HKUST的感觉，只是色调和感觉还是我们中大特色的！真希望时间充裕些，我们可以在捕捉一位学子，向他问问在校的情况，奈何好像在放假时候，没见到什么学生，游客倒是不少。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052915.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;国立中山大学&quot;&gt;&lt;br&gt;这三天在高雄其实玩得不多，而且天气不大好，好像在台湾都是阴雨，对拍照和观景出行都十分不利，这一块我们是租单车骑行完成的，还搭渡去到祺津半岛玩了一转，看了灯塔古城墙和吃了海鲜。&lt;/p&gt;
&lt;h3 id=&quot;第六天&quot;&gt;&lt;a href=&quot;#第六天&quot; class=&quot;headerlink&quot; title=&quot;第六天&quot;&gt;&lt;/a&gt;第六天&lt;/h3&gt;&lt;p&gt;本来打算是去一个艺术区的，然后出发去垦丁的，但一直阴雨不止，windy提议我们出发去美术馆看展览，那我们不能放弃队友呢，大家的心情估计也跟着天气不上不下了吧。不过在艺术区倒是参观牛仔裤创业店了解到牛仔裤的工艺和设计，但我不喜欢穿牛仔裤，还吃到了很美味的凤梨酥，因为台湾气候原因，产的凤梨特别好吃，加上特别制作才出产正宗的凤梨酥。然后我们就打车去高雄美术馆，虽然天公不作美，但台湾人民确实和蔼可亲，出租车司机估计见到我们如此落魄，带我们去把高雄好吃的老店都转了一遍，让我们可以打包吃到，包括阿鲁哈、粽子、奶茶什么的，简直都是赞了，而我还记得中午吃的那个店的饺子还是什么面食超棒的，台南的东西好吃又便宜，消费水平真的是成本价。&lt;/p&gt;
&lt;h2 id=&quot;垦丁&quot;&gt;&lt;a href=&quot;#垦丁&quot; class=&quot;headerlink&quot; title=&quot;垦丁&quot;&gt;&lt;/a&gt;垦丁&lt;/h2&gt;&lt;h3 id=&quot;第七天&quot;&gt;&lt;a href=&quot;#第七天&quot; class=&quot;headerlink&quot; title=&quot;第七天&quot;&gt;&lt;/a&gt;第七天&lt;/h3&gt;&lt;p&gt;买好票了，但发现从高雄去垦丁四个人明显坐的士要便宜快捷又舒服，所以果断去退票并坐上了陈师傅的车，没想到就这样又遇上好人了，基本上台湾的出租车司机都不坏。进驻了在南湾附近的蝴蝶旅馆，我们就即将开展在台湾最美好的旅程了，垦丁真是一个美得不行的地方，迄今为止依然怀念着，而且当时是旅游淡季，气候适宜，价格也相对实惠，玩起来赏心悦目的。当我们赶到旅馆然后安顿好，果断去借了摩托车&lt;br&gt;出发去看关山夕照，带着珊宝爬坡电动车的马力确实不行呀，赶到的时候太阳公公还留有一眼，冲上去看到的美景让人觉得都是值得的。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052916.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;关山夕照&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052917.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;海天一色&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;第八天&quot;&gt;&lt;a href=&quot;#第八天&quot; class=&quot;headerlink&quot; title=&quot;第八天&quot;&gt;&lt;/a&gt;第八天&lt;/h3&gt;&lt;p&gt;看完夕照我们晚上到恒春逛了一下就回去，为了赶着要看日出，大家早起，一早要赶去龙磐公园。一大早几乎大伙都爬不起来，带齐装备，充好坐骑。一路迎着大海星辰飞驰，奈何路途遥远，晚起加之云层太厚，看到的日出并不太完美。然后去到了台湾最南点，想起一首歌《国境之南》。飞车冲到最南点，感受原始的生态，看到好多蝴蝶和小松鼠，好可爱。然后去了一个国家公园里面拍了一下大灯塔，有点像Kodak库里面的一个灯塔。然后回到旅馆休息，下午再出去玩浮潜。第一次玩浮潜，然后海里的微生物超多，富有养分。Windy同学一直呛水，被教练大家调戏得不要不要的，玩个浮潜把晚饭也吃了。然后去了吃鱼生，感觉也还是一般，可能我不是吃海鲜的料子，从小没有培养出那个味觉。晚上还去看了一下星空，天气太好了，好久没见到过那么多的星星。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052918.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;台湾最南点&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;第九天&quot;&gt;&lt;a href=&quot;#第九天&quot; class=&quot;headerlink&quot; title=&quot;第九天&quot;&gt;&lt;/a&gt;第九天&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052919.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;南湾海边&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052920.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;水上活动合照&quot;&gt;&lt;br&gt;这天起来去玩了一系列的水上活动，包括摩托艇、甜甜圈之类的，很刺激很有趣。然后驱车前往国家海洋馆，看了好多珊瑚，水上动物，了解了很多关于海洋生态、海洋保护的知识。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052921.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;国立海洋生物博物馆&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052922.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;白鲸&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;第十天&quot;&gt;&lt;a href=&quot;#第十天&quot; class=&quot;headerlink&quot; title=&quot;第十天&quot;&gt;&lt;/a&gt;第十天&lt;/h3&gt;&lt;p&gt;由于计划有误，我们的飞机应该从高雄往香港飞，结果买机票太笨，从台北往香港飞了，最后一天都得在台南往台北的路上了，这个也是怪我吧，对这个事情太不上心了，辛苦何珊珊了，以后得多担待，负起责任来。这一天做陈师傅夫妇的车从台南经过台中去日月潭玩两小时，然后再赶往台北的飞机，告别台湾之旅。陈妈妈十分的慈祥，跟我们聊很多人生的话题，她是个基督信徒，待人十分的和善可亲。去到台中的日月潭，我们坐游艇一站式介绍这个经典的景点，中途吃了好多美食。也辛苦陈师傅夫妇了。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052923.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;日月潭阿贝&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052924.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;告别台湾&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;p&gt;这趟意义非凡的旅程，让我走过很多的路，见过很多的人，领略很多的风景。台湾，我们还会再见!大爱垦丁，大爱美食！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;现在才来整理一下上年跨年之旅，台湾Trip。生活的东西确实需要不断的及时整理，及时思考。我们是从2016-01-29的时候出发的，01-07回港，持续了10天左右，这趟旅程收获了很多台湾美食，风景以及同行真挚的小伙伴。&lt;/p&gt;
&lt;h2 id=&quot;台北&quot;&gt;&lt;a href=&quot;#台北&quot; class=&quot;headerlink&quot; title=&quot;台北&quot;&gt;&lt;/a&gt;台北&lt;/h2&gt;&lt;h3 id=&quot;第一天&quot;&gt;&lt;a href=&quot;#第一天&quot; class=&quot;headerlink&quot; title=&quot;第一天&quot;&gt;&lt;/a&gt;第一天&lt;/h3&gt;&lt;p&gt;因为大家都是临近第一个学期的期末，所以对于攻略方便的功课确实做得不够好。旅程一共四个小伙伴，我和宝宝还有静静和WINDY。大家各自带好的行李，出发在香港国际机场集合去，我们太蠢直接从地铁过去，每个人要98HKD的样子机场跨线，殊不知做巴士好像也才30HKD，时间是差不多的！上机前还担心肚子饿，吃了个M记，不过觉得香港的M记还真不错。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052901.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;机票&quot;&gt;&lt;br&gt;四位同伴就此结识并开始上路了！第一次来到了香港国际机场，整个航班的设施和服务都是很到位的，顺带带宝宝第一次坐了灰机。（有如过山车般的好玩吧）&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/taiwan052902.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;香港航空合照&quot;&gt;&lt;br&gt;落地后，我们果断打车前往珊珊大人选的西门町住处，离捷运和地铁、景点商圈都很近，十分的赞！遗憾的是，我们还没买跨年去台南的票，而且我们因为价格太贵，没有订住处。所以悲催的在那边弄这个本应该攻略弄好的事，也只能怪台北跨年人太多了，各种挤，中途还找科长借了他女朋友家的车钥匙放行李，在上面躺了半个晚上，真是够凄惨的。（这是后话）台湾的民宿确实便宜呢，消费也不高，适合去旅行。放下行李我们出去西门町的小夜市吃小吃，这是当晚饭了，台湾基本晚饭就是小吃吃的，不然不够肚子用！吃了个火烤牛肉，还有鸡肉肠（她们都说好吃，我是没怎么吃到)。吃完逛了一会，回到去还要帮珊爷写Dissertation Proposal,我的天哪，我旅游的时间都用来做了什么。睡觉？买车票？写Proposal?.&lt;br&gt;
    
    </summary>
    
      <category term="Life" scheme="https://csrjtan.github.io/categories/Life/"/>
    
    
      <category term="旅游 台湾" scheme="https://csrjtan.github.io/tags/%E6%97%85%E6%B8%B8-%E5%8F%B0%E6%B9%BE/"/>
    
  </entry>
  
  <entry>
    <title>Summary_Of_Half_Year</title>
    <link href="https://csrjtan.github.io/2016/02/29/Summary-Of-Half-Year/"/>
    <id>https://csrjtan.github.io/2016/02/29/Summary-Of-Half-Year/</id>
    <published>2016-02-29T03:10:23.000Z</published>
    <updated>2016-06-01T14:52:01.000Z</updated>
    
    <content type="html">&lt;p&gt;总结进入理大半年来的学习，以及关于SLAM和无人机室内定位飞行项目的学习&lt;/p&gt;
&lt;p&gt;这个项目比想象中大，里面需要学习和解决的问题都很多，一下子都无从下手，复杂度也高，以下写一下OnBoard&lt;br&gt;AutoNavigation and Obstacle Avoidance的问题和见解&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;关于DJI的开发套件&quot;&gt;&lt;a href=&quot;#关于DJI的开发套件&quot; class=&quot;headerlink&quot; title=&quot;关于DJI的开发套件&quot;&gt;&lt;/a&gt;关于DJI的开发套件&lt;/h3&gt;&lt;p&gt;首先用的是GUIDACNE和Matrix100以及树莓派pi2，对于完全没有硬件概念的我，接触到单片机真是头疼，硬件和软件是完全的两码事。Guidance是个多源的视觉素材采集设备，多方位的双目超声以及IMU模块，可以提取出大量有用的环境信息，加工进而智能优化使用。而M100是通过对应的命令传输指令进行控制的，这里的信号对于传输频率有一些注意，比如波段这些都是比较基础底层的东西。最头疼的是遇到这些套件的学习使用不方便，M100也不适应室内的飞行，指南针校准。曾经遇到指南针损坏需要焊接电路，遇到IMU侧准不稳导致起飞折断螺旋桨，遇到系统不兼容树莓派的移植问题，遇到SLAM精度不够无法恢复的问题，也在一步一个脚印不断尝试去解决，便知道除了编程，还有很多很多的问题是复杂而难解决的，如何解决或者如何避开问题都是能力的体现&lt;/p&gt;
&lt;h3 id=&quot;关于OnBoard-System&quot;&gt;&lt;a href=&quot;#关于OnBoard-System&quot; class=&quot;headerlink&quot; title=&quot;关于OnBoard System&quot;&gt;&lt;/a&gt;关于OnBoard System&lt;/h3&gt;&lt;p&gt;至此，整个system已经很大，感觉需要公司提供解决方案了，已经不是一个人hold住了，所以把Vision&lt;br&gt;System里面的SLAM部分抽出来学习，希望能从中挖出一些点子，看了RGBD&lt;br&gt;SLAM以及里面的一些核心问题，跟很多国内的研究者去讨论，看英文材料，包括那本Multi-View的经典，还有很多工具框架和素材库，POINT&lt;br&gt;CLOUD LIBRARY, OPENCV,&lt;br&gt;ROS.进而发现，每一个点都是很大，都不好挖。结果整个人的心态就不行了，发现自己在做一个不能完成的任务的感觉，应该果断将问题抛出，让大家一起有效来解决。另外还是希望可以有学习的对象，有讨论的人，有相关一起工作的伙伴是一件很值得珍惜的事情。&lt;/p&gt;
&lt;h3 id=&quot;极简的生活&quot;&gt;&lt;a href=&quot;#极简的生活&quot; class=&quot;headerlink&quot; title=&quot;极简的生活&quot;&gt;&lt;/a&gt;极简的生活&lt;/h3&gt;&lt;p&gt;最后，总结一下失败的经验和收获的东西。很感谢处在一个自由向上的科研环境里，感觉自己值得学习的东西还是很多很多，但希望自己能真正定下心来挖掘。了解和知道自己所想所要的，开启一个极简的生活状态，发现自己很懒，记忆也不好。每天需要提醒自己，鸡汤喝完就忘，只有习惯才是永存的好东西，以及自己的能力和素质。保持良好的工作态度和心态，然后坚持去做值得自己去做的事情，包括锻炼、看书和音乐，想要去做的东西就尽力去做，不要计较得失，不要在乎难度，一点一点安排计划就不是问题了。整理掉不要看到的东西，不然影响自己，了解真正需要的并保留下来，不要再去学习相似而没有意义是事情。接下来就开启新的生活吧，整理关于SLAM的东西，爱CV看多光谱，学习ML,PR！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;总结进入理大半年来的学习，以及关于SLAM和无人机室内定位飞行项目的学习&lt;/p&gt;
&lt;p&gt;这个项目比想象中大，里面需要学习和解决的问题都很多，一下子都无从下手，复杂度也高，以下写一下OnBoard&lt;br&gt;AutoNavigation and Obstacle Avoidance的问题和见解
    
    </summary>
    
      <category term="Tech" scheme="https://csrjtan.github.io/categories/Tech/"/>
    
    
      <category term="总结" scheme="https://csrjtan.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>leetcode26 &amp; 242 &amp; String</title>
    <link href="https://csrjtan.github.io/2016/02/26/leetcode26/"/>
    <id>https://csrjtan.github.io/2016/02/26/leetcode26/</id>
    <published>2016-02-26T09:39:19.000Z</published>
    <updated>2016-06-01T14:52:15.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;leetcode-26&quot;&gt;&lt;a href=&quot;#leetcode-26&quot; class=&quot;headerlink&quot; title=&quot;leetcode 26&quot;&gt;&lt;/a&gt;leetcode 26&lt;/h3&gt;&lt;p&gt;Remove Duplicates from Sorted Array&lt;br&gt;思路：去除有序数组中的重复点，返回新数组长度，前n个就是新数组。难点是不能用额外空间&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; removeDuplicates(vector&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;amp; nums) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;nums.&lt;span class=&quot;keyword&quot;&gt;size&lt;/span&gt;();i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(i==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;||nums[i]!=nums[i-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               nums[&lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt;] = nums[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt;++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;解题：重新填入整个数组，如果是0或者与前一个值不一样，就直接填入覆盖，直到遍历完整个有序数组。&lt;br&gt;TC = O(n), SC = O(1)&lt;/p&gt;
&lt;p&gt;今天还完成了&lt;a href=&quot;http://pan.baidu.com/s/1o7o6xYy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Thesis Writting&lt;br&gt;Collacation&lt;/a&gt; 密码：8qjh&lt;/p&gt;
&lt;p&gt;以及&lt;a href=&quot;http://pan.baidu.com/s/1i4t00SX&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DJI PPT&lt;/a&gt; 密码：awzd&lt;/p&gt;
&lt;h3 id=&quot;leetcode-242-Valid-Anagram&quot;&gt;&lt;a href=&quot;#leetcode-242-Valid-Anagram&quot; class=&quot;headerlink&quot; title=&quot;leetcode 242 Valid Anagram&quot;&gt;&lt;/a&gt;leetcode 242 Valid Anagram&lt;/h3&gt;&lt;p&gt;题目：判断两个字符串是否为同字母异序&lt;br&gt;思路：1.将字符串转成数组，排序然后比对得到结果&lt;br&gt;      2.计算两个字符串里面的字母的Occurence，用一个26大小的counter数组统计字母出现的次数，当第一个串出现就++，第二个出现就–；最后得到的counter如果全为0，则符合；否则不符合。&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;isAnagram&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; s, &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; t)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(s.length()!=t.length())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; counter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=&quot;number&quot;&gt;26&lt;/span&gt;;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           counter.push_back(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;s.length();i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            counter[s[i] - &lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;]++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            counter[t[i] - &lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;]--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=&quot;number&quot;&gt;26&lt;/span&gt;;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(counter[i]!=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3.或者先对第一个串加完，然后第二个串减counter,如果其中一个元素小于0，则不符合。不能说一定等于0，因为后面可能会继续减的。&lt;/p&gt;
&lt;h3 id=&quot;c-string用法&quot;&gt;&lt;a href=&quot;#c-string用法&quot; class=&quot;headerlink&quot; title=&quot;c++ string用法&quot;&gt;&lt;/a&gt;c++ string用法&lt;/h3&gt;&lt;p&gt;1.头文件 #include &lt;string&gt;&lt;br&gt;2.构造 string(const char &lt;em&gt;s) //c string initialize&lt;br&gt;       string(int n,char c)&lt;br&gt;       string s = “hello”;&lt;br&gt;3.字符操作  const char &amp;amp;operator&lt;a href=&quot;int n&quot;&gt;&lt;/a&gt; const&lt;br&gt;        int copy(char &lt;/em&gt;s,int n, int pos=2) const;&lt;br&gt;4.特性  int length() const;&lt;br&gt;        bool empty() const;&lt;br&gt;       void resize(int len,char c); //不足部分用c填充&lt;br&gt;5.赋值  = , assign(const char &lt;em&gt;c)&lt;br&gt;6.连接  +=, string append(const string&amp;amp;s);&lt;br&gt;7.比较 ==， int compare(const string &amp;amp;s);&lt;br&gt;8.子串  string substr(int pos=0,int n=npos) const;&lt;br&gt;9.交换  void swap(string &amp;amp;s2);&lt;br&gt;10.查找函数 int find(char c,int pos=0) const; //从pos开始找c&lt;br&gt;       int find(const string &amp;amp;s,int pos=0) const; //从pos找s&lt;br&gt;11.替换  string &amp;amp;replace(int p0,int n0,const char
&lt;/em&gt;s);//删除p0开始n0个字符，在p0后插入串s&lt;br&gt;12.插入删除 insert erase&lt;/string&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;leetcode-26&quot;&gt;&lt;a href=&quot;#leetcode-26&quot; class=&quot;headerlink&quot; title=&quot;leetcode 26&quot;&gt;&lt;/a&gt;leetcode 26&lt;/h3&gt;&lt;p&gt;Remove Duplicates from Sorted Array&lt;br&gt;思路：去除有序数组中的重复点，返回新数组长度，前n个就是新数组。难点是不能用额外空间&lt;br&gt;
    
    </summary>
    
      <category term="Tech" scheme="https://csrjtan.github.io/categories/Tech/"/>
    
    
      <category term="leetcode" scheme="https://csrjtan.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>leetcode1 with Vecotr and Map</title>
    <link href="https://csrjtan.github.io/2016/02/26/leetcode1/"/>
    <id>https://csrjtan.github.io/2016/02/26/leetcode1/</id>
    <published>2016-02-26T06:08:03.000Z</published>
    <updated>2016-06-01T14:50:44.000Z</updated>
    
    <content type="html">&lt;p&gt;In order to practise the c++ coding ability and have a prepare for the&lt;br&gt;work interview for the future.I start to do the leetcode in the&lt;br&gt;leisure time.Before that I introduce a code comparing tools: &lt;strong&gt;Beyond&lt;br&gt;Compare &lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;Beyond-Compare&quot;&gt;&lt;a href=&quot;#Beyond-Compare&quot; class=&quot;headerlink&quot; title=&quot;Beyond Compare&quot;&gt;&lt;/a&gt;Beyond Compare&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.scootersoftware.com/index.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Home Page&lt;/a&gt;&lt;br&gt;It is a tool for folder and file comparing, which useful for coding&lt;br&gt;compare as well. For now, it provides all the OS version including&lt;br&gt;WINDOWS, LINUX and MAC.&lt;/p&gt;
&lt;h3 id=&quot;LeetCode1-Two-Sum&quot;&gt;&lt;a href=&quot;#LeetCode1-Two-Sum&quot; class=&quot;headerlink&quot; title=&quot;LeetCode1 Two Sum&quot;&gt;&lt;/a&gt;LeetCode1 Two Sum&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Ques&lt;/strong&gt;:Given an array of integers, return indices of the two numbers such&lt;br&gt;that they add up to a specific target.&lt;br&gt;You may assume that each input would have exactly one solution.&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight prolog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;Example&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;Given&lt;/span&gt; nums = [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;], target = &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;Because&lt;/span&gt; nums[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] + nums[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;Solution1-Sort-and-Search&quot;&gt;&lt;a href=&quot;#Solution1-Sort-and-Search&quot; class=&quot;headerlink&quot; title=&quot;Solution1: Sort and Search&quot;&gt;&lt;/a&gt;Solution1: Sort and Search&lt;/h4&gt;&lt;p&gt;先排序，从开头和结尾向中间找，复杂度O(nlogn)&lt;br&gt;&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 定义Node来重新装数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; Node&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; id,val;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;Node;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 定义Node比较大小的原则，让sort从小到大排序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; compare(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; Node &amp;amp; a,&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; Node &amp;amp; b)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; a.val &amp;lt; b.val;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; Solution &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    vector&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; twoSum(vector&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; &amp;amp;numbers, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; target) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 初始化Nodes列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Node nodes[numbers.&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;()];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;numbers.&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;(); i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nodes[i].id = i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nodes[i].val = numbers[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 排序后，有序地检索&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sort(nodes, nodes+numbers.&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;(), compare);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; start=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt;=numbers.&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;()&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        vector&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 从两端往中间去搜索&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;while&lt;/span&gt;(start &amp;lt; &lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// 找到后，按序输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;if&lt;/span&gt;(nodes[start].val + nodes[&lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt;].val == target)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;if&lt;/span&gt;(nodes[start].id &amp;gt; nodes[&lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt;].id)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    swap(nodes[start].id , nodes[&lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt;].id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ans.push_back(nodes[start].id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ans.push_back(nodes[&lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt;].id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// 过小:start++; 过大:end--&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;span class=&quot;built_in&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;if&lt;/span&gt;( nodes[start].val + nodes[&lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt;].val &amp;lt; target )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                start++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;span class=&quot;built_in&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt;--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;Solution2-利用map-find&quot;&gt;&lt;a href=&quot;#Solution2-利用map-find&quot; class=&quot;headerlink&quot; title=&quot;Solution2: 利用map.find&quot;&gt;&lt;/a&gt;Solution2: 利用map.find&lt;/h4&gt;&lt;p&gt;将数存入hash_map中，查找target-numbers[i],有即返回。&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; twoSum(&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; &amp;amp;numbers, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; target)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; length = numbers.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; mp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; find;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; length; ++i)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        find = mp[target-numbers[i]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 默认没的时候，初始化map,直到新加数据找到以往符合的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(find)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res.push_back(find);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res.push_back(i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mp[numbers[i]] = i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;总体而言，第二种方法假定了只有一种结果，先判断找到没，再初始化map。这样可以确保找到的索引值是在前的，在新插的数据索引是在后的。十分的巧妙在一边在检索结果一边初始化map的数据。&lt;/p&gt;
&lt;p&gt;参考链接: &lt;a href=&quot;http://www.acmerblog.com/leetcode-two-sum-5223.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;acm之家&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;c-Vector用法&quot;&gt;&lt;a href=&quot;#c-Vector用法&quot; class=&quot;headerlink&quot; title=&quot;c++ Vector用法&quot;&gt;&lt;/a&gt;c++ Vector用法&lt;/h3&gt;&lt;p&gt;1.头文件 #include &lt;vector&gt;&lt;br&gt;2.变量声明 vector&lt;int&gt; a;  二维数组： vector&lt;int*&gt; a2;&lt;br&gt;3.具体用法&lt;br&gt;&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a&lt;span class=&quot;selector-class&quot;&gt;.push_back&lt;/span&gt;(int)     &lt;span class=&quot;selector-tag&quot;&gt;pop_back&lt;/span&gt;()    &lt;span class=&quot;selector-tag&quot;&gt;begin&lt;/span&gt;()  &lt;span class=&quot;selector-tag&quot;&gt;end&lt;/span&gt;()  &lt;span class=&quot;selector-tag&quot;&gt;max_size&lt;/span&gt;() &lt;span class=&quot;selector-tag&quot;&gt;size&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.at&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;) &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[5]&lt;/span&gt;  &lt;span class=&quot;selector-tag&quot;&gt;if&lt;/span&gt;(a.empty())   &lt;span class=&quot;selector-tag&quot;&gt;clear&lt;/span&gt;()  &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.insert&lt;/span&gt;(pos,elem)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/int*&gt;&lt;/int&gt;&lt;/vector&gt;&lt;/p&gt;
&lt;p&gt;4.自定义排序&lt;br&gt;&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; comp(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &amp;amp;a,&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;amp;b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; a&amp;lt;b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;调用sort(vec.&lt;span class=&quot;built_in&quot;&gt;begin&lt;/span&gt;(),vec.&lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt;(),comp);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;5.Vector使用分析&lt;br&gt;一般不够大小会自动resize扩大两倍的容量，所以如果装入1000个元素，会自动重新分配10次，2^10.但如果用reserve(1000)的话，可以有效避免重新分配的消耗。&lt;br&gt;另外可以用swap来有效利用vector剩余的空间等。&lt;/p&gt;
&lt;p&gt;参考链接： &lt;a href=&quot;http://blog.csdn.net/hancunai0017/article/details/7032383&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;vecotr用法详解&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;c-map的用法&quot;&gt;&lt;a href=&quot;#c-map的用法&quot; class=&quot;headerlink&quot; title=&quot;c++ map的用法&quot;&gt;&lt;/a&gt;c++ map的用法&lt;/h3&gt;&lt;p&gt;STL中一对一的数据结构，第一个成为关键字，只能出现一次，第二个是其值。Key-Value&lt;br&gt;其内建组织是一颗红黑树（非严格定义的平衡二叉树），可以对数据自动排序。&lt;br&gt;1.头文件 #include &lt;map&gt;&lt;br&gt;2.声明  Map&lt;int,string&gt; mapStudent&lt;br&gt;3.数据插入&lt;br&gt;  3.1 mapStudent.insert(pair&lt;int,string&gt;(1,”stu_1”));&lt;br&gt;  3.2 mapStudent.insert(map&lt;int,string&gt;::value_type(2,”stu_2”));&lt;br&gt;  3.3 mapStudent[3] = “stu_3”;&lt;br&gt;  前两种一样，如果key已存在则插入失败；数组的方式是可以覆盖已有key-value的&lt;br&gt;4.如何检查插入成功&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Map&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;gt; mapStudent;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Pair&amp;lt;&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;gt;::iterator,&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;&amp;gt; Insert_Pair;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Insert_Pair = mapStudent.insert(pair&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;stu_1&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(Insert_Pair.second==&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;Insert Suceess!&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/int,string&gt;&lt;/int,string&gt;&lt;/int,string&gt;&lt;/map&gt;&lt;/p&gt;
&lt;p&gt;所以我们知道map.insert返回的属性是pair(iterator,bool)&lt;br&gt;5.size()，数据遍历&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 演示一下反向迭代器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;gt;::reverse_iterator iter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(iter=mapStudent.rbegin();iter!=mapStudent.rend();iter++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;iter-&amp;gt;first&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;&amp;lt;&amp;lt;iter-&amp;gt;second&amp;lt;&amp;lt;end;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6.数据查找&lt;br&gt; 6.1 count判断关键字是否出现，是1，否0.&lt;br&gt; 6.2 find,返回一个迭代器，没有则返回end函数迭代器&lt;br&gt; 6.3&lt;br&gt;7.判空empty()和清空clear()&lt;br&gt;以及其他swap,key_comp,value_comp,get_allocator等函数&lt;br&gt;8.数据删除&lt;br&gt;  map.erase(iter) map.erase(key)&lt;br&gt;  map.erase(begin(),end()) //成片删除，前开后闭&lt;br&gt;9.如果key上用自己的结构体，需要重载小于号&amp;lt;,不然无法遍历iterator&lt;/p&gt;
&lt;p&gt;参考链接: &lt;a href=&quot;http://blog.csdn.net/bat603/article/details/1456141&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;STL中map的用法详解&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;官方给出解法&quot;&gt;&lt;a href=&quot;#官方给出解法&quot; class=&quot;headerlink&quot; title=&quot;官方给出解法&quot;&gt;&lt;/a&gt;官方给出解法&lt;/h3&gt;&lt;h4 id=&quot;AP-1&quot;&gt;&lt;a href=&quot;#AP-1&quot; class=&quot;headerlink&quot; title=&quot;AP 1&quot;&gt;&lt;/a&gt;AP 1&lt;/h4&gt;&lt;p&gt;Brute Force 暴力破解,复杂度为 TC=O(N^2),SC=O(1)&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] twoSum(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] nums, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; nums.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; j &amp;lt; nums.length; j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//分别遍历，找是否存在该值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nums[j] == &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt; - nums[i]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] &amp;#123; i, j &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;string&quot;&gt;&quot;No two sum solution&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;AP-2&quot;&gt;&lt;a href=&quot;#AP-2&quot; class=&quot;headerlink&quot; title=&quot;AP 2&quot;&gt;&lt;/a&gt;AP 2&lt;/h4&gt;&lt;p&gt;利用Hash Table，遍历两次,复杂度 TC=O(N),SC=O(1)&lt;br&gt;将元素插入hash_map中，直接使用map.containsKey寻找映射值匹配&lt;br&gt;&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] twoSum(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] nums, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; target) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Map&amp;lt;Integer, Integer&amp;gt; &lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; nums.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;put&lt;/span&gt;(nums[i], i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; nums.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; complement = target - nums[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//利用hash_map的找，这是STL的优化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;.containsKey(complement) &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(complement) != i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] &amp;#123; i, &lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(complement) &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;string&quot;&gt;&quot;No two sum solution&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;AP-3&quot;&gt;&lt;a href=&quot;#AP-3&quot; class=&quot;headerlink&quot; title=&quot;AP 3&quot;&gt;&lt;/a&gt;AP 3&lt;/h4&gt;&lt;p&gt;用Hash Table进一步优化，一边插入一边求解，达到一次遍历&lt;/p&gt;
&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] twoSum(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] nums, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; target) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Map&amp;lt;Integer, Integer&amp;gt; &lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//边插入hash_map,边找是否存在该key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; nums.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; complement = target - nums[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;.containsKey(complement)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] &amp;#123; &lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(complement), i &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;put&lt;/span&gt;(nums[i], i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;string&quot;&gt;&quot;No two sum solution&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;In order to practise the c++ coding ability and have a prepare for the&lt;br&gt;work interview for the future.I start to do the leetcode in the&lt;br&gt;leisure time.Before that I introduce a code comparing tools: &lt;strong&gt;Beyond&lt;br&gt;Compare &lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;Beyond-Compare&quot;&gt;&lt;a href=&quot;#Beyond-Compare&quot; class=&quot;headerlink&quot; title=&quot;Beyond Compare&quot;&gt;&lt;/a&gt;Beyond Compare&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.scootersoftware.com/index.php&quot;&gt;Home Page&lt;/a&gt;&lt;br&gt;It is a tool for folder and file comparing, which useful for coding&lt;br&gt;compare as well. For now, it provides all the OS version including&lt;br&gt;WINDOWS, LINUX and MAC.&lt;/p&gt;
&lt;h3 id=&quot;LeetCode1-Two-Sum&quot;&gt;&lt;a href=&quot;#LeetCode1-Two-Sum&quot; class=&quot;headerlink&quot; title=&quot;LeetCode1 Two Sum&quot;&gt;&lt;/a&gt;LeetCode1 Two Sum&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Ques&lt;/strong&gt;:Given an array of integers, return indices of the two numbers such&lt;br&gt;that they add up to a specific target.&lt;br&gt;You may assume that each input would have exactly one solution.
    
    </summary>
    
      <category term="Tech" scheme="https://csrjtan.github.io/categories/Tech/"/>
    
    
      <category term="leetcode" scheme="https://csrjtan.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Vim Manual学习</title>
    <link href="https://csrjtan.github.io/2016/02/18/Manual%E5%AD%A6%E4%B9%A0/"/>
    <id>https://csrjtan.github.io/2016/02/18/Manual学习/</id>
    <published>2016-02-18T08:48:13.000Z</published>
    <updated>2016-06-01T14:51:14.000Z</updated>
    
    <content type="html">&lt;p&gt;The meaning of life is challenging yourself constantly.&lt;br&gt;在工具上磨刀耗费了不少的时间，是时候提升个人能力和领域知识，积累和效率同样重要。&lt;/p&gt;
&lt;h3 id=&quot;从Sublime转用VIM作为编辑器&quot;&gt;&lt;a href=&quot;#从Sublime转用VIM作为编辑器&quot; class=&quot;headerlink&quot; title=&quot;从Sublime转用VIM作为编辑器&quot;&gt;&lt;/a&gt;从Sublime转用VIM作为编辑器&lt;/h3&gt;&lt;p&gt;放弃Sublime的原因主要有三：1.最主要的原因，从事无人机开发，在单片机上没有图形界面一说，所以Sublime也无法使用，通常使用ssh进行远端控制和开发，而且使用VIM有助于远距离开发，只从命令行便完成一切控制任务 2.真正解放鼠标，而且具有完备的教程和社区，相信如果一生与编程为伴的我会感谢现在的我所作出的决定 3.真正意义上从习惯以及Linux使用者的角度去理解Linux，可以加深和了解很多关于Shell的用法，以及约定俗成的用户习惯&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;VIM的快捷键图&quot;&gt;&lt;a href=&quot;#VIM的快捷键图&quot; class=&quot;headerlink&quot; title=&quot;VIM的快捷键图&quot;&gt;&lt;/a&gt;VIM的快捷键图&lt;/h3&gt;&lt;p&gt;这里放上VIM的经典快捷键图，感谢博主原文链接&lt;a href=&quot;http://cenalulu.github.io/linux/all-vim-cheatsheat/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CENALULU&lt;/a&gt;&lt;br&gt;附带一个清晰的快捷键链接&lt;a href=&quot;http://vim.rtorr.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;站点&lt;/a&gt;&lt;br&gt;经典版&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/classic.gif&quot; alt=&quot;classic&quot;&gt;&lt;br&gt;入门版&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/entry.png&quot; alt=&quot;freshman&quot;&gt;&lt;br&gt;进阶版&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/advanced.png&quot; alt=&quot;advance&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;阅读Manual的快捷键Remind总结&quot;&gt;&lt;a href=&quot;#阅读Manual的快捷键Remind总结&quot; class=&quot;headerlink&quot; title=&quot;阅读Manual的快捷键Remind总结&quot;&gt;&lt;/a&gt;阅读Manual的快捷键Remind总结&lt;/h3&gt;&lt;h4 id=&quot;前12节&quot;&gt;&lt;a href=&quot;#前12节&quot; class=&quot;headerlink&quot; title=&quot;前12节&quot;&gt;&lt;/a&gt;前12节&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;左下上右：hjkl&lt;/td&gt;
&lt;td&gt;删改:x d c D C s S r R&lt;/td&gt;
&lt;td&gt;查找:F f T t / ?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;快速位移：gg G [Num]G [Num]% H M L zz&lt;/td&gt;
&lt;td&gt;复制黏贴：y Y p P&lt;/td&gt;
&lt;td&gt;寄存器复制:”[a-z]Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;对应补粘：”[A-Z]Y&lt;/td&gt;
&lt;td&gt;模式：i a o q(record)  R(replace) v(visual) ctrl+v(coloum visual)&lt;/td&gt;
&lt;td&gt;范围改动: :[range]s/from/to[gc] \n   :global/place/{cmd}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;排版:gq&lt;/td&gt;
&lt;td&gt;大小写:~ guu gUU g~~&lt;/td&gt;
&lt;td&gt;多文件:vim -o   vsplit ctrl+w :edit :read :write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;标记:m[a-z]&lt;/td&gt;
&lt;td&gt;跳转: ‘[a-z] 和 `.&lt;/td&gt;
&lt;td&gt;单词统计：g CTRL-G&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;单词替换: :%s/\&amp;lt;four\&amp;gt;/4/gc&lt;br&gt;多个文件替换单词(记录-回放)：1.vim *.cpp 2.qq :%s/\&amp;lt;GetResp\&amp;gt;/GetAnswer/g 3.:wnext 4.q 5.999@q&lt;br&gt;使用man查询: K  1.:runtime! ftplugin/man.vim  2.:Man csh &lt;/p&gt;
&lt;p&gt;至此，阅读了usr_01 ~ usr_12.txt,下一节继续学习余下部分。&lt;/p&gt;
&lt;h4 id=&quot;余下部分&quot;&gt;&lt;a href=&quot;#余下部分&quot; class=&quot;headerlink&quot; title=&quot;余下部分&quot;&gt;&lt;/a&gt;余下部分&lt;/h4&gt;&lt;p&gt;usr_20 命令行：&lt;br&gt;命令行状态，左移一个单词：Shift+Left 或 Ctrl+Left ，删除单词:Ctrl-w ,删除全部文字：Ctrl-u.&lt;br&gt;“:”命令通常具有缩写，但对应只有一个命令，可查看帮助以便记忆使用&lt;br&gt;Tab自动补全，Ctrl+p返回补全上一个选项，Ctrl+d可以显示目录候选文件&lt;br&gt;q: 进入命令行窗口，进行修改历史命令并执行;  用:！执行shell命令&lt;/p&gt;
&lt;p&gt;usr_21 记录和会话（没大懂，回头看）：&lt;br&gt;关于viminfo存储状态信息以及重返VIM中断处:oldfilesi&lt;br&gt;关于会话session,主要用于建立自定义窗口布局&lt;/p&gt;
&lt;p&gt;usr_22 编辑指定文件&lt;br&gt;:pwd :cd  查找文件gf 加入头文件目录:set path+=~/proj/include&lt;br&gt;find 缓冲区列表 :hidden :bnext :bfirst :bdelete [Num]&lt;/p&gt;
&lt;p&gt;usr_23 编辑其他文件&lt;br&gt;识别文件类型:set fileformat&lt;br&gt;加密：vim -x filename 撤销密码:set key=&lt;br&gt;读取二进制文件： vim -b filename&lt;br&gt;字节位置: g Ctrl+g&lt;/p&gt;
&lt;p&gt;usr_24 快速插入&lt;br&gt;更正： Ctrl+w  Ctrl+u&lt;br&gt;补全： Ctrl+p  Ctrl+n&lt;br&gt;从下列文件搜索补全词：1.当前文件 2.其他窗口文件 3.其他载入文件（隐藏缓冲区） 4.未载入文件（非激活缓冲区） 5.标签文件 6.被当前文件以#include语句包含的所有头文件&lt;br&gt;可以用’complete’调整搜索顺序，用‘ignorecase’忽略大小写&lt;br&gt;输入上次编辑模式的内容：Ctrl+a&lt;br&gt;逐个重复输入上一行的字符：Ctrl+y  Ctrl+e(下方)&lt;br&gt;插入寄存器内容：Ctrl-r {register}&lt;br&gt;使用abbreviate缩写来简化输入，纠正错误:iabbreviate teh the 和:iabbrev #b /&lt;strong&gt;*&lt;/strong&gt; (i表示仅输入模式有效)&lt;br&gt;删除缩写:unabbreviate {name} 和 :abclear&lt;br&gt;避免缩写再映射： :noreabbrev @a adder (防止:imap dd disk-door的干扰)&lt;br&gt;插入特殊字符： Ctrl-v&lt;br&gt;二合字母：Ctrl-k&lt;/p&gt;
&lt;p&gt;usr_26 重复&lt;br&gt;改动多个文件： :args *.c&lt;br&gt;在shell脚本里使用vim， vim写了命令，用shell调用执行&lt;br&gt;usr_27 查找命令及模式（方便快速查找）&lt;br&gt;usr_28 折叠&lt;br&gt;zf 创建折叠  zo 打开折叠 zc 关闭折叠 zr 减少折叠数 zR 打开所有 zM 折叠所有&lt;br&gt;usr_29 代码间移动&lt;br&gt;标签 ctags -R&lt;br&gt;Ctrl+] 跳转   Ctrl+t 返回&lt;br&gt;Ctrl+w ] 切换窗口并跳转&lt;/p&gt;
&lt;h4 id=&quot;题外话，如何选书&quot;&gt;&lt;a href=&quot;#题外话，如何选书&quot; class=&quot;headerlink&quot; title=&quot;题外话，如何选书&quot;&gt;&lt;/a&gt;题外话，如何选书&lt;/h4&gt;&lt;p&gt;出版社-&amp;gt;作者-&amp;gt;版次-&amp;gt;印次-&amp;gt;印数-&amp;gt;著-&amp;gt;编-&amp;gt;参考引用-&amp;gt;索引-&amp;gt;不看译作-&amp;gt;书评-&amp;gt;牛人在读-&amp;gt;网上内容审核&lt;br&gt;二合字母：Ctrl-k&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;The meaning of life is challenging yourself constantly.&lt;br&gt;在工具上磨刀耗费了不少的时间，是时候提升个人能力和领域知识，积累和效率同样重要。&lt;/p&gt;
&lt;h3 id=&quot;从Sublime转用VIM作为编辑器&quot;&gt;&lt;a href=&quot;#从Sublime转用VIM作为编辑器&quot; class=&quot;headerlink&quot; title=&quot;从Sublime转用VIM作为编辑器&quot;&gt;&lt;/a&gt;从Sublime转用VIM作为编辑器&lt;/h3&gt;&lt;p&gt;放弃Sublime的原因主要有三：1.最主要的原因，从事无人机开发，在单片机上没有图形界面一说，所以Sublime也无法使用，通常使用ssh进行远端控制和开发，而且使用VIM有助于远距离开发，只从命令行便完成一切控制任务 2.真正解放鼠标，而且具有完备的教程和社区，相信如果一生与编程为伴的我会感谢现在的我所作出的决定 3.真正意义上从习惯以及Linux使用者的角度去理解Linux，可以加深和了解很多关于Shell的用法，以及约定俗成的用户习惯&lt;br&gt;
    
    </summary>
    
      <category term="Tech" scheme="https://csrjtan.github.io/categories/Tech/"/>
    
    
      <category term="读书笔记" scheme="https://csrjtan.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Vision-Based State Estimation for Autonomous Rotorcraft MAVs in Complex Environments</title>
    <link href="https://csrjtan.github.io/2016/02/17/paper-reading-20160217/"/>
    <id>https://csrjtan.github.io/2016/02/17/paper-reading-20160217/</id>
    <published>2016-02-17T06:04:08.000Z</published>
    <updated>2016-06-01T14:51:40.000Z</updated>
    
    <content type="html">&lt;p&gt;HKUST&lt;a href=&quot;https://sites.google.com/site/eeshaojie/academic-projects&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;沈劭劼&lt;/a&gt;的微型无人机避障系统&lt;/p&gt;
&lt;h3 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h3&gt;&lt;p&gt;机载避障关键点在于低耗的传感器以及实时避障算法，该系统使用25Hz的鱼眼摄像头和一个低频的第二摄像头，外加IMU传感器fusion进行100Hz的飞行器控制&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;这里有一个有趣的软件PTAM（Parallel Tracking and Mapping），是一个基于SLAM的增强现实应用，可以去进行参考了解。论文的主要贡献点在于提供了完整的系统架构，从硬件到软件到算法，完成了机载设备的自动导航&lt;/p&gt;
&lt;h3 id=&quot;方法&quot;&gt;&lt;a href=&quot;#方法&quot; class=&quot;headerlink&quot; title=&quot;方法&quot;&gt;&lt;/a&gt;方法&lt;/h3&gt;&lt;p&gt;1.相机标定以及特征提取跟踪&lt;br&gt;2.坐标系的正确转换&lt;br&gt;3.基于单目的Local Mapping&lt;br&gt;4.基于低帧率的立体匹配&lt;br&gt;5.误差校正和修复&lt;br&gt;6.UKF-Based的传感器融合（这一点可以需要的时候进行仔细的研究学习）&lt;/p&gt;
&lt;h3 id=&quot;实验部分&quot;&gt;&lt;a href=&quot;#实验部分&quot; class=&quot;headerlink&quot; title=&quot;实验部分&quot;&gt;&lt;/a&gt;实验部分&lt;/h3&gt;&lt;p&gt;硬件：公司购买的飞行器，使用ARM7的机载处理器，具有双核1.86GHz和2GB RAM，120GB SSD。传感器为752*480的鱼眼摄像头，以及3.5mm f1.4 1Hz的第二摄像头，MicroStrain 3DM-GX3-25 IMU,用802.11g networking，总重1.983kg.&lt;/p&gt;
&lt;p&gt;软件：C++ using ROS, OpenCV,最大特征数1000，以及一些相关参数的调整，最后算法占用了50%的CPU，以及使用该算法与装有Vicon motion tracking system进行比较。&lt;/p&gt;
&lt;p&gt;测试：1.算法的姿态与GT比较 2.机载定点盘旋 3.复杂环境里的自动导航&lt;/p&gt;
&lt;p&gt;思路：作者主要使用ROS和OpenCV里面的工具进行系统的架构，可以去进行相关研究。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;HKUST&lt;a href=&quot;https://sites.google.com/site/eeshaojie/academic-projects&quot;&gt;沈劭劼&lt;/a&gt;的微型无人机避障系统&lt;/p&gt;
&lt;h3 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h3&gt;&lt;p&gt;机载避障关键点在于低耗的传感器以及实时避障算法，该系统使用25Hz的鱼眼摄像头和一个低频的第二摄像头，外加IMU传感器fusion进行100Hz的飞行器控制&lt;br&gt;
    
    </summary>
    
      <category term="Tech" scheme="https://csrjtan.github.io/categories/Tech/"/>
    
    
      <category term="paper" scheme="https://csrjtan.github.io/tags/paper/"/>
    
  </entry>
  
  <entry>
    <title>C++_Primer_Reading2</title>
    <link href="https://csrjtan.github.io/2016/01/30/C-Primer-Reading2/"/>
    <id>https://csrjtan.github.io/2016/01/30/C-Primer-Reading2/</id>
    <published>2016-01-30T08:05:37.000Z</published>
    <updated>2016-06-01T14:50:21.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;C-的编程模块&quot;&gt;&lt;a href=&quot;#C-的编程模块&quot; class=&quot;headerlink&quot; title=&quot;C++的编程模块&quot;&gt;&lt;/a&gt;C++的编程模块&lt;/h3&gt;&lt;p&gt;这一章讲述C++的函数，其中的乐趣在于大型库（标准ANSI库）和自己编写的函数，以及提高编程效率深入学习STL和BOOST C++提供的功能。&lt;br&gt;&lt;figure class=&quot;highlight typescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;Name&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;parameterList&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	statement(s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;函数中将数组地址作为参数可以节省复制数组所需的时间和内存，地址值和数组长度随系统而异&lt;br&gt;尽可能使用const:1.可以避免无意间修改数据导致的编程错误 2.能够同时处理const和非const的实参&lt;br&gt;按引用传递结构，还有函数指针的知识，C风格字符串：字符数组，字符串常量和字符串指针，以及string类.&lt;br&gt;&lt;br&gt;### 函数探幽&lt;br&gt;内联函数、按引用传递、默认参数值、函数重载以及模板函数&lt;br&gt;C++新增加一种右值引用。返回引用时，避免返回函数终止则不再存在的内存单元引用&lt;br&gt;&lt;br&gt;函数模板&lt;br&gt;&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;template&amp;lt;typename AnyType&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void &lt;span class=&quot;keyword&quot;&gt;Swap(AnyType &lt;/span&gt;&amp;amp;a,AnyType &amp;amp;&lt;span class=&quot;keyword&quot;&gt;b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	AnyType temp&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	temp = a&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	a = &lt;span class=&quot;keyword&quot;&gt;b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;	&lt;span class=&quot;keyword&quot;&gt;b &lt;/span&gt;= temp&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;模板匹配的过程：1.创建候选函数列表 2.使用候选函数列表创建可行函数列表 3.确定是否有最佳可行函数&lt;br&gt;最佳到最差匹配顺序：1.完全匹配 2.提升转换 3.标准转换 4.用户定义转换&lt;/p&gt;
&lt;h3 id=&quot;内存模型和名称空间&quot;&gt;&lt;a href=&quot;#内存模型和名称空间&quot; class=&quot;headerlink&quot; title=&quot;内存模型和名称空间&quot;&gt;&lt;/a&gt;内存模型和名称空间&lt;/h3&gt;&lt;p&gt;单独编译，将头文件和结构文件以及程序文件分开，头文件使用防护(guarding)方案，避免文件定义结构两次。（不同编译器创建的二进制模块很可能无法正确地链接，可以拿到源码后重新编译连接解决问题）&lt;/p&gt;
&lt;h4 id=&quot;存储持续性，作用域和链接性&quot;&gt;&lt;a href=&quot;#存储持续性，作用域和链接性&quot; class=&quot;headerlink&quot; title=&quot;存储持续性，作用域和链接性&quot;&gt;&lt;/a&gt;存储持续性，作用域和链接性&lt;/h4&gt;&lt;p&gt;自动存储持续性：自动默认的变量，在块内或者函数生命周期里存在&lt;br&gt;静态存储持续性：static定义变量在程序运行过程中都存在&lt;br&gt;线程存储持续性（c++11):thread_local变量生命周期与线程一样长&lt;br&gt;动态存储持续性：用new分配的内存，直到delete才释放&lt;/p&gt;
&lt;p&gt;静态变量的三种链接性：1.外部链接性（其他文件中访问）extern 关键字表示使用外部变量。  2.内部链接性（当前文件访问） 3.无链接性（函数或块内访问）&lt;/p&gt;
&lt;p&gt;组织项目策略：头文件定义用户类型，为操纵类型的函数提供原型；源代码文件放置对应函数的定义；main和调用这些函数的函数放在第三文件上。&lt;/p&gt;
&lt;p&gt;为了减少命名冲突，引入了命名空间的概念，空间还能嵌套&lt;/p&gt;
&lt;h3 id=&quot;对象和类&quot;&gt;&lt;a href=&quot;#对象和类&quot; class=&quot;headerlink&quot; title=&quot;对象和类&quot;&gt;&lt;/a&gt;对象和类&lt;/h3&gt;&lt;p&gt;突出显示OOP特性：抽象；封装和数据隐藏；多态；继承以及代码的可重用性。&lt;br&gt;接口是共享框架，供两个系统交互时使用的。&lt;br&gt;类的构造函数和析构函数，列表初始化参数，this指针，枚举结构体等。&lt;/p&gt;
&lt;h3 id=&quot;使用类&quot;&gt;&lt;a href=&quot;#使用类&quot; class=&quot;headerlink&quot; title=&quot;使用类&quot;&gt;&lt;/a&gt;使用类&lt;/h3&gt;&lt;p&gt;运算符重载，友元函数，重载&amp;lt;&amp;lt;，状态成员，类的自动转换和强制类型转换。&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ClassName ClassName::&lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;+ (&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ClassName &amp;amp; c) &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;重载限制：1.至少一个操作数是用户定义类型 2.使用运算符时不能违反运算符原来的句法规则 3.不能创建新运算符 4.不能重载sizeof . * :: ?: typeid const_cast static_cast 5.= () [] -&amp;gt;只能通过成员函数进行重载 6.一般用友元重载&amp;lt;&amp;lt;&lt;br&gt;对于类的总结：相对于简单C-风格，使用类必须谨慎和小心，作为补偿，它为我们完成更多工作&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;C-的编程模块&quot;&gt;&lt;a href=&quot;#C-的编程模块&quot; class=&quot;headerlink&quot; title=&quot;C++的编程模块&quot;&gt;&lt;/a&gt;C++的编程模块&lt;/h3&gt;&lt;p&gt;这一章讲述C++的函数，其中的乐趣在于大型库（标准ANSI库）和自己编写的函数，以及提高编程效率深入学习STL和BOOST C++提供的功能。&lt;br&gt;&lt;figure class=&quot;highlight typescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;Name&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;parameterList&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	statement(s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Read" scheme="https://csrjtan.github.io/categories/Read/"/>
    
    
      <category term="读书笔记" scheme="https://csrjtan.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>无人机项目</title>
    <link href="https://csrjtan.github.io/2016/01/26/%E6%97%A0%E4%BA%BA%E6%9C%BA%E9%A1%B9%E7%9B%AE/"/>
    <id>https://csrjtan.github.io/2016/01/26/无人机项目/</id>
    <published>2016-01-26T13:29:44.000Z</published>
    <updated>2016-05-28T14:25:25.000Z</updated>
    
    <content type="html">&lt;p&gt;苦苦做了几个月的项目，进展好慢，自己抗拒工程的心一直没有减退，还是自己抗拒进步，克服困难的心呢。&lt;/p&gt;
&lt;h3 id=&quot;关于项目的现状&quot;&gt;&lt;a href=&quot;#关于项目的现状&quot; class=&quot;headerlink&quot; title=&quot;关于项目的现状&quot;&gt;&lt;/a&gt;关于项目的现状&lt;/h3&gt;&lt;p&gt;不要畏惧麻烦和困难，用工程和代码以及实验来解决问题，问题是常有的。项目现在复杂度和硬件上遇到不少麻烦，应该尽力去克服。&lt;br&gt;遇到的问题：1.旋翼和妙算未到 2.完成一套基本的操作流程 3.如何有效利用guidance的数据 4.优化slam里面的误差 5.避障和跟踪算法 6.飞行器的有效起飞和控制&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/UAV1.jpg&quot; alt=&quot;与崇雨讨论的进展图&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;对于项目未来的构想&quot;&gt;&lt;a href=&quot;#对于项目未来的构想&quot; class=&quot;headerlink&quot; title=&quot;对于项目未来的构想&quot;&gt;&lt;/a&gt;对于项目未来的构想&lt;/h3&gt;&lt;p&gt;首先还是要热爱项目，对此充满希望，才能完善完成，首先附上现用的工具，列出接下来努力的方向和目标&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/UAV2.png&quot; alt=&quot;项目现状和使用技术&quot;&gt;&lt;br&gt;可以看到，接下来可以对无人机的几个经典库进行有效的学习和利用，进行更强的关于理论性的学习。&lt;a href=&quot;http://周四Dr.Li&quot; class=&quot;test test-url&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;周四Dr.Li&lt;/a&gt; shuai的课程，《代码大全》、《C++ Primer》、《算法导论》、《LINUX私房菜》、《OPENCV Code Book》、《统计学习方法》、《PCL学习使用》、《G2O的使用》以及SLAM相关方向的论文，但是好像有点多，所以我觉得代码和工程的能力是首当其冲，理论知识和英语的恶补也应该并驾齐驱。&lt;/p&gt;
&lt;h3 id=&quot;暂时对于项目的架构&quot;&gt;&lt;a href=&quot;#暂时对于项目的架构&quot; class=&quot;headerlink&quot; title=&quot;暂时对于项目的架构&quot;&gt;&lt;/a&gt;暂时对于项目的架构&lt;/h3&gt;&lt;p&gt;主要是对于算法层上的组织，这几块高效的智能操作应当如何实施&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/UAV3.png&quot; alt=&quot;无人机项目的整体架构&quot;&gt;&lt;br&gt;是否可以考虑率先完成一个小的demo,进而进行某个点的深入学习研发。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;苦苦做了几个月的项目，进展好慢，自己抗拒工程的心一直没有减退，还是自己抗拒进步，克服困难的心呢。&lt;/p&gt;
&lt;h3 id=&quot;关于项目的现状&quot;&gt;&lt;a href=&quot;#关于项目的现状&quot; class=&quot;headerlink&quot; title=&quot;关于项目的现状&quot;&gt;&lt;/a&gt;关于项目的现状&lt;/
    
    </summary>
    
      <category term="Life" scheme="https://csrjtan.github.io/categories/Life/"/>
    
    
      <category term="总结" scheme="https://csrjtan.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
</feed>
