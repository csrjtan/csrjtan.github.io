<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CSRJTAN</title>
  <subtitle>Keep Moving</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://csrjtan.github.io/"/>
  <updated>2016-06-04T14:18:15.000Z</updated>
  <id>https://csrjtan.github.io/</id>
  
  <author>
    <name>CsrjTan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CS231n_3</title>
    <link href="https://csrjtan.github.io/2016/06/04/CS231n-3/"/>
    <id>https://csrjtan.github.io/2016/06/04/CS231n-3/</id>
    <published>2016-06-04T10:36:58.000Z</published>
    <updated>2016-06-04T14:18:15.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Lienar-Classification&quot;&gt;&lt;a href=&quot;#Lienar-Classification&quot; class=&quot;headerlink&quot; title=&quot;Lienar Classification&quot;&gt;&lt;/a&gt;Lienar Classification&lt;/h3&gt;&lt;h4 id=&quot;Loss-Function&quot;&gt;&lt;a href=&quot;#Loss-Function&quot; class=&quot;headerlink&quot; title=&quot;Loss Function&quot;&gt;&lt;/a&gt;Loss Function&lt;/h4&gt;&lt;p&gt;定义Multiclass SVM loss: $L_i = \sum_{j\neq y_i} max(0,s_j-s_{y_i}+1)$&lt;br&gt;这里，$L_i$为针对类别i的Loss值，$s_j$是除了i的其他类别得分,$y_i$为当前目标类别，$s_{y_i}$ 为当前目标类别得分&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/cs231n060401.png&quot; alt=&quot;SVM loss&quot;&gt;&lt;br&gt;Full Training Loss为取平均,$L=\frac{1}{N}\sum_{i=1}^N L_i$ ,则L=（2.9+0+10.9）/3= 4.6&lt;/p&gt;
&lt;p&gt;SoftMax function: $\frac{e^{s_k}}{\sum_j e^{s_j}}$&lt;br&gt;这里的SVM loss存在一个问题，w可能不是唯一存在满足L最小的，比如w=w*2,L依然为0，但w已经放大了两倍，如图；这里我们加入正则项$\alpha R(w)$,其中$\alpha$为训练误差和模型复杂度的调整系数&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/cs231n060402.png&quot; alt=&quot;SVM loss Bug&quot;&gt;&lt;/p&gt;
&lt;p&gt;这里提到了loss function的选择：对于loss function的值全体做shift和scale是不会影响梯度的，而max/min则导致最后收敛时候梯度无限小。&lt;/p&gt;
&lt;p&gt;关于正则项的使用，如SVM Loss： $L = \frac{1}{N}\sum_{i=1}^N\sum_{j\neq y_i}max(0,f(x_i;W)_j-f(x_i;W)_{y_i}+1)+\lambda R(W)$ ,called &lt;strong&gt;hinge loss&lt;/strong&gt;,而L2-SVM则$max(0,-)^2$则放大惩罚误差。这里的1是$\delta$，指正确样本到非正确样本的Margin&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;L2: $R(W) = \sum_k\sum_l W_{k,l}^2$&lt;/li&gt;
&lt;li&gt;L1: $R(W) = \sum_k\sum_l |W_{k,l}|$&lt;/li&gt;
&lt;li&gt;Elastic Net (L1+L2): $R(W)=\sum_k\sum_l \beta W_{k,l}^2 + |W_{k,l}|$&lt;/li&gt;
&lt;li&gt;Max Norm Regularization&lt;/li&gt;
&lt;li&gt;Dropout&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Softmax Classifier(Multinomial Logistic Regression)&lt;/strong&gt;: $$ L_i = -log(\frac{e^{s_{y_i}}}{\sum_j e^{s_j}})$$ ,这里Softmax是满足Minimizing the cross-entropy between estimated class probabilities and “true” distribution,从信息学的角度来说，是一个好的loss function.&lt;a href=&quot;http://cs231n.github.io/linear-classify/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Loss Function Noetes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Practical Tips: $\delta$和$\lambda$ 的trade off是相关的，所以可以fix one and only tuned another one&lt;/p&gt;
&lt;h4 id=&quot;Optimization&quot;&gt;&lt;a href=&quot;#Optimization&quot; class=&quot;headerlink&quot; title=&quot;Optimization&quot;&gt;&lt;/a&gt;Optimization&lt;/h4&gt;&lt;p&gt;得到合适的Loss Function后，如何最小化呢？使用到Optimization的方法了.&lt;br&gt;1.Random Search(Stupid)：瞎走&lt;br&gt;2.Random Local Search(这里还有很多AI的Search算法)&lt;br&gt;3.Gradient Descent（都在用的）: 沿着梯度下降，如果Loss是Convex Function,有Global Minimize;否则可能只能到达Local Minimize；如何走，也有很多学问，下一节课说。&lt;/p&gt;
&lt;p&gt;对权值求导，得到最大梯度的相反方向走：1.逐点weights,添加步长更新，Numerical Gradient: Approximate,Slow but easy  2.矩阵求导更新，Analytic Gradient: Exact, Fast but error-prone. （有时候陷入病态，无法求导或者导数太小）&lt;br&gt;[Practical Tips：用Analytic gradient but check the implementation compared with numerical gradient, called “&lt;strong&gt;Gradient Check&lt;/strong&gt;“&lt;/p&gt;
&lt;p&gt;Mini-Batch Gradient Descent: 对样本批量做，求平均更新；一般size为32/64/126，ALEX NET用了256；这里Batch过小，导致收敛漂移，陷入病态；Batch过大，则权值更新缓慢，优化过程长。&lt;/p&gt;
&lt;p&gt;调参：Suitable Learning Rate, BatchSize, Regularization&lt;/p&gt;
&lt;p&gt;题外话：回顾了一下CV上的Image Feature, Hue Histogram: 区块直方图统计，缺乏结构信息； HoG/Sift: Artifact Feature; BoW:对Feature学一个字典重新有效表示Image.&lt;/p&gt;
&lt;p&gt;SVM是一个凸优化问题，但CNN不是，所以注意凸优化里面的方法不一定适用于CNN。&lt;/p&gt;
&lt;p&gt;关于Gradient Descent的Practical considerations: 1.使用左右两端的导数值会更优,$[f(x+h)-f(x-h)]/2h$; 2.注意是往梯度的反方向更新，因为是下降 3.有效的更新步长（重要的学习参数）&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Lienar-Classification&quot;&gt;&lt;a href=&quot;#Lienar-Classification&quot; class=&quot;headerlink&quot; title=&quot;Lienar Classification&quot;&gt;&lt;/a&gt;Lienar Classification&lt;/
    
    </summary>
    
      <category term="Tech" scheme="https://csrjtan.github.io/categories/Tech/"/>
    
    
      <category term="公开课 CNN" scheme="https://csrjtan.github.io/tags/%E5%85%AC%E5%BC%80%E8%AF%BE-CNN/"/>
    
  </entry>
  
  <entry>
    <title>CS231n_1 and 2</title>
    <link href="https://csrjtan.github.io/2016/06/03/CS231n-1/"/>
    <id>https://csrjtan.github.io/2016/06/03/CS231n-1/</id>
    <published>2016-06-03T04:53:24.000Z</published>
    <updated>2016-06-03T09:02:34.000Z</updated>
    
    <content type="html">&lt;p&gt;回来积极投身CNN的学习和研究中，受到博后哥哥宪标的推荐，毅然决然去学习standford CS231n关于CNN的公开课CNN for Visual Recognition，主要由飞飞姐和Karpathy、Johnson主讲，&lt;br&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=ngXbD21b4qk&amp;amp;index=2&amp;amp;list=PLrZmhn8sSgye6ijhLzIIXiU9GNaIwbF8B&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Youtube视频&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://cs231n.stanford.edu/syllabus.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;课程主页&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;第一课-Introduction&quot;&gt;&lt;a href=&quot;#第一课-Introduction&quot; class=&quot;headerlink&quot; title=&quot;第一课 Introduction&quot;&gt;&lt;/a&gt;第一课 Introduction&lt;/h3&gt;&lt;p&gt;首先不出意外地第一节课是Introduction,飞飞对CV的研究发展历史给出了一个比较中肯的conclusion,从生物视觉的起源到Da Vinci的摄影技术以及第一篇CV phd Thesis. 主要提到了计算机视觉围绕主要的问题，有一个宏观意义上的认识。物体是识别、分类、切割、定位等，还能延伸出许多的子问题。&lt;/p&gt;
&lt;h4 id=&quot;经典工作&quot;&gt;&lt;a href=&quot;#经典工作&quot; class=&quot;headerlink&quot; title=&quot;经典工作&quot;&gt;&lt;/a&gt;经典工作&lt;/h4&gt;&lt;p&gt;这里关键读一下CV历史上影响巨大的几篇文章：&lt;br&gt;一.AdaBoost Face Detection:使得人脸的识别可以实时应用，主要Contribution:1.Harr特征的边缘提取 2.积分图的快速计算 3.AdaBoost的学习分类器&lt;br&gt;二.SIFT：Lowe大神经典之作，每个CV人都知道的图片经典特征点,具有shift、rotate、scale不变性：1.构建高斯图像金字塔 2.提取特征点 3.特征描述子的建立&lt;br&gt;三.金字塔匹配：CVPR06工作，将图片分块成多个空间金字塔，从而结合BoW等技术进行有效的匹配和分类&lt;/p&gt;
&lt;p&gt;ImageNet主要关注在CV核心问题，图像识别和分类定位等问题。起初使用的模型一般是提取特征点-&amp;gt;建立字典和模型-&amp;gt;学习分类算法(SVM)-&amp;gt;预测结果；如今DL的火热，使得CNN成为研究CV的主工具。&lt;/p&gt;
&lt;h4 id=&quot;关于CNN的工作&quot;&gt;&lt;a href=&quot;#关于CNN的工作&quot; class=&quot;headerlink&quot; title=&quot;关于CNN的工作&quot;&gt;&lt;/a&gt;关于CNN的工作&lt;/h4&gt;&lt;p&gt;1.LeCun大神的MNIST文字识别库，文章比较了多种ML方法在库上的表现，当年使用的CNN达到了非常好的效果，但具有训练速度慢、收敛难等问题&lt;br&gt;2.ImageNet12上，AlexNet这篇经典的CNN文章引爆了潮流，主要使用ReLU、GPU加速、LRN、Data Augument等技术使得CNN避免Overfitting，方便梯度传递，加速训练、解决DL收敛困难的主要问题，在比赛上获得惊人的效果。&lt;/p&gt;
&lt;h4 id=&quot;课程的Pre-Requisite&quot;&gt;&lt;a href=&quot;#课程的Pre-Requisite&quot; class=&quot;headerlink&quot; title=&quot;课程的Pre-Requisite&quot;&gt;&lt;/a&gt;课程的Pre-Requisite&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;high proficiency in python和c++&lt;/li&gt;
&lt;li&gt;Linear Algebra&lt;/li&gt;
&lt;li&gt;Machine Learning&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;第二课-Classification&quot;&gt;&lt;a href=&quot;#第二课-Classification&quot; class=&quot;headerlink&quot; title=&quot;第二课 Classification&quot;&gt;&lt;/a&gt;第二课 Classification&lt;/h3&gt;&lt;h4 id=&quot;Image-Classification&quot;&gt;&lt;a href=&quot;#Image-Classification&quot; class=&quot;headerlink&quot; title=&quot;Image Classification&quot;&gt;&lt;/a&gt;Image Classification&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://cs231n.github.io/classification/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ImageClassification Tutorial&lt;/a&gt;&lt;br&gt;Challenges:Viewpoint Variation, Scale Variation, Deformation, Occlusion, Iluumnation conditions, Background Clutter, Intra-class Variation.（图像识别的经典难点）&lt;/p&gt;
&lt;p&gt;Data-Driven Approach: Input-&amp;gt;Learning-&amp;gt;Evaluation&lt;br&gt;根据训练样本的学习出来模型，从而对新来的样本进行分类识别的方法&lt;/p&gt;
&lt;p&gt;Nearest Neighbor Classifier,具体为KNN: 1.Distance Metric的选择 2.k值的选择（根据Cross Validation,e.g. 5-fold cross-validation）,从训练集中切成5份，轮着用一份训练，剩余四份Evaluate,从而调整hyperParameters&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/cs231n060301.png&quot; alt=&quot;k-fold分析图&quot;&gt;，对于一般性的数据集，K在4-7取得更加的效果，K越大越smooth,expensive也越大&lt;/p&gt;
&lt;p&gt;[tips:Evaluate on the test set only a single time, at the very end.确保最后才使用testSets,避免overfit for testSets,保证了模型的generlzation]&lt;/p&gt;
&lt;p&gt;Ads: Easy to understand and implement&lt;br&gt;Draws: Pay computational cost at test time(因此提出了ANN的近似加速，还有FLANN的库)&lt;br&gt;Pixel-based distances on high-dimensional data can be very unintuitive.(不适用，就像图片平移或者出现Artifacts等情况，但pixel-based distance是不适应人眼的;这里karpathy用了t-SNE对CIFAR-10的图片作了一个分布排列，相似的放在一起，可以看到背景相似但内容不一的东西反而靠在一起了)&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/cs231n060303.jpg&quot; alt=&quot;t-SNE对CIFAR-10的分布&quot;&gt;&lt;br&gt;cons: suit for the low-dimensional data&lt;/p&gt;
&lt;p&gt;Summary: 1.Introduce the problem of image classification, image mapping label&lt;br&gt;2.introduce the NN classifier&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Using validation set for tuning the hyperparameters, split training data into two: a training set and a fake test set. Try different hyperparameter values&lt;/li&gt;
&lt;li&gt;Once the parameter found, we fixed and use actual test set to evaluation&lt;/li&gt;
&lt;li&gt;the NN only get about 40% accuracy on CIFAR-10, while human achieve 94% and CNN achieve already 95%!&lt;/li&gt;
&lt;li&gt;the L1 or L2 distances on raw pixel is not adequate since more strongly relative with backgrounds and color distributions rather than semantic content&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;Practice-with-kNN&quot;&gt;&lt;a href=&quot;#Practice-with-kNN&quot; class=&quot;headerlink&quot; title=&quot;Practice with kNN:&quot;&gt;&lt;/a&gt;Practice with kNN:&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;Preprocessing: Normalize the data in zero mean and unit variance&lt;/li&gt;
&lt;li&gt;If the data is high dimensional, using dimensionality reduction technique such as PCA or even Random Projections&lt;/li&gt;
&lt;li&gt;Split your traiing data randomly into train/val splits. About 70%~90% of data usually goes to the train split. It depens on how many hyperparameters you have and how much influence you expect them to have. (Cross-validation with the more folds the better, but more expensive)&lt;/li&gt;
&lt;li&gt;Train and evaluate kNN on validation data for many choices of k and across different distance types(暴力人为去尝试，加上自己实验的理解)&lt;/li&gt;
&lt;li&gt;If kNN running too long, consider using ANN library(FLANN, cost of some accuracy)&lt;/li&gt;
&lt;li&gt;Normaly do not use the validation set into the training data, we burned it for unestimated influence. Then evaluate with the test set and report the result as the performance of the kNN models.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;Linear-Claissification&quot;&gt;&lt;a href=&quot;#Linear-Claissification&quot; class=&quot;headerlink&quot; title=&quot;Linear Claissification&quot;&gt;&lt;/a&gt;Linear Claissification&lt;/h4&gt;&lt;p&gt;kNN disadvantages: 1.需要存储training data for comparison&lt;br&gt;                   2.与数据库comparison十分耗时&lt;/p&gt;
&lt;p&gt;Using a score function and loss function to build a powerful model rather than the kNN&lt;br&gt;$f(x_i,W,b) = Wx_i+b$&lt;/p&gt;
&lt;p&gt;这里主要把W,b的参数学习，x为图片输入，将像素和通道展开成一维超长向量，假设有10类，则b为【10*1】为，得到一个10维的向量，分别表示对应类别的得分。如此一来，新来样本分类只要计算一个矩阵乘法和向量加法就得到结果了，比原先kNN不知道快到哪里去。&lt;/p&gt;
&lt;p&gt;思考：这里Linear Classification相当于做了什么，怎么去理解？1.学习了对应类别的一个模板匹配 2.在高维度空间对数据样本做线性分类学习（有点像SVM)&lt;br&gt;这里将学习得到的Linear Classification再重新可视化之后，得到以下的结果&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/cs231n060302.png&quot; alt=&quot;类别模板可视化&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;回来积极投身CNN的学习和研究中，受到博后哥哥宪标的推荐，毅然决然去学习standford CS231n关于CNN的公开课CNN for Visual Recognition，主要由飞飞姐和Karpathy、Johnson主讲，&lt;br&gt;&lt;a href=&quot;https://ww
    
    </summary>
    
      <category term="Tech" scheme="https://csrjtan.github.io/categories/Tech/"/>
    
    
      <category term="公开课 CNN" scheme="https://csrjtan.github.io/tags/%E5%85%AC%E5%BC%80%E8%AF%BE-CNN/"/>
    
  </entry>
  
  <entry>
    <title>书单</title>
    <link href="https://csrjtan.github.io/2016/06/01/books/"/>
    <id>https://csrjtan.github.io/2016/06/01/books/</id>
    <published>2016-06-01T11:28:07.000Z</published>
    <updated>2016-06-02T15:12:13.000Z</updated>
    
    <content type="html">&lt;p&gt;这里记录一下书单，包括在读的、想读的、他人推荐读的。后面可以写一下正在进展的项目和工作，最后记录已读的。&lt;/p&gt;
&lt;h2 id=&quot;在读：&quot;&gt;&lt;a href=&quot;#在读：&quot; class=&quot;headerlink&quot; title=&quot;在读：&quot;&gt;&lt;/a&gt;在读：&lt;/h2&gt;&lt;p&gt;《情人》、《时间简史》、《MATLAB从入门到精通》&lt;/p&gt;
&lt;h2 id=&quot;想读：&quot;&gt;&lt;a href=&quot;#想读：&quot; class=&quot;headerlink&quot; title=&quot;想读：&quot;&gt;&lt;/a&gt;想读：&lt;/h2&gt;&lt;h3 id=&quot;面试微软之前的十本书&quot;&gt;&lt;a href=&quot;#面试微软之前的十本书&quot; class=&quot;headerlink&quot; title=&quot;面试微软之前的十本书&quot;&gt;&lt;/a&gt;面试微软之前的十本书&lt;/h3&gt;&lt;p&gt;Code: The Hidden Language of Computer Hardware and Software （《编码的奥秘》）&lt;br&gt;Computer System: A Programmer’s Perspective （《深入理解计算机系统》） / Windows via C/C++ （《Windows核心编程》 / 《程序员的自我修养》&lt;br&gt;Code Complete 2（《代码大全》）/ The Pragmatic Programmer （《程序员修炼之道》，我也把这本书称为《代码小全》）&lt;br&gt;Programming Pearls （《编程珠玑》） / Algorithms / Algorithm Design / 《编程之美》&lt;br&gt;The C Programming Language&lt;br&gt;The C++ Programming Language / Programming: Principles and Practice Using C++ / Accelerated C++&lt;br&gt;The Structure and Interpretation of Computer Programs （《计算机程序的构造和解释》）&lt;br&gt;Clean Code / Implementation Patterns&lt;br&gt;Design Patterns （《设计模式》） / Agile Software Development, Principles, Patterns, and Practices&lt;br&gt;Refactoring （《重构》）&lt;/p&gt;
&lt;h3 id=&quot;云风推荐&quot;&gt;&lt;a href=&quot;#云风推荐&quot; class=&quot;headerlink&quot; title=&quot;云风推荐&quot;&gt;&lt;/a&gt;云风推荐&lt;/h3&gt;&lt;p&gt;C++编程思想&lt;br&gt;Effective C++&lt;br&gt;深度探索C++对象模型&lt;br&gt;C++语言的设计和演化&lt;br&gt;C专家编程&lt;br&gt;C陷阱与缺陷&lt;br&gt;C语言接口与实现&lt;br&gt;Lua程序设计&lt;br&gt;Linkers and Loaders&lt;br&gt;COM本质论&lt;br&gt;Windows核心编程&lt;br&gt;深入解析Windows操作系统&lt;br&gt;程序员修炼之道&lt;br&gt;代码大全&lt;br&gt;UNIX编程艺术&lt;br&gt;设计模式&lt;br&gt;代码优化：有效使用内存&lt;br&gt;深入理解计算机系统&lt;br&gt;深入理解LINUX内核&lt;br&gt;TCP/IP 详解&lt;/p&gt;
&lt;h3 id=&quot;冯大辉&quot;&gt;&lt;a href=&quot;#冯大辉&quot; class=&quot;headerlink&quot; title=&quot;冯大辉&quot;&gt;&lt;/a&gt;冯大辉&lt;/h3&gt;&lt;p&gt;软件随想录&lt;br&gt;黑客与画家&lt;br&gt;重来&lt;br&gt;UNIX编程艺术&lt;br&gt;编程人生&lt;/p&gt;
&lt;h3 id=&quot;豆瓣CTO&quot;&gt;&lt;a href=&quot;#豆瓣CTO&quot; class=&quot;headerlink&quot; title=&quot;豆瓣CTO&quot;&gt;&lt;/a&gt;豆瓣CTO&lt;/h3&gt;&lt;p&gt;Code Complete 2&lt;br&gt;The Mythical Man-Month （《人月神话》）&lt;br&gt;Code: The Hidden Language of Computer Hardware and Software （《编码的奥秘》）&lt;br&gt;TAOCP （不解释）&lt;br&gt;The Pragmatic Programmer （《程序员修炼之道》）&lt;br&gt;Design Patterns （《设计模式》）&lt;br&gt;The Structure and Interpretation of Computer Programs （《计算机程序的构造和解释》）&lt;br&gt;Refactoring （《重构》）&lt;br&gt;The C Programming Language&lt;br&gt;Introduction to Algorithms （《算法导论》）&lt;/p&gt;
&lt;h2 id=&quot;已读：&quot;&gt;&lt;a href=&quot;#已读：&quot; class=&quot;headerlink&quot; title=&quot;已读：&quot;&gt;&lt;/a&gt;已读：&lt;/h2&gt;&lt;h3 id=&quot;技术&quot;&gt;&lt;a href=&quot;#技术&quot; class=&quot;headerlink&quot; title=&quot;技术&quot;&gt;&lt;/a&gt;技术&lt;/h3&gt;&lt;p&gt;《统计学习方法》、《这就是搜索引擎》、《浪潮之巅》、《数学之美》&lt;/p&gt;
&lt;h3 id=&quot;非技术&quot;&gt;&lt;a href=&quot;#非技术&quot; class=&quot;headerlink&quot; title=&quot;非技术&quot;&gt;&lt;/a&gt;非技术&lt;/h3&gt;&lt;p&gt;《苏菲的世界》、《如何阅读一本书》、《黑客与画家》、《解忧杂货铺》、《当我在跑步，我在谈论什么》、《白夜行》、《一个人的朝圣》、《人性的弱点》、《从0到1》、《35岁前要做的33件事》、《站在两个世界的边缘》、《极简欧洲史》、《未来在现实的第几层》、《再穷也要去旅游》、《活着》、《小王子》、《自控力》&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这里记录一下书单，包括在读的、想读的、他人推荐读的。后面可以写一下正在进展的项目和工作，最后记录已读的。&lt;/p&gt;
&lt;h2 id=&quot;在读：&quot;&gt;&lt;a href=&quot;#在读：&quot; class=&quot;headerlink&quot; title=&quot;在读：&quot;&gt;&lt;/a&gt;在读：&lt;/h2&gt;&lt;p&gt;《情人》、《
    
    </summary>
    
      <category term="Tech" scheme="https://csrjtan.github.io/categories/Tech/"/>
    
    
  </entry>
  
  <entry>
    <title>潮汕之旅&amp;拼图合照</title>
    <link href="https://csrjtan.github.io/2016/05/30/%E6%BD%AE%E6%B1%95%E4%B9%8B%E6%97%85/"/>
    <id>https://csrjtan.github.io/2016/05/30/潮汕之旅/</id>
    <published>2016-05-30T06:47:13.000Z</published>
    <updated>2016-06-01T14:49:47.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Seminar-Report&quot;&gt;&lt;a href=&quot;#Seminar-Report&quot; class=&quot;headerlink&quot; title=&quot;Seminar Report&quot;&gt;&lt;/a&gt;Seminar Report&lt;/h3&gt;&lt;p&gt;理大上学期的十个Seminar Report的1500 words的总结&lt;br&gt;&lt;a href=&quot;https://drive.google.com/file/d/0B5mtSYlvfwArMVAzblpPZjRRNmM/view&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Seminar Report&lt;/a&gt;&lt;br&gt;买设备的单据&lt;br&gt;&lt;a href=&quot;https://drive.google.com/drive/folders/0B5mtSYlvfwArbDI2N1lIdlFpZ0U&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;电脑单据&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;潮汕&quot;&gt;&lt;a href=&quot;#潮汕&quot; class=&quot;headerlink&quot; title=&quot;潮汕&quot;&gt;&lt;/a&gt;潮汕&lt;/h3&gt;&lt;p&gt;在深圳工作了一会儿了，周末借着万圣节的假期和珊爷出去玩，由于港客特别多放假，珠海长隆和周边的温泉都爆满了，所以决定去潮汕享受一下美食。结果却累得不行，时间不够，交通紧张，没有领略到什么旅游的特色，倒是和珊宝确实走了更多的路了。&lt;/p&gt;
&lt;p&gt;去了两天，住在状元街周边的旅店，总体感觉消费也不低，但人确实有点凶，不大适合旅游，受到小明的建议，决定到此体验一下潮汕的文化和美食。毕竟大学堆里有不少潮汕的朋友，这有利于了解他们的生活方式。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CS053001.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;潮州状元坊&quot;&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;这个状元坊就是当年的秀才考取功名，衣锦还乡而建的，一条街证明大家都是为了这个奋发，读书走这条路为的就是衣锦还乡呀。所以潮汕的教育应该还是很不错，相对来说还是比较重视教育和后代的，所以才会出现那么严重的超生、重男轻女之类的，确实很有趣。现在珠三角的年轻人群体不乏潮汕群体，而且公司和大学也很多，所以这个地方还是值得去了解一下，遗憾的是时间不够，没有去到汕头。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CS053002.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;潮汕牛肉面&quot;&gt;&lt;br&gt;潮汕的牛肉丸、牛杂和牛肉面自然是不容错过的，只是感觉味精有点多，不适合我这种传统顺德口味。回来还发烧和嘴巴发炎了，太上火了，以致于现在的口味也趋向清淡了。也应了年轻的时候轻狂，过了这段也就归于本性；年轻的时候爱吃辣，过了就知道自己自小的培养起来的口味和体质，还是趋于清淡。（家里人的口味和小珊的口味熏陶了我）。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CS053003.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;驸马府&quot;&gt;&lt;br&gt;在潮汕很多那些电动三轮，虽然导致交通阻塞，但却很受用，上了一个把驸马府、西湖都转了个遍，毕竟潮州的景点也不大。所以在这儿当了一回驸马，了解了很多潮州以及华南地区的建筑格局和模式。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CS053004.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;芝麻茶和杏仁茶&quot;&gt;&lt;br&gt;其实就是糊，不过口味还挺不错的，值得一试。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CS053006.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;广济桥合照&quot;&gt;&lt;br&gt;这是历史已久的桥，后来李嘉诚斥巨资翻修，很多的潮汕人漂洋过海谋求发展，功成名就就帮助建设家乡，汕头大学也是因此受惠不少。奈何潮州这个地区好像经济发展还是比较颓势，新城区可能还好一些吧。&lt;/p&gt;
&lt;p&gt;总结：这趟旅程只有两天但其实有点时间不足，交通上耗时较多，到旅游点后也没有了解和玩到太多的东西，要多加锻炼自己的策划能力，看了很多的攻略但没有地图确实还是不好弄，只有手机软件还是不够用的。需要做好手绘地图攻略，合理安排好时间出行。特别找饭店这个好像一直都不大重视，但食是旅游中十分重要的一件事情。下次改进吧。&lt;/p&gt;
&lt;h3 id=&quot;拼图合照&quot;&gt;&lt;a href=&quot;#拼图合照&quot; class=&quot;headerlink&quot; title=&quot;拼图合照&quot;&gt;&lt;/a&gt;拼图合照&lt;/h3&gt;&lt;p&gt;这里把lofter和手机拼图都放在一起了，有空可以怀缅一下。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CS053005.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;可爱的人&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CS053007.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;大四时光&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CS053008.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;合照&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CS053009.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;哥哥大婚&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Seminar-Report&quot;&gt;&lt;a href=&quot;#Seminar-Report&quot; class=&quot;headerlink&quot; title=&quot;Seminar Report&quot;&gt;&lt;/a&gt;Seminar Report&lt;/h3&gt;&lt;p&gt;理大上学期的十个Seminar Report的1500 words的总结&lt;br&gt;&lt;a href=&quot;https://drive.google.com/file/d/0B5mtSYlvfwArMVAzblpPZjRRNmM/view&quot;&gt;Seminar Report&lt;/a&gt;&lt;br&gt;买设备的单据&lt;br&gt;&lt;a href=&quot;https://drive.google.com/drive/folders/0B5mtSYlvfwArbDI2N1lIdlFpZ0U&quot;&gt;电脑单据&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;潮汕&quot;&gt;&lt;a href=&quot;#潮汕&quot; class=&quot;headerlink&quot; title=&quot;潮汕&quot;&gt;&lt;/a&gt;潮汕&lt;/h3&gt;&lt;p&gt;在深圳工作了一会儿了，周末借着万圣节的假期和珊爷出去玩，由于港客特别多放假，珠海长隆和周边的温泉都爆满了，所以决定去潮汕享受一下美食。结果却累得不行，时间不够，交通紧张，没有领略到什么旅游的特色，倒是和珊宝确实走了更多的路了。&lt;/p&gt;
&lt;p&gt;去了两天，住在状元街周边的旅店，总体感觉消费也不低，但人确实有点凶，不大适合旅游，受到小明的建议，决定到此体验一下潮汕的文化和美食。毕竟大学堆里有不少潮汕的朋友，这有利于了解他们的生活方式。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CS053001.jpg?imageView2/2/w/400/q/90&quot; alt=&quot;潮州状元坊&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Life" scheme="https://csrjtan.github.io/categories/Life/"/>
    
    
      <category term="旅游 美食" scheme="https://csrjtan.github.io/tags/%E6%97%85%E6%B8%B8-%E7%BE%8E%E9%A3%9F/"/>
    
  </entry>
  
  <entry>
    <title>重回理大</title>
    <link href="https://csrjtan.github.io/2016/05/29/%E9%87%8D%E5%9B%9E%E7%90%86%E5%A4%A7/"/>
    <id>https://csrjtan.github.io/2016/05/29/重回理大/</id>
    <published>2016-05-29T05:18:43.000Z</published>
    <updated>2016-06-01T14:27:44.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;在深圳最后一周&quot;&gt;&lt;a href=&quot;#在深圳最后一周&quot; class=&quot;headerlink&quot; title=&quot;在深圳最后一周&quot;&gt;&lt;/a&gt;在深圳最后一周&lt;/h3&gt;&lt;p&gt;从今年的3月中旬去到了相机部门里面去实习，认识了很多牛人，迄今为止一次在公司里比较真切完整的体验，几乎足足有三个月。（不想说有多苦，宝宝心里苦，宝宝认真上班）总结来说并没有进步很多，但确实学到不少，企业的管理模式，内部沟通机制，安全机制等，我住在新安的宿舍，每天上班需要40分钟，过着早上10点上班，中午12点半点外卖，午休到2点，晚饭6点吃完，7点休息聊天看书，8点回去散漫工作的日子。虽然紧张，但规律有节奏的生活带来的好处却是有目共睹的。很庆幸认识了共同入职的新伙伴，陪我度&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;过了这段富有意义的旅程。遗憾的是没有想象中的那样学到很多很有意义的东西，一方面是自己实力或者积极性不够的原因，一方面也是公司内部管理以及机密性原因，对实习生确实不能太坦诚相对。这是一家非常棒的公司，拥有非常棒的员工，大家工作节奏快而有效，虽然缺少一些生活的气息，但已经感觉到他们的工作与生活是无法割离的。这样的长时间工作带来了高薪但却缺少了个人娱乐以及陪伴家人的时间（其实还是有的，主要是在周末吧）。不得不说这段岁月过得飞快，每天都能拿出绝大部分的时间放在技术、代码上，这才是应该要有的学习和进步的态度，希望自己能保持。&lt;/p&gt;
&lt;p&gt;这最后一周本来还不想离去，但我家的小珊考完期末试，没人陪她玩，愣是过来骚扰我了，于是我就白天上班，晚上陪她去了。周二的第一天我们去了创维大厦的藕厨，点了个番茄鱼。继水煮鱼和番茄鱼之后，又刷新我世界观的🐟。还有肉团和爆炒娃娃菜，我家宝宝是有多爱吃娃娃菜~第二天去了COCO PARK，为了吃到她朋友SHOW的美奈小馆，一个吃非常FRESH的越南菜的馆子，还等了几乎一个小时，肚子又要快饿扁了，真希望能健康按时地作息。接下来秀一下拍的FRESH越南菜美食：&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life052901.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;宝宝试衣&quot;&gt;这个衣服还是跟宝宝很配的，宝宝的穿衣审美一直希望尝试新风格突破自我，所以经常想尝试欧美风，奈何骨架太小，人还偏瘦，想穿衣好看，就得吃饭。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life052905.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;薄荷紫苏柠七&quot;&gt;还有如此清新可口的饮料&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life052902.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;绿豆糕&quot;&gt;还行，但太黏了，不及我二姑妈做的呀！&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life052904.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;越南春卷&quot;&gt;野味，唯一一个比较多肉的，满足我食肉兽欲望的菜式&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life052903.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;招牌越南寿司&quot;&gt;感觉不到好味之处，只是各种酸甜香辣还有些芒果肉混在其中，这就是越南菜让人回味的特点。&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life052906.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;美奈小馆&quot;&gt;&lt;br&gt;最后一晚去了科技园旁边的一个西餐厅，点了双人套餐，吃了两份大扒还有自助，吃得也是够称的，那块香喷喷的牛肋确实是值得再尝，8分熟旁边拌上椒盐和蛋黄酸甜汁，好吃到不要不要的。还带宝宝第一次体验了一下沐足，确实有点玩过头了，回去要好好工作了！&lt;/p&gt;
&lt;h3 id=&quot;重回理大&quot;&gt;&lt;a href=&quot;#重回理大&quot; class=&quot;headerlink&quot; title=&quot;重回理大&quot;&gt;&lt;/a&gt;重回理大&lt;/h3&gt;&lt;h4 id=&quot;周六&quot;&gt;&lt;a href=&quot;#周六&quot; class=&quot;headerlink&quot; title=&quot;周六&quot;&gt;&lt;/a&gt;周六&lt;/h4&gt;&lt;p&gt;早上：回到学校的感觉真好，劳累了两个多月，是要好好做些喜欢的事情，比如说看个球什么的，今年常规赛勇士太猛，在81场常规赛里拿到了73场胜利，破了当年乔丹带领的公牛队的联盟记录。库里也大丰收，拿到了常规赛MVP，常规赛三分球也破了联盟记录了，可谓了人在巅峰的丰收年了，上一年拿到了总冠军，今年不知道是否也能冲击卫冕。早上起来看的是热火对阵猛龙，不得不说今年猛龙确实进步神速，双枪德罗赞和小钢炮罗瑞发挥出色，高歌挺进了东决，奈何詹姆斯、欧文和勒夫三巨头的骑士融合得和谐有节奏，事实上还是差距许多，特别赞许今年詹姆斯的球风和领袖气质日趋成熟稳重，主动的助攻和分球，使得除了猛龙的两场发挥出色的比赛，可谓一路在季后赛上无人能挡的，冲击总冠军的势头也是十分的猛。詹姆斯的身体素质和技术还是十分的强悍，联盟第一人确实不是儿戏，基本上两个人也防不住，看的这一场三巨头基本上也是三双，早早就结束悬念了。&lt;/p&gt;
&lt;p&gt;中午：PolyU的Research OpenDay,看到老师和同学们在展厅展示的DEMO，有分布式机器人阵列、老姐的云计算、我们的深度场景重建和辉辉的HDR；大张组的生物识别类的根据呼吸检查糖尿病、掌纹特征打卡、根据舌头识别之类的；一些基于社交信息的数据挖掘、手势控制飞机、游戏等等，看到高校里丰富多彩的应用也是欣喜十足，回来继续做学术的感觉也是真好。下午和新栋、刘日升老师一起去射射篮，单挑一下。&lt;/p&gt;
&lt;p&gt;晚上： 研究了一下HEXO，缘起看到中大师兄小土刀的博客，感觉自己也应该记录一下生活，多花点生活记录每一点点滴，可以看到自己的人生轨迹，也在写作中不断沉淀思考，做更好的自我吧。把分类和图片设置大小的做起来，七牛那可以帮助把图片设成对应所需要的大小,用&lt;a href=&quot;http://developer.qiniu.com/code/v6/api/kodo-api/image/imageview2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;imageView2&lt;/a&gt;:&lt;br&gt;&lt;figure class=&quot;highlight dts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;imageView2/&lt;span class=&quot;params&quot;&gt;&amp;lt;mode&amp;gt;&lt;/span&gt;&lt;span class=&quot;meta-keyword&quot;&gt;/w/&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;LongEdge&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;meta-keyword&quot;&gt;/h/&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;ShortEdge&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;meta-keyword&quot;&gt;/format/&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;Format&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;meta-keyword&quot;&gt;/interlace/&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;Interlace&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;meta-keyword&quot;&gt;/q/&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;Quality&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;meta-keyword&quot;&gt;/ignore-error/&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;ignoreError&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;周日&quot;&gt;&lt;a href=&quot;#周日&quot; class=&quot;headerlink&quot; title=&quot;周日&quot;&gt;&lt;/a&gt;周日&lt;/h4&gt;&lt;p&gt;早上：好不容易8点钟爬起来了，想着好好学习，奈何雷霆对阵勇士的GAME6,现在雷霆几乎要淘汰勇士了，身为勇士的支持者，当然需要支持一下球队。这个系列赛可以看到二少的成长，球风趋于稳重，进攻侵略性不变之余，投篮和技术都在渐进，基本上可以称为联盟最强突破控卫了。雷霆这边一帮人等身体素质都是好得一比，各种篮底进攻，前场篮板球都是如探囊取物来着。反观勇士这边打得很累，各种掩护后依然没有出手空间，各种突破后屡遭封盖或者近距离投射但面对着大山大墙却命中不高。所幸的是今天汤神发挥又再超神，一记又一记的三分球帮勇士把命续到最好两分钟，两队打平。勇士下半场的三分手感火热，几乎没有投失，雷霆的篮底冲击和中投依然是十分稳定，两队不断飚分上扬，知道最后两分钟，汤神再来一记三分，最好11记三分拿到全场最高的41分还破了季后赛三分最多的联盟记录。雷霆士气关键时刻在主场士气反而有点低落，威少连续两个末节关键失误断送了在主场淘汰勇士的机会，最后一场抢七大战将会在勇士展开，我只想说主场优势还是很明显，这很可能是我想看到的最终骑士对阵勇士的大战，三巨头大战水花，两队的三分都是十分强劲，而骑士这边有詹姆斯相对来说，全队实力更为稳定和全面。&lt;/p&gt;
&lt;p&gt;下午： 去整理一下以前的相片和文字，前移到HEXO这里来吧，在这里记录我的生活，展示我的人生，思考奋斗和调整我的方向&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life052908.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;理大小广场的一角&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life052909.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;理大校道&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/Life052910.jpg?imageView2/2/w/300/q/90&quot; alt=&quot;设计大楼&quot;&gt;&lt;br&gt;晚上： 约了宝宝大人一起去看五月天的演唱会，十分期待，相信一定是一个难忘的体验，第一场就是五月天了，肯定要挥泪青春岁月的节奏了！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;在深圳最后一周&quot;&gt;&lt;a href=&quot;#在深圳最后一周&quot; class=&quot;headerlink&quot; title=&quot;在深圳最后一周&quot;&gt;&lt;/a&gt;在深圳最后一周&lt;/h3&gt;&lt;p&gt;从今年的3月中旬去到了相机部门里面去实习，认识了很多牛人，迄今为止一次在公司里比较真切完整的体验，几乎足足有三个月。（不想说有多苦，宝宝心里苦，宝宝认真上班）总结来说并没有进步很多，但确实学到不少，企业的管理模式，内部沟通机制，安全机制等，我住在新安的宿舍，每天上班需要40分钟，过着早上10点上班，中午12点半点外卖，午休到2点，晚饭6点吃完，7点休息聊天看书，8点回去散漫工作的日子。虽然紧张，但规律有节奏的生活带来的好处却是有目共睹的。很庆幸认识了共同入职的新伙伴，陪我度
    
    </summary>
    
      <category term="Life" scheme="https://csrjtan.github.io/categories/Life/"/>
    
    
      <category term="感想" scheme="https://csrjtan.github.io/tags/%E6%84%9F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>Demosaic Comparison</title>
    <link href="https://csrjtan.github.io/2016/05/16/ColorDemosaicComparison/"/>
    <id>https://csrjtan.github.io/2016/05/16/ColorDemosaicComparison/</id>
    <published>2016-05-16T13:12:12.000Z</published>
    <updated>2016-06-01T14:50:34.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Demosaic-Comparison&quot;&gt;&lt;a href=&quot;#Demosaic-Comparison&quot; class=&quot;headerlink&quot; title=&quot;Demosaic Comparison&quot;&gt;&lt;/a&gt;Demosaic Comparison&lt;/h3&gt;&lt;p&gt;  进入公司2个月多了，对于ISP和Demosaic才刚起步，赶紧把CNN掌握好，做出点工作来吧！&lt;/p&gt;
&lt;p&gt;总体来说， nnr和sht直接插值，锯齿感太强，Lu和NAT的方法效率不行，然后感觉AP和SA的PSNR虚高，实际效果不行。可以考虑测一下CPSNR和CIE L&lt;em&gt;a&lt;/em&gt;b或者锯齿等其它指标。&lt;br&gt;  下面比较一下AP[1], SA,LCC1和DLMMSE[2], RI[3]的结果。&lt;/p&gt;
&lt;p&gt;[1] SA, &lt;a href=&quot;http://www.csee.wvu.edu/~xinl/demo/demosaic.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.csee.wvu.edu/~xinl/demo/demosaic.html&lt;/a&gt;&lt;br&gt;[2] DLMMSE, Zhang L, Wu X. Color demosaicking via directional linear minimum mean square-error estimation[J]. Image Processing, IEEE Transactions on, 2005, 14(12): 2167-2178.&lt;br&gt;[3] RI, &lt;a href=&quot;http://www.ok.ctrl.titech.ac.jp/res/DM/RI.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.ok.ctrl.titech.ac.jp/res/DM/RI.html&lt;/a&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CDC-5281.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CDC-5282.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/CDC-5283.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;结果总结&quot;&gt;&lt;a href=&quot;#结果总结&quot; class=&quot;headerlink&quot; title=&quot;结果总结&quot;&gt;&lt;/a&gt;结果总结&lt;/h3&gt;&lt;p&gt;总体来说，这些方法都在大部分地方插值准确，肉眼不容易区分，都没有发现有锯齿等明显不和谐区域的出现。主要是在变化剧烈的边缘和光亮变化强的区域出现Artifacts。时间上以SA、AP、LCC1、RI占优，效果上以DLMMSE和RI最优。&lt;br&gt;从实现来说LCC1是简单高效的，AP做了一个映射也是可以的，DLMMSE主要做了PCA的分解，SA是有迭代的求解，RI有待进一步学习。&lt;/p&gt;
&lt;h3 id=&quot;ImageJ&quot;&gt;&lt;a href=&quot;#ImageJ&quot; class=&quot;headerlink&quot; title=&quot;ImageJ&quot;&gt;&lt;/a&gt;ImageJ&lt;/h3&gt;&lt;p&gt;看了不少的论文和代码了，及时地来总结一下吧，马上又要开展对于DL的学习了。先来ImageJ的吧？把JAva各个类和用例都看了，然而并没有派上用场，所以应该吸取教训，先学足够的，马上就用。不然看完也没有机会用，看完也用不上，看完也还是不会用，对于CODING这样的事情来说就是实用至上，不断使用行动，付出并成为一种习惯，从而变成一种轻松的反射或者习惯，最后培养成为爱好。ImageJ主要是一个科学图像的小插件，由JAVA框架开发，可以不依赖系统，自带JRE。一般分为MARCRO,SCRIPTS等，做些命令脚本批量处理之类的。系统自带功能包括图像基本操作、处理和分析，强大之处在于用户可以开发插件Plugin快速量身定做图像处理工具。&lt;/p&gt;
&lt;p&gt;Plugin分为普通plugin，图片filter plugin以及堆 stack plugin。先setup了，获得指定图片类型后，然后用run()方法对读入的图片进行处理。总体还是看一下一本图像处理ImageJ实战和ImageJ手册吧，要用就回头去看一下。现在先放一放ImageJ吧，主力还是在Matlab和MatConv,高层的调用可以帮助开发者在思维和方法层面上更专注，不然用c和c++这样的还是需要花费力气在数据结构和指针，语言组织上，确实吃力不讨好的事情。&lt;/p&gt;
&lt;h3 id=&quot;ISP&quot;&gt;&lt;a href=&quot;#ISP&quot; class=&quot;headerlink&quot; title=&quot;ISP&quot;&gt;&lt;/a&gt;ISP&lt;/h3&gt;&lt;p&gt;   再者说一下关于ISP的流程吧，进来后发现组里是做相机的，包括从硬到软的各个层面，硬件-&amp;gt;FPGA-&amp;gt;嵌入式-&amp;gt;图像算法-&amp;gt;IQ等等。这里说一下相机出图的ISP流程，从RAW到用户看到的JPEG： RAW-&amp;gt;BLC-&amp;gt;LSC-&amp;gt;AWB-&amp;gt;DEMOSAIC-&amp;gt;DENOISE-&amp;gt;CC-&amp;gt;GAMMA-&amp;gt;JPEG，里面每个算法和相机原理都是进来才学习了解到的。希望对以后有用。&lt;/p&gt;
&lt;h3 id=&quot;Demosaic&quot;&gt;&lt;a href=&quot;#Demosaic&quot; class=&quot;headerlink&quot; title=&quot;Demosaic&quot;&gt;&lt;/a&gt;Demosaic&lt;/h3&gt;&lt;p&gt;   然后回到今天要记录的重点，Demosaic的papers和学习总结：首先看了Comparison和Survey这两篇关于去马赛克发展的重要文章，科普了不少要点：比如说如何用空间相关信息和谱间相关信息来恢复Downsample后的信息，讲述了主要包括空域和谱域的方法，color ratio and color difference的基本假设。空域上利用插值，bilinear以及梯度适应的adaptive gradient interpolation，还有转到其他频域如傅里叶和小波上面去做滤波的，根据不同频段的相关性来进行近似恢复。这里着重说一下影响力比较高的文章，首先是Alternating Projection：将谱间的强相关性信息映射到一个POCS(Project onto convex set）里面，然后求解convex问题得到一个较优的像素解来作为插值。然后是Succesive Approximate是将谱间差值的difference变成一个由局部迭代成局部最优的过程，先从简单的插值后，然后迭代更新color difference从而到达局部较优的位置。SSD是利用增强自相关性，还没仔细了解。还有利用非局部相似块的方法，如定义Non-local Similarity，如果它表达的相关性（梯度小）比当前块强，则用该块作为当前块的插值结果。然后我老板的两个比较突破性的论文：DLMMSE提出了去马赛克噪声，然后引入去噪模型，转换成求解最优color difference的方法，里面有些数学证明还待细看，该工作直接把PSNR提高了5db。后来的LDI_NAT也是经过LDI的梯度插值后，然后使用PCA的方法分解构造出sparse模型，从而去掉artifacts. 再后来的方法就包括一些sparse模型，dictionary learning，tv等，还有Tokyo Insitute 的RI方法，利用残差的方法，快速有效进行去马赛克。&lt;/p&gt;
&lt;h3 id=&quot;CNN&quot;&gt;&lt;a href=&quot;#CNN&quot; class=&quot;headerlink&quot; title=&quot;CNN&quot;&gt;&lt;/a&gt;CNN&lt;/h3&gt;&lt;p&gt;   后面用凯爷的网络跑了一下CNN的结果，目测要比Tokyo Institute的RI要好，这里用的是5层卷积神经网络，使用柯德IQA的库中500多张图片作为TrainingSets,Kodak的24张图作为TestSets，使用的是MatconvNet的框架。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Demosaic-Comparison&quot;&gt;&lt;a href=&quot;#Demosaic-Comparison&quot; class=&quot;headerlink&quot; title=&quot;Demosaic Comparison&quot;&gt;&lt;/a&gt;Demosaic Comparison&lt;/h3&gt;&lt;p&gt;  进入公司2个月多了，对于ISP和Demosaic才刚起步，赶紧把CNN掌握好，做出点工作来吧！&lt;/p&gt;
&lt;p&gt;总体来说， nnr和sht直接插值，锯齿感太强，Lu和NAT的方法效率不行，然后感觉AP和SA的PSNR虚高，实际效果不行。可以考虑测一下CPSNR和CIE L&lt;em&gt;a&lt;/em&gt;b或者锯齿等其它指标。&lt;br&gt;  下面比较一下AP[1], SA,LCC1和DLMMSE[2], RI[3]的结果。&lt;/p&gt;
&lt;p&gt;[1] SA, &lt;a href=&quot;http://www.csee.wvu.edu/~xinl/demo/demosaic.html&quot;&gt;http://www.csee.wvu.edu/~xinl/demo/demosaic.html&lt;/a&gt;&lt;br&gt;[2] DLMMSE, Zhang L, Wu X. Color demosaicking via directional linear minimum mean square-error estimation[J]. Image Processing, IEEE Transactions on, 2005, 14(12): 2167-2178.&lt;br&gt;[3] RI, &lt;a href=&quot;http://www.ok.ctrl.titech.ac.jp/res/DM/RI.html&quot;&gt;http://www.ok.ctrl.titech.ac.jp/res/DM/RI.html&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Tech" scheme="https://csrjtan.github.io/categories/Tech/"/>
    
    
      <category term="paper Demosaic" scheme="https://csrjtan.github.io/tags/paper-Demosaic/"/>
    
  </entry>
  
  <entry>
    <title>Ted《光荣与梦想》</title>
    <link href="https://csrjtan.github.io/2016/04/21/ted-glories-and-dream/"/>
    <id>https://csrjtan.github.io/2016/04/21/ted-glories-and-dream/</id>
    <published>2016-04-21T08:48:13.000Z</published>
    <updated>2016-06-01T14:52:06.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;特奥会冠军讲解智障人士生活&quot;&gt;&lt;a href=&quot;#特奥会冠军讲解智障人士生活&quot; class=&quot;headerlink&quot; title=&quot;特奥会冠军讲解智障人士生活&quot;&gt;&lt;/a&gt;特奥会冠军讲解智障人士生活&lt;/h3&gt;&lt;p&gt;首先看完一个感动的TED TALK，关于社会对智障人士的看法，一位特奥会的冠军以身作则提及他们的生活，受歧视，然特奥会提供了一个平台，展示属于他们生命的价值，他们的梦想和他们的尊严。相比于我们，诚然他们的舞台太小，但我们应该看到他们所作的努力。对于自己，四肢健全，家庭幸福安康，应该有更多的理由去追逐幸福，有时候不要一直想着缺少的，应该惦记自己所拥有的，记得感恩。并去勇敢自信的追逐自己所想所求，不要害怕失败，不要害怕别人的目光，勇敢的be yourself.虽然那可能不容易，但人生只有一次，时间是宝贵的&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;，追逐自己所看重的东西吧。成长在于做减法，在于专注，努力。奉献，寻找自己的价值，承担应有的价值。看到了不丹的视频，信仰让他们满足，与自然的好好相处让他们轻松。自己看得多可能欲望也多，但有时候压抑一下自己的欲望，追逐真正渴求的，也是一种成熟，我不知道是否经历过才算真的看透，但有些事情觉得经历了也不一定幸福，所以还是应该保有自己，一直是不断地思考迷茫，殊不知其实自己静不下来，无法专注于自己的学业。我认为应当认真一丝不苟地完成自己的任务，才是最大的意义，多去看有用实用的书，做有价值的事情，珍惜自己有的机会。完成好课程，做好实习的任务，要有一个研究生的觉悟。&lt;/p&gt;
&lt;p&gt;另外，追逐幸福的要素：&lt;br&gt;1.找到喜欢的工作，高收入，受到社会的尊重&lt;br&gt;2.减少上下班耗费的时间，有充足的社交时间&lt;br&gt;3.对国家和社会有政治热情，参与度。&lt;/p&gt;
&lt;h3 id=&quot;笔记本里的诗&quot;&gt;&lt;a href=&quot;#笔记本里的诗&quot; class=&quot;headerlink&quot; title=&quot;笔记本里的诗&quot;&gt;&lt;/a&gt;笔记本里的诗&lt;/h3&gt;&lt;p&gt;不论曾经的彼此多么幼稚，多么可笑&lt;br&gt;终有一天我们都变得成熟；&lt;br&gt;也终有一天，我们都会老去；&lt;br&gt;可是，却没有人可以永远不长大，&lt;br&gt;却没有人可以永远年轻，&lt;br&gt;成熟，有时候会让人心痛、很无奈。&lt;br&gt;那个时候才会懂得–&lt;br&gt;爱情本不是件该执着的事情。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xl4js.com1.z0.glb.clouddn.com/poem5291.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;特奥会冠军讲解智障人士生活&quot;&gt;&lt;a href=&quot;#特奥会冠军讲解智障人士生活&quot; class=&quot;headerlink&quot; title=&quot;特奥会冠军讲解智障人士生活&quot;&gt;&lt;/a&gt;特奥会冠军讲解智障人士生活&lt;/h3&gt;&lt;p&gt;首先看完一个感动的TED TALK，关于社会对智障人士的看法，一位特奥会的冠军以身作则提及他们的生活，受歧视，然特奥会提供了一个平台，展示属于他们生命的价值，他们的梦想和他们的尊严。相比于我们，诚然他们的舞台太小，但我们应该看到他们所作的努力。对于自己，四肢健全，家庭幸福安康，应该有更多的理由去追逐幸福，有时候不要一直想着缺少的，应该惦记自己所拥有的，记得感恩。并去勇敢自信的追逐自己所想所求，不要害怕失败，不要害怕别人的目光，勇敢的be yourself.虽然那可能不容易，但人生只有一次，时间是宝贵的
    
    </summary>
    
      <category term="Life" scheme="https://csrjtan.github.io/categories/Life/"/>
    
    
      <category term="Ted" scheme="https://csrjtan.github.io/tags/Ted/"/>
    
  </entry>
  
  <entry>
    <title>leetcode15</title>
    <link href="https://csrjtan.github.io/2016/04/17/leetcode15/"/>
    <id>https://csrjtan.github.io/2016/04/17/leetcode15/</id>
    <published>2016-04-17T09:20:41.000Z</published>
    <updated>2016-06-01T14:50:50.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;3Sum&quot;&gt;&lt;a href=&quot;#3Sum&quot; class=&quot;headerlink&quot; title=&quot;3Sum&quot;&gt;&lt;/a&gt;3Sum&lt;/h3&gt;&lt;p&gt;问题：给出一个数组S，找出里面三个数组成a+b+c = 0,且a&amp;lt;b&amp;lt;c,并且是唯一triplets&lt;/p&gt;
&lt;p&gt;思路：先排序，从两边逼近中间求解twoSum。最开始是从前往后匹配，发现超时了。现在复杂度在O(n^2)&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vector&amp;lt;vector&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;gt; threeSum(vector&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//排序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;std::sort(&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;.begin(),&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;.end());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vector&amp;lt;vector&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; len = &lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;len;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; target = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;- &lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; start = i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, end = len - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//twoSum求解&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(start&amp;lt;end)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[start]+&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[end]==target)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            vector&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt; solution;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            solution.push_back(&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            solution.push_back(&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[start]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            solution.push_back(&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[end]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result.push_back(solution);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            start++,end--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//当前一位和后一位是一样的时候，直接跳过这一层的判断&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(start&amp;lt;end&amp;amp;&amp;amp;&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[start]==&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[start&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]) start++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(start&amp;lt;end&amp;amp;&amp;amp;&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[end] ==&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[end+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]) end--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//两边判断逼近&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[start]+&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[end]&amp;lt;target)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            start++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            end--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//时刻判断第一位a是否重复&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(i&amp;lt;len&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[i]==&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;[i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;3ClosestSum&quot;&gt;&lt;a href=&quot;#3ClosestSum&quot; class=&quot;headerlink&quot; title=&quot;3ClosestSum&quot;&gt;&lt;/a&gt;3ClosestSum&lt;/h3&gt;&lt;p&gt;问题：求三个和的最相近近似解&lt;br&gt;思路：转化成求两个和离target的最相近似解&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// return the twoSumClosest sum&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;twoSumClosest&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(vector&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; &amp;amp;sortedNum,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; start,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; head = start , tail = sortedNum.size()&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; res = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,dis = INT_MAX;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//依据最近距离返回res&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(head &amp;lt; tail)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; tmp = sortedNum[head]+ sortedNum[tail];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(tmp&amp;lt;&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;-tmp&amp;lt;dis)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                res = tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dis = &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;-tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            head++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(tmp &amp;gt; &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(tmp-&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;&amp;lt;dis)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                res = tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dis = tmp-&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tail--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;threeSumClosest&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(vector&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; &amp;amp;num,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n = num.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sort(num.begin(),num.end());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; res,dis = INT_MAX;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;n&lt;span class=&quot;number&quot;&gt;-2&lt;/span&gt;;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; target2 = &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;-num[i],tmpdis;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; tmpres = twoSumClosest(num,i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,target2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 若有更近解，更新res&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;((tmpdis = abs(tmpres-target2))&amp;lt;dis)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res = tmpres + num[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dis = tmpdis;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// 有一样解即刻返回&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(res==&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;4Sum&quot;&gt;&lt;a href=&quot;#4Sum&quot; class=&quot;headerlink&quot; title=&quot;4Sum&quot;&gt;&lt;/a&gt;4Sum&lt;/h3&gt;&lt;p&gt;问题： 4个和为target&lt;br&gt;思路：2+2的方法，遍历前两个，然后求解twoSum问题&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vector&amp;lt;vector&amp;lt;int&amp;gt; &amp;gt; fourSum(vector&amp;lt;int&amp;gt; &amp;amp;num, int target) {
    int n = num.size();
    vector&amp;lt;vector&amp;lt;int&amp;gt; &amp;gt; res;
    sort(num.begin(), num.end());
    for(int i = 0; i &amp;lt; n-3; i++)
    {
        if(i &amp;gt; 0 &amp;amp;&amp;amp; num[i] == num[i-1])continue;//防止第一个元素重复
        for(int j = i+1; j &amp;lt; n-2; j++)
        {
            if(j &amp;gt; i+1 &amp;amp;&amp;amp; num[j] == num[j-1])continue;//防止第二个元素重复
            int target2 = target - num[i] - num[j];
            int head = j+1, tail = n-1;
            //Two Sum Problem
            while(head &amp;lt; tail)
            {
                int tmp = num[head] + num[tail];
                if(tmp &amp;gt; target2)
                    tail--;
                else if(tmp &amp;lt; target2)
                    head++;
                else
                {
                    res.push_back(vector&amp;lt;int&amp;gt;{num[i], num[j], num[head], num[tail]});
                    //为了防止出现重复的二元组，使结果等于target2
                    int k = head+1;
                    while(k &amp;lt; tail &amp;amp;&amp;amp; num[k] == num[head])k++;
                    head = k;

                    k = tail-1;
                    while(k &amp;gt; head &amp;amp;&amp;amp; num[k] == num[tail])k--;
                    tail = k;
                }
            }
        }
    }
    return res;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;```&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;3Sum&quot;&gt;&lt;a href=&quot;#3Sum&quot; class=&quot;headerlink&quot; title=&quot;3Sum&quot;&gt;&lt;/a&gt;3Sum&lt;/h3&gt;&lt;p&gt;问题：给出一个数组S，找出里面三个数组成a+b+c = 0,且a&amp;lt;b&amp;lt;c,并且是唯一triplets&lt;/p&gt;
&lt;p&gt;思路：先排序，从两边逼近中间求解twoSum。最开始是从前往后匹配，发现超时了。现在复杂度在O(n^2)&lt;br&gt;
    
    </summary>
    
      <category term="Tech" scheme="https://csrjtan.github.io/categories/Tech/"/>
    
    
      <category term="leetcode" scheme="https://csrjtan.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>leetcode7-14</title>
    <link href="https://csrjtan.github.io/2016/04/13/leetcode7-14/"/>
    <id>https://csrjtan.github.io/2016/04/13/leetcode7-14/</id>
    <published>2016-04-13T07:52:37.000Z</published>
    <updated>2016-06-01T14:51:09.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;leetcode7&quot;&gt;&lt;a href=&quot;#leetcode7&quot; class=&quot;headerlink&quot; title=&quot;leetcode7&quot;&gt;&lt;/a&gt;leetcode7&lt;/h4&gt;&lt;p&gt;问题：逆序输出INTEGER&lt;br&gt;思路：分为正负，然后用模和除来一位位逆序输出&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;int reverse(int &lt;span class=&quot;keyword&quot;&gt;x&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//使用long long以方便边界处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       long long i = &lt;span class=&quot;keyword&quot;&gt;x&lt;/span&gt;%&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       int &lt;span class=&quot;keyword&quot;&gt;j&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;j&lt;/span&gt;==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; i&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;((&lt;span class=&quot;keyword&quot;&gt;j&lt;/span&gt;/=&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)!=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#123;	&lt;span class=&quot;comment&quot;&gt;//从低位往高位运算结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           i = i*&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;j&lt;/span&gt;%&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;//边界判断&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(i&amp;gt;&lt;span class=&quot;number&quot;&gt;2147483647&lt;/span&gt; || i&amp;lt;-&lt;span class=&quot;number&quot;&gt;2147483647&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; i&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;leetcode8&quot;&gt;&lt;a href=&quot;#leetcode8&quot; class=&quot;headerlink&quot; title=&quot;leetcode8&quot;&gt;&lt;/a&gt;leetcode8&lt;/h4&gt;&lt;p&gt;问题：String to Integer(ATOI)&lt;/p&gt;
&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; myAtoi(string &lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//遇到空格跳过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;[i]==&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//区分正负&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; flag=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;[i]==&lt;span class=&quot;string&quot;&gt;&#39;+&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;    flag = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;[i]==&lt;span class=&quot;string&quot;&gt;&#39;-&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;    flag = &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;[i]&amp;gt;=&lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;&amp;amp;&amp;amp;&lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;[i]&amp;lt;=&lt;span class=&quot;string&quot;&gt;&#39;9&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	&lt;span class=&quot;comment&quot;&gt;//用long long方便判断溢出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; res =&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res += (&lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;[i]-&lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//string转换成int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;[i]&amp;gt;=&lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;[i]&amp;lt;=&lt;span class=&quot;string&quot;&gt;&#39;9&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                res = res *&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; +(&lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;[i]-&lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(res&amp;gt;INT_MAX)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; flag==&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;?INT_MAX:INT_MIN;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res = res * flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;leetcode9&quot;&gt;&lt;a href=&quot;#leetcode9&quot; class=&quot;headerlink&quot; title=&quot;leetcode9&quot;&gt;&lt;/a&gt;leetcode9&lt;/h4&gt;&lt;p&gt;问题：判断integer是否回文&lt;br&gt;&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bool isPalindrome(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//不考虑负数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (x&amp;lt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;div&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//最大除项&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;((x/&lt;span class=&quot;keyword&quot;&gt;div&lt;/span&gt;)&amp;gt;=&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;div&lt;/span&gt;*=&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(x&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; l = x /&lt;span class=&quot;keyword&quot;&gt;div&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; r = x %&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(l!=r)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//reduce left and right&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//如果一致，同时左右一起消去&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            x = x%&lt;span class=&quot;keyword&quot;&gt;div&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;div&lt;/span&gt;/=&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;leetcode10&quot;&gt;&lt;a href=&quot;#leetcode10&quot; class=&quot;headerlink&quot; title=&quot;leetcode10&quot;&gt;&lt;/a&gt;leetcode10&lt;/h4&gt;&lt;p&gt;问题：正则匹配,.表示任意字母，*表示任意个数&lt;br&gt;&lt;a href=&quot;http://articles.leetcode.com/regular-expression-matching&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;作者回答&lt;/a&gt;&lt;br&gt;这个问题是正则匹配的问题，比较复杂，是一个状态机匹配的问题，可以用递归去求解。&lt;br&gt;&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; bool isMatch(string &lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;, string p) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&lt;span class=&quot;comment&quot;&gt;//空串匹配&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (p[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] == &#39;\&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] == &#39;\&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&#39;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//遇到的是非&#39;*&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (p[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] != &#39;*&#39;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//字符匹配或者匹配&#39;.&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ((p[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] == &lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]) || (p[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] == &#39;.&#39; &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] != &#39;\&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&#39;)) &amp;amp;&amp;amp; isMatch(&lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;.substr(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;.length() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), p.substr(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, p.length() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//遇到&#39;*&#39;,使用while去递归尝试搜索每一种可能的情况&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ((p[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] == &lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]) || (p[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] == &#39;.&#39; &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] != &#39;\&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&#39;))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isMatch(&lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;, p.substr(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,p.length()-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; true&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;=&lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;.substr(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;.length()-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//跨过&#39;*&#39;的字符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; isMatch(&lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;, p.substr(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,p.length()-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;leetcode11&quot;&gt;&lt;a href=&quot;#leetcode11&quot; class=&quot;headerlink&quot; title=&quot;leetcode11&quot;&gt;&lt;/a&gt;leetcode11&lt;/h4&gt;&lt;p&gt;问题：给一组正数数组，任意两个数组元素$a_i,a_j$,使得有最大面积$S=min(a_i,a_j)*(j-i)&lt;/p&gt;
&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//求出最大的装水面积&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; maxArea(vector&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;height&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; start = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;height&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;()&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; maxV = INT_MIN;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;//从两边向中间收拢&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;while&lt;/span&gt;(start&amp;lt;&lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; contains = &lt;span class=&quot;built_in&quot;&gt;min&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;height&lt;/span&gt;[&lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt;],&lt;span class=&quot;built_in&quot;&gt;height&lt;/span&gt;[start]) * (&lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt;-start);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           maxV = &lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(maxV,contains);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//左比右的板短，移动左边&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;built_in&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;height&lt;/span&gt;[start]&amp;lt;&lt;span class=&quot;built_in&quot;&gt;height&lt;/span&gt;[&lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               start++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;built_in&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;built_in&quot;&gt;end&lt;/span&gt;--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; maxV;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;leetcode12&quot;&gt;&lt;a href=&quot;#leetcode12&quot; class=&quot;headerlink&quot; title=&quot;leetcode12&quot;&gt;&lt;/a&gt;leetcode12&lt;/h4&gt;&lt;p&gt;问题：INTEGER TO ROMAN&lt;br&gt;思路：关键在于罗马数制和阿拉伯数制的映射，分为M,D,C,L,V,I。&lt;br&gt;由罗马字母的数值大小取模匹配。&lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;intToRoman&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; num&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (num &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; num &amp;lt; &lt;span class=&quot;number&quot;&gt;4000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; res = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//建立映射&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; symbol[] = &amp;#123; &lt;span class=&quot;string&quot;&gt;&quot;M&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;CM&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;D&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;CD&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;XC&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;L&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;XL&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;X&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;IX&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;V&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;IV&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;I&quot;&lt;/span&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;[] = &amp;#123; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;900&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (num&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; (&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;)/&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)); i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#123;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;comment&quot;&gt;//将integer由罗马字母的大到小匹配，然后输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (num / &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;[i]&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; (num / &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;[i]); j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						res += symbol[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					num %= &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;leetcode13&quot;&gt;&lt;a href=&quot;#leetcode13&quot; class=&quot;headerlink&quot; title=&quot;leetcode13&quot;&gt;&lt;/a&gt;leetcode13&lt;/h4&gt;&lt;p&gt;问题：ROMAN TO INTEGER&lt;br&gt;最简思路：罗马字母里，左比右小，则为右减左；左比右大，则为右加左。&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//遍历罗马字串，左和右是指罗马字值M,D,C,X,V,I&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	res+= res-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*&lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	res+= res+&lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//我的思路：先匹配两字的，再匹配一字的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;romanToInt&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; s&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; res=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; symbol[] = &amp;#123; &lt;span class=&quot;string&quot;&gt;&quot;M&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;CM&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;D&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;CD&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;XC&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;L&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;XL&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;X&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;IX&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;V&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;IV&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;I&quot;&lt;/span&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;[] = &amp;#123; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;900&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; s.length(); i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; flag = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;match&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;s,i,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//First find the two in advance&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; (&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(symbol) / &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(symbol[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])); j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// match symbol&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;a href=&quot;http://match.compare&quot; class=&quot;test test-url&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;match.compare&lt;/a&gt;(symbol[j]) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				res += &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				flag = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (flag == &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//find the one then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;match1&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;s, i, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; (&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(symbol) / &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(symbol[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])); j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;a href=&quot;http://match1.compare&quot; class=&quot;test test-url&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;match1.compare&lt;/a&gt;(symbol[j]) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				res += &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (res &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; res &amp;lt; &lt;span class=&quot;number&quot;&gt;4000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;leetcode14&quot;&gt;&lt;a href=&quot;#leetcode14&quot; class=&quot;headerlink&quot; title=&quot;leetcode14&quot;&gt;&lt;/a&gt;leetcode14&lt;/h4&gt;&lt;p&gt;问题：Longest Common Prefix，求字符串组里面，公共有的前缀子串。&lt;br&gt;思路：这个是公共子串的特例，前缀子串，公共子串的学问很深，可以参考&lt;a href=&quot;http://www.cnblogs.com/ider/p/longest-common-substring-problem-optimization.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文章&lt;/a&gt;，里面使用一个个起始字符暴力匹配O(N^3),和DP的O(N^2)等。&lt;br&gt;这个问题也十分有用，可以判断字符串的相似度等等，经典的面试题。&lt;/p&gt;
&lt;figure class=&quot;highlight mel&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; longestCommonPrefix(&lt;span class=&quot;keyword&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;&amp;gt;&amp;amp; strs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//判断边界条件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (strs.&lt;span class=&quot;keyword&quot;&gt;size&lt;/span&gt;() == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (strs.&lt;span class=&quot;keyword&quot;&gt;size&lt;/span&gt;() == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; strs[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; com = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; res = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//先比较两串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; len = strs[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].length() &amp;lt; strs[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].length() ? strs[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].length() : strs[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].length();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; len; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (strs[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][i] == strs[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;][i])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			com += strs[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (strs.&lt;span class=&quot;keyword&quot;&gt;size&lt;/span&gt;() == &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//用common串跟之后每一个串比较，common会越来越短&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; (strs.&lt;span class=&quot;keyword&quot;&gt;size&lt;/span&gt;()); i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		res = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; len = com.length()&amp;lt;strs[i].length() ? com.length() : strs[i].length();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; len; j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (com[j] == strs[i][j])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				res += com[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		com = res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;leetcode7&quot;&gt;&lt;a href=&quot;#leetcode7&quot; class=&quot;headerlink&quot; title=&quot;leetcode7&quot;&gt;&lt;/a&gt;leetcode7&lt;/h4&gt;&lt;p&gt;问题：逆序输出INTEGER&lt;br&gt;思路：分为正负，然后用模和除来一位位逆序输出&lt;br&gt;
    
    </summary>
    
      <category term="Tech" scheme="https://csrjtan.github.io/categories/Tech/"/>
    
    
      <category term="leetcode" scheme="https://csrjtan.github.io/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>leetcode3-6</title>
    <link href="https://csrjtan.github.io/2016/04/13/leetcode3-6/"/>
    <id>https://csrjtan.github.io/2016/04/13/leetcode3-6/</id>
    <published>2016-04-13T06:55:42.000Z</published>
    <updated>2016-06-01T14:51:06.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;LeetCode-3&quot;&gt;&lt;a href=&quot;#LeetCode-3&quot; class=&quot;headerlink&quot; title=&quot;LeetCode 3&quot;&gt;&lt;/a&gt;LeetCode 3&lt;/h4&gt;&lt;p&gt;Ques: Find the length of longest substring without repeating characters.&lt;/p&gt;
&lt;p&gt;思路：用table记录出现char字符的次数，256个ASCII字符初始化为-1.如果遇到重复，则记录在table里面，&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;我的代码:&lt;br&gt;&lt;figure class=&quot;highlight q&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; lengthOfLongestSubstring(&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; s) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;tables&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;256&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fill(&lt;span class=&quot;built_in&quot;&gt;tables&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;tables&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;256&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; result=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,lastRepeatedPos=&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for(&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;s.size();i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//当找到重复元素且lastRepeatedPos小于找到重复元素的下表时，更新lastRepeatedPos&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if(&lt;span class=&quot;built_in&quot;&gt;tables&lt;/span&gt;[s[i]]!=&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&amp;amp;&amp;amp;lastRepeatedPos&amp;lt;&lt;span class=&quot;built_in&quot;&gt;tables&lt;/span&gt;[s[i]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                lastRepeatedPos=&lt;span class=&quot;built_in&quot;&gt;tables&lt;/span&gt;[s[i]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//更新最大值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result=&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(result,i-lastRepeatedPos);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//元素插入表中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;tables&lt;/span&gt;[s[i]]=i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;官方解题：&lt;br&gt;&lt;a href=&quot;https://leetcode.com/articles/longest-substring-without-repeating-characters/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeetCode 3 Solution&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;AP-1&quot;&gt;&lt;a href=&quot;#AP-1&quot; class=&quot;headerlink&quot; title=&quot;AP 1&quot;&gt;&lt;/a&gt;AP 1&lt;/h5&gt;&lt;p&gt;暴力破解，但超时了,TC = O(N^3),对于字符串中的每个子串都去扫，是否子串为独立的。&lt;/p&gt;
&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// JAVA VERSION&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; lengthOfLongestSubstring(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; s) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; n = s.length();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; ans = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; n; ++i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; j = i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; j &amp;lt;= n; ++j)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            	&lt;span class=&quot;comment&quot;&gt;//是否存在唯一的子串，记录最长值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (allUnique(s, i, j)) ans = Math.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(ans, j - i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; allUnique(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; s, &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; start, &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; end) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Set&amp;lt;Character&amp;gt; &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashSet&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//将串S从头到尾的放入set匹配一次是否重复&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; i = start; i &amp;lt; end; ++i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Character ch = s.charAt(start);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;.contains(ch)) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;add&lt;/span&gt;(ch);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;AP-2&quot;&gt;&lt;a href=&quot;#AP-2&quot; class=&quot;headerlink&quot; title=&quot;AP 2&quot;&gt;&lt;/a&gt;AP 2&lt;/h5&gt;&lt;p&gt;基于上述，我们重复扫了很多子串，假设固定开始位置一个个扫的话，可以减少重复扫串的运算。这样可以使TC = O(N^2),LEFT-CLOSED AND RIGHT OPEN&lt;/p&gt;
&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// SLIDING WINDOW &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// JAVA VERSION&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public int lengthOfLongestSubstring(String &lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int n = &lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;.length()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;Set&lt;/span&gt;&amp;lt;Character&amp;gt; &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashSet&amp;lt;&amp;gt;()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int ans = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;j&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//固定i，先把j搜完，再加i&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (i &amp;lt; n &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;j&lt;/span&gt; &amp;lt; n) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// try to extend the range [i, j]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;.contains(&lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;.charAt(&lt;span class=&quot;keyword&quot;&gt;j&lt;/span&gt;)))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;.add(&lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;.charAt(&lt;span class=&quot;keyword&quot;&gt;j&lt;/span&gt;++))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ans = Math.max(ans, &lt;span class=&quot;keyword&quot;&gt;j&lt;/span&gt; - i)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;.remove(&lt;span class=&quot;keyword&quot;&gt;s&lt;/span&gt;.charAt(i++))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ans&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;AP-3&quot;&gt;&lt;a href=&quot;#AP-3&quot; class=&quot;headerlink&quot; title=&quot;AP 3&quot;&gt;&lt;/a&gt;AP 3&lt;/h5&gt;&lt;p&gt;SLDING WINDOW OPTIMIZED, TC=N = O(N)，SC=m=O(1). m为charset大小&lt;br&gt;&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; lengthOfLongestSubstring(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; s) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n = s.length(), ans = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Map&amp;lt;Character, Integer&amp;gt; &lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;(); &lt;span class=&quot;comment&quot;&gt;// current index of character&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;// try to extend the range [i, j]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; n; ++j) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;built_in&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;.containsKey(s.charAt(j))) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               i = Math.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(s.charAt(j)), i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           ans = Math.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(ans, j - i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;put&lt;/span&gt;(s.charAt(j), j + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;LEETCODE-4&quot;&gt;&lt;a href=&quot;#LEETCODE-4&quot; class=&quot;headerlink&quot; title=&quot;LEETCODE 4&quot;&gt;&lt;/a&gt;LEETCODE 4&lt;/h4&gt;&lt;p&gt;QUES: 找两个有序数组中的中位数&lt;br&gt;解法：1.暴力地将两个数组合并然后排序，直接得到中位数&lt;br&gt;     2.求得数组大小，用堆排的合并方法，找到中位数。 复杂度O(log(m+n))&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// My Code&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//合并两个数组排序，再根据大小分为奇偶情况输出中位数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;findMedianSortedArrays&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;amp; nums1, &lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;amp; nums2)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; l1 = nums1.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; l2 = nums2.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;l1;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res.push_back(nums1[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;l2;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res.push_back(nums2[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sort(res.begin(),res.end());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(res.size()%&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;)(res[(l1+l2&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)&amp;gt;&amp;gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]+res[(l1+l2 &amp;gt;&amp;gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)])/&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;)(res[(l1+l2)&amp;gt;&amp;gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;LEETCODE-5&quot;&gt;&lt;a href=&quot;#LEETCODE-5&quot; class=&quot;headerlink&quot; title=&quot;LEETCODE 5&quot;&gt;&lt;/a&gt;LEETCODE 5&lt;/h4&gt;&lt;p&gt;问题： 给一个串S,找出其中最长的回文子串&lt;/p&gt;
&lt;p&gt;官方使用DP的方法以及EXPAND AROUNG CENTER，其中我的代码就是EXPAND AROUND CENTER。还有一个Manacher’s Algorithm,它通过在字母间加#和以$作为起始符，使得串不再分为奇偶的情况，有效地统一起来，核心思想还是基于中央字母的展开策略。&lt;br&gt;&lt;a href=&quot;https://leetcode.com/articles/longest-palindromic-substring/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方解法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我的解法：分为奇偶情况判断，遍历串，寻找以该字符为中心，两边的回文串最大长度，把最长的情况的信息保留，然后返回。TC=O(N^2)&lt;/p&gt;
&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string &lt;/span&gt;longestPalindrome(&lt;span class=&quot;keyword&quot;&gt;string &lt;/span&gt;s) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int len = s.length()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int i,j&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int &lt;span class=&quot;keyword&quot;&gt;subTempLength=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;        int &lt;span class=&quot;keyword&quot;&gt;subMax=0,subMaxIndex=0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;        for(i&lt;span class=&quot;number&quot;&gt;=0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;; i&amp;lt; len;i++)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //Odd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            for(j&lt;span class=&quot;number&quot;&gt;=0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;(i-j)&amp;gt;=0&amp;amp;&amp;amp;(i+j)&amp;lt;len;j++)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;meta&quot;&gt;if&lt;/span&gt;(s[i-j]!&lt;span class=&quot;symbol&quot;&gt;=s&lt;/span&gt;[i+j])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;                &lt;span class=&quot;keyword&quot;&gt;subTempLength &lt;/span&gt;= j*&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;meta&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;subTempLength &lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;subMax)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;subMax &lt;/span&gt;= &lt;span class=&quot;keyword&quot;&gt;subTempLength;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;                &lt;span class=&quot;keyword&quot;&gt;subMaxIndex &lt;/span&gt;= i&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //Even&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            for(j&lt;span class=&quot;number&quot;&gt;=0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;(i-j)&amp;gt;=0&amp;amp;&amp;amp;(i+j+1)&amp;lt;len;j++)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;meta&quot;&gt;if&lt;/span&gt;(s[i-j]!&lt;span class=&quot;symbol&quot;&gt;=s&lt;/span&gt;[i+j+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;                &lt;span class=&quot;keyword&quot;&gt;subTempLength &lt;/span&gt;= j*&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; +&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;meta&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;subTempLength &lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;subMax)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;subMax &lt;/span&gt;= &lt;span class=&quot;keyword&quot;&gt;subTempLength;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;                &lt;span class=&quot;keyword&quot;&gt;subMaxIndex &lt;/span&gt;= i&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int startIndex &lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;meta&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;subMax &lt;/span&gt;% &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; =&lt;span class=&quot;number&quot;&gt;=0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            startIndex= &lt;span class=&quot;keyword&quot;&gt;subMaxIndex &lt;/span&gt;- &lt;span class=&quot;keyword&quot;&gt;subMax/2 &lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;meta&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            startIndex = &lt;span class=&quot;keyword&quot;&gt;subMaxIndex &lt;/span&gt;- &lt;span class=&quot;keyword&quot;&gt;subMax/2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;        &lt;span class=&quot;keyword&quot;&gt;string &lt;/span&gt;result(s,startIndex,&lt;span class=&quot;keyword&quot;&gt;subMax);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;        return result&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;LEETCODE-6&quot;&gt;&lt;a href=&quot;#LEETCODE-6&quot; class=&quot;headerlink&quot; title=&quot;LEETCODE 6&quot;&gt;&lt;/a&gt;LEETCODE 6&lt;/h4&gt;&lt;p&gt;问题：ZigZag Conversion&lt;br&gt;一开始没看懂，将串转化成蛇形，然后输出，有点点加密的味道&lt;br&gt;思路：关键理解到蛇形转化的过渡的字母是怎么在数组表示即可&lt;br&gt;&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//My Code&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; convert(&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; s, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; nRows) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;if&lt;/span&gt;(s.length()==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;||nRows &amp;lt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;if&lt;/span&gt;(nRows ==&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//蛇形过渡的位置和行的关系&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * nRows - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//逐行输出蛇形字符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;for&lt;/span&gt;( &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;nRows;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	&lt;span class=&quot;comment&quot;&gt;//根据原长转换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j=i;j&amp;lt;s.length();j+=&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;	&lt;span class=&quot;comment&quot;&gt;//输出竖直的字符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                res+=s[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//输出斜形的字符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;if&lt;/span&gt;(i!=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;amp;&amp;amp;i!=nRows&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&amp;amp;&amp;amp; j+&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-2&lt;/span&gt;*i&amp;lt;s.length())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    res+=s[j+&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-2&lt;/span&gt;*i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;LeetCode-3&quot;&gt;&lt;a href=&quot;#LeetCode-3&quot; class=&quot;headerlink&quot; title=&quot;LeetCode 3&quot;&gt;&lt;/a&gt;LeetCode 3&lt;/h4&gt;&lt;p&gt;Ques: Find the length of longest substring without repeating characters.&lt;/p&gt;
&lt;p&gt;思路：用table记录出现char字符的次数，256个ASCII字符初始化为-1.如果遇到重复，则记录在table里面，&lt;br&gt;
    
    </summary>
    
      <category term="Tech" scheme="https://csrjtan.github.io/categories/Tech/"/>
    
    
      <category term="leetcode" scheme="https://csrjtan.github.io/tags/leetcode/"/>
    
  </entry>
  
</feed>
