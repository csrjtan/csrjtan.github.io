<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[CSRJTAN]]></title>
  <subtitle><![CDATA[Keep Moving]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="https://csrjtan.github.io/"/>
  <updated>2016-01-30T12:02:05.000Z</updated>
  <id>https://csrjtan.github.io/</id>
  
  <author>
    <name><![CDATA[CsrjTan]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[C++_Primer_Reading2]]></title>
    <link href="https://csrjtan.github.io/2016/01/30/C-Primer-Reading2/"/>
    <id>https://csrjtan.github.io/2016/01/30/C-Primer-Reading2/</id>
    <published>2016-01-30T08:05:37.000Z</published>
    <updated>2016-01-30T12:02:05.000Z</updated>
    <content type="html"><![CDATA[<h3 id="C++_u7684_u7F16_u7A0B_u6A21_u5757"><a href="#C++_u7684_u7F16_u7A0B_u6A21_u5757" class="headerlink" title="C++的编程模块"></a>C++的编程模块</h3><p>这一章讲述C++的函数，其中的乐趣在于大型库（标准ANSI库）和自己编写的函数，以及提高编程效率深入学习STL和BOOST C++提供的功能。<br><figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">functionName</span><span class="params">(parameterList)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	statement(s)</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>函数中将数组地址作为参数可以节省复制数组所需的时间和内存，地址值和数组长度随系统而异<br>尽可能使用const:1.可以避免无意间修改数据导致的编程错误 2.能够同时处理const和非const的实参<br>按引用传递结构，还有函数指针的知识，C风格字符串：字符数组，字符串常量和字符串指针，以及string类.</p>
<h3 id="u51FD_u6570_u63A2_u5E7D"><a href="#u51FD_u6570_u63A2_u5E7D" class="headerlink" title="函数探幽"></a>函数探幽</h3><p>内联函数、按引用传递、默认参数值、函数重载以及模板函数<br>C++新增加一种右值引用。返回引用时，避免返回函数终止则不再存在的内存单元引用</p>
<p>函数模板<br><figure class="highlight nimrod"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;typename <span class="type">AnyType</span>&gt;</span><br><span class="line"><span class="type">void</span> <span class="type">Swap</span>(<span class="type">AnyType</span> &amp;a,<span class="type">AnyType</span> &amp;b)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">AnyType</span> temp;</span><br><span class="line">	temp = a;</span><br><span class="line">	a = b;</span><br><span class="line">	b = temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>模板匹配的过程：1.创建候选函数列表 2.使用候选函数列表创建可行函数列表 3.确定是否有最佳可行函数<br>最佳到最差匹配顺序：1.完全匹配 2.提升转换 3.标准转换 4.用户定义转换</p>
<h3 id="u5185_u5B58_u6A21_u578B_u548C_u540D_u79F0_u7A7A_u95F4"><a href="#u5185_u5B58_u6A21_u578B_u548C_u540D_u79F0_u7A7A_u95F4" class="headerlink" title="内存模型和名称空间"></a>内存模型和名称空间</h3><p>单独编译，将头文件和结构文件以及程序文件分开，头文件使用防护(guarding)方案，避免文件定义结构两次。（不同编译器创建的二进制模块很可能无法正确地链接，可以拿到源码后重新编译连接解决问题）</p>
<h4 id="u5B58_u50A8_u6301_u7EED_u6027_uFF0C_u4F5C_u7528_u57DF_u548C_u94FE_u63A5_u6027"><a href="#u5B58_u50A8_u6301_u7EED_u6027_uFF0C_u4F5C_u7528_u57DF_u548C_u94FE_u63A5_u6027" class="headerlink" title="存储持续性，作用域和链接性"></a>存储持续性，作用域和链接性</h4><p>自动存储持续性：自动默认的变量，在块内或者函数生命周期里存在<br>静态存储持续性：static定义变量在程序运行过程中都存在<br>线程存储持续性（c++11):thread_local变量生命周期与线程一样长<br>动态存储持续性：用new分配的内存，直到delete才释放</p>
<p>静态变量的三种链接性：1.外部链接性（其他文件中访问）extern 关键字表示使用外部变量。  2.内部链接性（当前文件访问） 3.无链接性（函数或块内访问）</p>
<p>组织项目策略：头文件定义用户类型，为操纵类型的函数提供原型；源代码文件放置对应函数的定义；main和调用这些函数的函数放在第三文件上。</p>
<p>为了减少命名冲突，引入了命名空间的概念，空间还能嵌套</p>
<h3 id="u5BF9_u8C61_u548C_u7C7B"><a href="#u5BF9_u8C61_u548C_u7C7B" class="headerlink" title="对象和类"></a>对象和类</h3><p>突出显示OOP特性：抽象；封装和数据隐藏；多态；继承以及代码的可重用性。<br>接口是共享框架，供两个系统交互时使用的。<br>类的构造函数和析构函数，列表初始化参数，this指针，枚举结构体等。</p>
<h3 id="u4F7F_u7528_u7C7B"><a href="#u4F7F_u7528_u7C7B" class="headerlink" title="使用类"></a>使用类</h3><p>运算符重载，友元函数，重载&lt;&lt;，状态成员，类的自动转换和强制类型转换。<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">ClassName ClassName::<span class="keyword">operator</span>+ (<span class="keyword">const</span> ClassName &amp; c) <span class="keyword">const</span> &#123;&#125;</span><br></pre></td></tr></table></figure></p>
<p>重载限制：1.至少一个操作数是用户定义类型 2.使用运算符时不能违反运算符原来的句法规则 3.不能创建新运算符 4.不能重载sizeof . * :: ?: typeid const_cast static_cast 5.= () [] -&gt;只能通过成员函数进行重载 6.一般用友元重载&lt;&lt;<br>对于类的总结：相对于简单C-风格，使用类必须谨慎和小心，作为补偿，它为我们完成更多工作</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="C++_u7684_u7F16_u7A0B_u6A21_u5757"><a href="#C++_u7684_u7F16_u7A0B_u6A21_u5757" class="headerlink" title="C++的编程模块"></a>C++的编程模块</h3]]>
    </summary>
    
      <category term="读书笔记" scheme="https://csrjtan.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[无人机项目]]></title>
    <link href="https://csrjtan.github.io/2016/01/26/%E6%97%A0%E4%BA%BA%E6%9C%BA%E9%A1%B9%E7%9B%AE/"/>
    <id>https://csrjtan.github.io/2016/01/26/无人机项目/</id>
    <published>2016-01-26T13:29:44.000Z</published>
    <updated>2016-01-26T13:44:53.000Z</updated>
    <content type="html"><![CDATA[<p>苦苦做了几个月的项目，进展好慢，自己抗拒工程的心一直没有减退，还是自己抗拒进步，克服困难的心呢。</p>
<h3 id="u5173_u4E8E_u9879_u76EE_u7684_u73B0_u72B6"><a href="#u5173_u4E8E_u9879_u76EE_u7684_u73B0_u72B6" class="headerlink" title="关于项目的现状"></a>关于项目的现状</h3><p>不要畏惧麻烦和困难，用工程和代码以及实验来解决问题，问题是常有的。项目现在复杂度和硬件上遇到不少麻烦，应该尽力去克服。<br>遇到的问题：1.旋翼和妙算未到 2.完成一套基本的操作流程 3.如何有效利用guidance的数据 4.优化slam里面的误差 5.避障和跟踪算法 6.飞行器的有效起飞和控制<br><img src="http://7xl4js.com1.z0.glb.clouddn.com/UAV1.jpg" alt="与崇雨讨论的进展图"></p>
<h3 id="u5BF9_u4E8E_u9879_u76EE_u672A_u6765_u7684_u6784_u60F3"><a href="#u5BF9_u4E8E_u9879_u76EE_u672A_u6765_u7684_u6784_u60F3" class="headerlink" title="对于项目未来的构想"></a>对于项目未来的构想</h3><p>首先还是要热爱项目，对此充满希望，才能完善完成，首先附上现用的工具，列出接下来努力的方向和目标<br><img src="http://7xl4js.com1.z0.glb.clouddn.com/UAV2.png" alt="项目现状和使用技术"><br>可以看到，接下来可以对无人机的几个经典库进行有效的学习和利用，进行更强的关于理论性的学习。周四Dr.Li shuai的课程，《代码大全》、《C++ Primer》、《算法导论》、《LINUX私房菜》、《OPENCV Code Book》、《统计学习方法》、《PCL学习使用》、《G2O的使用》以及SLAM相关方向的论文，但是好像有点多，所以我觉得代码和工程的能力是首当其冲，理论知识和英语的恶补也应该并驾齐驱。</p>
<h3 id="u6682_u65F6_u5BF9_u4E8E_u9879_u76EE_u7684_u67B6_u6784"><a href="#u6682_u65F6_u5BF9_u4E8E_u9879_u76EE_u7684_u67B6_u6784" class="headerlink" title="暂时对于项目的架构"></a>暂时对于项目的架构</h3><p>主要是对于算法层上的组织，这几块高效的智能操作应当如何实施<br><img src="http://7xl4js.com1.z0.glb.clouddn.com/UAV3.png" alt="无人机项目的整体架构"><br>是否可以考虑率先完成一个小的demo,进而进行某个点的深入学习研发。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>苦苦做了几个月的项目，进展好慢，自己抗拒工程的心一直没有减退，还是自己抗拒进步，克服困难的心呢。</p>
<h3 id="u5173_u4E8E_u9879_u76EE_u7684_u73B0_u72B6"><a href="#u5173_u4E8E_u9879_u76EE]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[跟G++,MAKE和CMAKE奋斗的日子]]></title>
    <link href="https://csrjtan.github.io/2016/01/22/%E8%B7%9FG-MAKE%E5%92%8CCMAKE%E5%A5%8B%E6%96%97%E7%9A%84%E6%97%A5%E5%AD%90/"/>
    <id>https://csrjtan.github.io/2016/01/22/跟G-MAKE和CMAKE奋斗的日子/</id>
    <published>2016-01-22T13:32:29.000Z</published>
    <updated>2016-01-23T13:15:44.000Z</updated>
    <content type="html"><![CDATA[<p>很有必要认真地总结一下这三个小朋友的关系，但我可是被他们仨虐了好久，首先感谢<a href="http://blog.atime.me/note/cmake.html" target="_blank" rel="external">MWB</a>,jacker的《Cmake实践》</p>
<h3 id="u5982_u4F55_u5B89_u88C5"><a href="#u5982_u4F55_u5B89_u88C5" class="headerlink" title="如何安装"></a>如何安装</h3><p>现在用的是G++-4.9：</p>
<pre><code>sudo add-apt-repository ppa:ubuntu-toolchain-r/test
sudo apt-get update
sudo apt-get install g++-4.9
cd /usr/bin/
sudo ln -s g++-4.9 g++ -f
sudo ln -s gcc-4.9 gcc -f
</code></pre><p>make应该有自带的，cmake就上官网下载包</p>
<pre><code>sudo make
sudo make install
</code></pre><h3 id="GCC/G++"><a href="#GCC/G++" class="headerlink" title="GCC/G++"></a>GCC/G++</h3><p>经过4步：预处理（预处理器cpp），编译(编译器egcs)，汇编(汇编器as)和链接（连接器ld）</p>
<pre><code>//预处理
gcc -E test.c -o test.i   //i文件
//编译
gcc -S test.i -o test.s   //s文件
//汇编
gcc -c test.s -o test.o   //o文件
//链接
gcc test.o -o test        //bin文件
</code></pre><p>优化等级: -O -O2 -O3<br>包含头： -include  -I<br>链接库：  -l  -L<br>警告信息： -Wall 、 -w 和 -v<br>定义环境变量：D<br>(注意，通常手写链接参数很麻烦，很多库提供链接参数的程序，名字叫xxx-config，放在/usr/bin下<br>于是有了  gcc gtktest.c ‘pkg-confg gtk+ –libs –cflags’<br>–libs定义了链接需要的参数，–cflags是生成头文件包含的目录)</p>
<p>交叉编译：指本地编译其他平台执行的程序，需要另外用-L和-I来连接库和头文件</p>
<h3 id="MAKE"><a href="#MAKE" class="headerlink" title="MAKE"></a>MAKE</h3><p>基本语法<br>target : prerequisites<br>    command<br>自动推导以及文件依赖关系后面的命令：看到[.o]文件会自动把[.c]文件加入依赖项。</p>
<p>GNU的MAKE工作方式：<br>1.读入所有Makefile<br>2.读入被Include的其他makefile<br>3.初始化文件中变量<br>4.推导隐晦规则，分析所有规则<br>5.为所有目标文件创建依赖关系链<br>6.根据依赖，决定哪些目标的生成<br>7.执行生成命令</p>
<h3 id="CMAKE"><a href="#CMAKE" class="headerlink" title="CMAKE"></a>CMAKE</h3><p>(记下一些关键词)<br>CMAKE架构项目学习<br>基本用法<br>PROJECT<br>自动隐定义 PROJECT_BINARY_DIR和PROJECT_SOURCE_DIR<br>SET(NAME VAR)<br>MESSAGE([STATUS | DEBUG] “string” var)<br>ADD_SUBDIRECTORY(folderName)<br>ADD_EXECUTABLE(targets src_lists)</p>
<p>make install<br>CMAKE有用的变量 CMAKE_INSTALL_PREFIX<br>INSTALL(FILES file_list DESTINATION folderName)<br>INSTALL(PROGRAMS .sh DESTINATION bin)<br>INSTALL(DIRECTORY doc/ DESTINATION doc)</p>
<p>生成动态和静态库<br>ADD_LIBRARY(libName [SHARED|STATIC] src_lists)<br>注意：要动态和静态库同名，先用别名生成静态库，再改别名<br>如：ADD_LIBRARY(hello_static STATIC ${LIBHELLO_SRC})<br>SET_TARGET_PROPERTIES(hello_static PROPERTYES OUTPUT_NAME “hello”)</p>
<p>链接头文件和动态库<br>INCLUDE_DIRECTORIES(folderName)<br>LINK_DIRECTORIES(folderName)</p>
<p>ADD_EXECUTABLE(main ${SRC_LIST})<br>TARGET_LINK_LIBRARIES(main libNames)</p>
<p>使用CMAKE_INCLUDE_PATH的环境变量，用FIND_PATH可以轻松找到对应的头文件</p>
<h3 id="u5B5F_u8001_u5E08_u7684_u5DE5_u4F5C_u4ECB_u7ECD"><a href="#u5B5F_u8001_u5E08_u7684_u5DE5_u4F5C_u4ECB_u7ECD" class="headerlink" title="孟老师的工作介绍"></a>孟老师的工作介绍</h3><p>西安交通大学的<a href="http://www.cs.cmu.edu/~deyum/" target="_blank" rel="external">孟老师</a>数学优化和建模很厉害，给了一下内容的讲座</p>
<h4 id="Noise_Modeling_Principle"><a href="#Noise_Modeling_Principle" class="headerlink" title="Noise Modeling Principle"></a>Noise Modeling Principle</h4><p>一般ML问题$min_wL(x,\phi(w))+R(w)$<br>然后很多工作围绕正则项R(w)展开优化，L主要是$L_0 , L_1 ,L_P$<br>利用贝叶斯模型来解释，可以将噪声模型与损失函数对应起来，然后就是w和loss func迭代求解收敛，提到了使用混合高斯模型建模，有利于分离Low-rank structure数据的噪声</p>
<h4 id="Adaptive_Noise_Learning"><a href="#Adaptive_Noise_Learning" class="headerlink" title="Adaptive Noise Learning"></a>Adaptive Noise Learning</h4><p>假设数据都是Low-Rank Structure，然后进行噪声提取分离，目前用在的应用有 1.人脸去噪 2.背景提取 3.HSI去噪 接下来做一些雨雪分离，以及CT医学图像的去噪应用。</p>
<h4 id="Self-Pace_Learning"><a href="#Self-Pace_Learning" class="headerlink" title="Self-Pace Learning"></a>Self-Pace Learning</h4><p>提到了ML，Cognitive Science和Self-pace Learning的概念，主要原理是让模型学习从易到难，从而筛选掉一些难的数据不进行学习，其中很多的参数和变量应该用非监督的方法自动学习，主要围绕机器学习的方法展开，最后论证一下Self Pace Learning的一些有效性<a href="http://arxiv.org/pdf/1511.06049v1.pdf" target="_blank" rel="external">证明</a>。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>很有必要认真地总结一下这三个小朋友的关系，但我可是被他们仨虐了好久，首先感谢<a href="http://blog.atime.me/note/cmake.html" target="_blank" rel="external">MWB</a>,jacker的《Cmake]]>
    </summary>
    
      <category term="总结" scheme="https://csrjtan.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[C++_Primer_Reading1]]></title>
    <link href="https://csrjtan.github.io/2016/01/22/c-Primer-Reading1/"/>
    <id>https://csrjtan.github.io/2016/01/22/c-Primer-Reading1/</id>
    <published>2016-01-22T01:56:26.000Z</published>
    <updated>2016-01-22T02:39:36.000Z</updated>
    <content type="html"><![CDATA[<p>前六章的总结</p>
<h3 id="u9884_u5907_u77E5_u8BC6"><a href="#u9884_u5907_u77E5_u8BC6" class="headerlink" title="预备知识"></a>预备知识</h3><p>全书将讲述最基本的C++用法，到面向对象编程(OOP)，再介绍对泛型编程的支持。</p>
<p>1.C++的介绍：继承了C的高效简洁，由70年代贝尔实验室Dennis开发操作系统UNIX使用。<br>2.可移植性和标准：两个障碍，硬件兼容和语言兼容，制订了C++98,现在为C++11标准<br>3.程序的过程：编译、建立、生成、链接、运行和调试</p>
<h3 id="u5F00_u59CB_u5B66_u4E60C++"><a href="#u5F00_u59CB_u5B66_u4E60C++" class="headerlink" title="开始学习C++"></a>开始学习C++</h3><p>了解C++语法：声明语句、赋值语句、消息语句、函数调用、函数原型和返回语句</p>
<h3 id="u57FA_u672C_u6570_u636E"><a href="#u57FA_u672C_u6570_u636E" class="headerlink" title="基本数据"></a>基本数据</h3><p>基本类型分为：1.存储为整数的值，2.存储为浮点格式的值。<br>整形由小到大：bool,char,signed cahr,unsigned char,short,unsigned short,int,unsigned int,long,unsigned long 和long long(C++11),unsigned long long.<br>浮点类型:float(32 bits),double(64)和long double。<br>注意：类型转换和AUTO的用法，当发现使用时有一种类型是需要的，会感谢C++提供了该类型。</p>
<h3 id="u590D_u5408_u7C7B_u578B"><a href="#u590D_u5408_u7C7B_u578B" class="headerlink" title="复合类型"></a>复合类型</h3><p>数组，C-风格字符串，string类,结构structure，共同体union,枚举enum，指针Pointer,动态数组和结构，vector和array类</p>
<h3 id="u5FAA_u73AF_u548C_u5173_u7CFB_u8868_u8FBE_u5F0F"><a href="#u5FAA_u73AF_u548C_u5173_u7CFB_u8868_u8FBE_u5F0F" class="headerlink" title="循环和关系表达式"></a>循环和关系表达式</h3><p>if,swich case,for循环，while循环,typedef工具以及各项运算符。</p>
<h3 id="u5206_u652F_u548C_u903B_u8F91_u8FD0_u7B97_u7B26"><a href="#u5206_u652F_u548C_u903B_u8F91_u8FD0_u7B97_u7B26" class="headerlink" title="分支和逻辑运算符"></a>分支和逻辑运算符</h3><p>if语句，&amp;&amp; || ！以及cctype字符函数,?:,基本的文件I/O</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>前六章的总结</p>
<h3 id="u9884_u5907_u77E5_u8BC6"><a href="#u9884_u5907_u77E5_u8BC6" class="headerlink" title="预备知识"></a>预备知识</h3><p>全书将讲述最基本的C]]>
    </summary>
    
      <category term="读书笔记" scheme="https://csrjtan.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[paper-reading-20160120]]></title>
    <link href="https://csrjtan.github.io/2016/01/20/paper-reading-20160120/"/>
    <id>https://csrjtan.github.io/2016/01/20/paper-reading-20160120/</id>
    <published>2016-01-20T06:24:37.000Z</published>
    <updated>2016-01-22T13:33:08.000Z</updated>
    <content type="html"><![CDATA[<p>新年好，新年愿工程进展，论文有望。加油！</p>
<h3 id="u9A6C_u91CC_u5170_28MaryLand_29_u5927_u5B66_u7684Larry_Davis_u8BBF_u95EE"><a href="#u9A6C_u91CC_u5170_28MaryLand_29_u5927_u5B66_u7684Larry_Davis_u8BBF_u95EE" class="headerlink" title="马里兰(MaryLand)大学的Larry Davis访问"></a>马里兰(MaryLand)大学的Larry Davis访问</h3><p>受到张老师的邀请，过来进行group-talk,讲解一下最近CV的进展，他们最近的GCNN（Grid）的工作，以及基于common sense knowledge进行modeling解决一些视频识别的问题，包括one-on-one basketball game和survillence of car parking.</p>
<p>首先，GCNN是使用multi grid windows的思想，通过RCNN进行迭代的逼近学习，也是用于物体的识别。然后基于一些基本common sense建模，对于传统的activity recognition有一定的解释。讲述最近deep learning, cloud computing, GPU acceleration, Machine Learning等一些方法的推进都在有利于CV的进步，然CV离肉眼视觉识别依然有很大的距离。 最近的科研方向可以有Arichitecture Optimization，Mathematical Optimization and so on。明天将会继续介绍一下以往以及未来cv的相关工作。</p>
<h3 id="u6797_u8001_u5E08_u7684IJCV2015_u8BBA_u6587_u300AA_Deep_Structured_Model_with_Radius-Margin_Bound_for_3D_Human_Activity_Recognition_u300B"><a href="#u6797_u8001_u5E08_u7684IJCV2015_u8BBA_u6587_u300AA_Deep_Structured_Model_with_Radius-Margin_Bound_for_3D_Human_Activity_Recognition_u300B" class="headerlink" title="林老师的IJCV2015论文《A Deep Structured Model with Radius-Margin Bound for 3D Human Activity Recognition》"></a>林老师的IJCV2015论文《A Deep Structured Model with Radius-Margin Bound for 3D Human Activity Recognition》</h3><p>摘要：用CNN来做活动识别，1.加入隐临时变量来分解activity成sub activity，自动学习子活动 2.结合radius-margin bound的方法作为约束项。<br>训练模型的过程不断迭代三部曲：</p>
<pre><code>- 发现优化的隐变量
- 通过生成的特征，更新分类器
- 更新网络的参数
</code></pre><h4 id="Introduction_of_human_activity_classification"><a href="#Introduction_of_human_activity_classification" class="headerlink" title="Introduction of human activity classification"></a>Introduction of human activity classification</h4><p>  主要两个问题：a.the complexity of representing high-level activities<br>                b.the ambiguity in temporal segmentation of sub-activities which constitute an activity</p>
<h4 id="Related_Work"><a href="#Related_Work" class="headerlink" title="Related Work"></a>Related Work</h4><p>  起初关注于设计健壮和可描述性的features<br>  然后关注表达活动间的变化部分以及上下文的关系<br>  最近And-Or图关系表达可借助大数据变量进一步表达<br>  这里的方法是用deep neutral network to learning human action recognition from 3D videos.</p>
<h4 id="Our_work"><a href="#Our_work" class="headerlink" title="Our work"></a>Our work</h4><p>Spatio-temporal CNNs<br>Latent Temporal Structure:<br><img src="http://7xl4js.com1.z0.glb.clouddn.com/KeZe_ICCV2015_1.png" alt=""><br>Deep Model with Relaxed Radius-Margin Bound:<br><img src="http://7xl4js.com1.z0.glb.clouddn.com/KeZe_ICCV2015_2.png" alt=""><br>The Radius-Margin Bound是受到radius-margin SVM的启发，用于增强模型的泛化能力，变成每次迭代的loss function加入了Radius-Margin Ratio $ \frac{1}{2}||w||^2R_\phi^2$,进行non-convex optimization.可以利用网络的softmax层进行部分参数的调解学习。</p>
<h4 id="Implementation"><a href="#Implementation" class="headerlink" title="Implementation"></a>Implementation</h4><p>详细工作的实现：<br>Architecture of Deep Neural Networks<br>Dropout trick<br>Learning Algorithm<br>Datasets and Empirical Analysis, Experimental Results</p>
<h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h4><p><strong>贡献点</strong>：<br>1.A deep and latent-structured model<br>         2.引入了raius-margin的正则项<br>         3.有效迭代的优化子活动分解以及基于边缘学习的分类器<br><strong>缺点</strong>：<br> 1.scalability of model inference<br>      2.引入更多的计算量，当活动的类别多了会变慢<br><strong>未来的工作</strong>：<br> 1.将模型泛化成compositinal grammar rules: e.g. And-Or grammars<br>            2.修改模型以适应2D的视频</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>新年好，新年愿工程进展，论文有望。加油！</p>
<h3 id="u9A6C_u91CC_u5170_28MaryLand_29_u5927_u5B66_u7684Larry_Davis_u8BBF_u95EE"><a href="#u9A6C_u91CC_u5170_28]]>
    </summary>
    
      <category term="paper" scheme="https://csrjtan.github.io/tags/paper/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[《爱的五种语言》]]></title>
    <link href="https://csrjtan.github.io/2015/12/23/%E3%80%8A%E7%88%B1%E7%9A%84%E4%BA%94%E7%A7%8D%E8%AF%AD%E8%A8%80%E3%80%8B/"/>
    <id>https://csrjtan.github.io/2015/12/23/《爱的五种语言》/</id>
    <published>2015-12-23T06:51:03.000Z</published>
    <updated>2015-12-23T07:07:37.000Z</updated>
    <content type="html"><![CDATA[<p>有一段时间没有更新博客了，觉得不写还是会颓，应该积极向上的去写更多东西，关于自己，关于读书，关于学习，每天应该在不断的总结和反省中前进。</p>
<h3 id="u300A_u7231_u7684_u4E94_u79CD_u8BED_u8A00_u300B"><a href="#u300A_u7231_u7684_u4E94_u79CD_u8BED_u8A00_u300B" class="headerlink" title="《爱的五种语言》"></a>《爱的五种语言》</h3><p>这里提出使用五种爱语，我们应该抓住伴侣的主要爱语，这样可以有效地提高爱箱，对于人与人之间的相处事半功半，实际可以以此延伸到亲人和友情，这是一种让人感受爱意最直接高效的方法。<br><img src="http://7xl4js.com1.z0.glb.clouddn.com/爱的五种语言.png" alt=""></p>
<h3 id="u5173_u4E8E_u4E2A_u4EBA_u7BA1_u7406"><a href="#u5173_u4E8E_u4E2A_u4EBA_u7BA1_u7406" class="headerlink" title="关于个人管理"></a>关于个人管理</h3><p>坚持每晚11点休息，早上6点半起床吧，早起的一天才能正能量满满，积极向上呢，项目最近整体复杂度已经有点高，希望自己尽快使它们有效完成吧，腾出手来关注一些真正有用的事情。<br>接下来是个人管理的小图<br><img src="http://7xl4js.com1.z0.glb.clouddn.com/每日个人管理.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>有一段时间没有更新博客了，觉得不写还是会颓，应该积极向上的去写更多东西，关于自己，关于读书，关于学习，每天应该在不断的总结和反省中前进。</p>
<h3 id="u300A_u7231_u7684_u4E94_u79CD_u8BED_u8A00_u300B"><a href]]>
    </summary>
    
      <category term="读书笔记" scheme="https://csrjtan.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[paper-reading-20151125]]></title>
    <link href="https://csrjtan.github.io/2015/11/25/paper-reading-20151125/"/>
    <id>https://csrjtan.github.io/2015/11/25/paper-reading-20151125/</id>
    <published>2015-11-25T06:13:16.000Z</published>
    <updated>2016-01-21T07:20:22.000Z</updated>
    <content type="html"><![CDATA[<p>这周回来帮崇雨审一个文章，燕大的关于动态物体避障的方案，总体来说写得比较自我，而且没有系统和实用的示例，只是从理论上写的一个方案，自己提出了很多新的东西，然而没办法去很好验证。整个流程是提取曲面特征，通过下一帧的Depth变化为依据，最大化The best Next View来求出摄像机的移动策略，这里将运动评估作为一个term加入到the best next view model里面，通过迭代优化的过程来求出摄像机的位置和方向(x,v).用观测到障碍物体的最大面积来作为调整相机的依据，从一定假设上可以实现避障。</p>
<h3 id="Dynamic_occlusion_avoidance_approach_based_on_the_depth_image_of_moving_visual_object"><a href="#Dynamic_occlusion_avoidance_approach_based_on_the_depth_image_of_moving_visual_object" class="headerlink" title="Dynamic occlusion avoidance approach based on the depth image of moving visual object"></a>Dynamic occlusion avoidance approach based on the depth image of moving visual object</h3><p>KeyWords:Moving Object,Depth Image,Dynamic Occlusion Avoidance,Best View Model</p>
<h4 id="Abstract_3ADynamic_Occlusion_avoidance_based_on_the_depth_image"><a href="#Abstract_3ADynamic_Occlusion_avoidance_based_on_the_depth_image" class="headerlink" title="Abstract:Dynamic Occlusion avoidance based on the depth image."></a>Abstract:Dynamic Occlusion avoidance based on the depth image.</h4><p>首先，用Anti-projection Transformation来获得移动物体的每个像素的三维坐标<br>然后，用第二张深度图来构建The Best View Model<br>第三，高斯曲率的特征是平面变换的本质计量，所以运动评估比较两个高斯曲率特征矩阵来实现<br>(Gaussian Curvature:The product of the maximum and minimum curvatures of the sectionsIt is the intrinsic measure of curvature.)<br>最后，结合Best View Model和运动检测结果，最优化目的是使摄像机行为满足移动物体的避障过程。</p>
<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>主要问题：通过物体的障碍提示来寻找最优观测方向和位置<br>Next Best View:</p>
<ul>
<li>用Octree模型来描述可视物体，然后对于不同观察情况的节点，给定不同的分数。</li>
<li>用大量周全的Candidate View</li>
<li>建立一个相似的参数模型，通过depth data和current fitted model来拟合</li>
<li>用B-spline计算信息增益来构建最佳NEXT VIEW</li>
<li>结合on-line theory来优化物体的3D重构<br>缺点：没有考虑遮蔽</li>
</ul>
<p>引入occlusion方法<br>缺点：受限于摄像机位置、特定的设备和先验信息，以上均不适用于移动的物体</p>
<h3 id="u4E09_u4E2A_u95EE_u9898_uFF1A"><a href="#u4E09_u4E2A_u95EE_u9898_uFF1A" class="headerlink" title="三个问题："></a>三个问题：</h3><p>1.如何解决动态遮蔽的避障问题? -&gt; 用一个优化模型，结合运动预测在Best view Model里<br>2.如何通过深度图来预测可视物体的运动? -&gt; 用两个高斯曲率特征矩阵的匹配来求R T,用到SIFT和SVD<br>3.如何有效评估动态遮蔽的影响? -&gt; 用“effective avoidance rate”来评估算法的性能</p>
<h3 id="Method_Overview"><a href="#Method_Overview" class="headerlink" title="Method Overview"></a>Method Overview</h3><p>1.The analysis of dynamic occlusion avoidance<br>获得遮蔽的最大区域</p>
<p>2.The overall idea of dynamic occlusion avoidance<br>首先，移动物体相近深度图的像素进行三维坐标恢复（用Anti-projection），则遮蔽暗示可以从第二幅图得到<br>基于上述，用第二张深度图的遮蔽信息来构建Best View Model<br>接着，用三维坐标点的形式，做高斯曲率特征矩阵来匹配两个相近的深度图<br>最后，将运动预测结合到最佳视角模型里。</p>
<h3 id="The_Approach_to_dynamic_occlusion_avoidance_based_on_depth_image"><a href="#The_Approach_to_dynamic_occlusion_avoidance_based_on_depth_image" class="headerlink" title="The Approach to dynamic occlusion avoidance based on depth image"></a>The Approach to dynamic occlusion avoidance based on depth image</h3><p>1.Constructing the occlusion region to be avoided<br>构建出patch</p>
<p>2.Constructing the best view model<br>通过构建最大化Occlusion面积</p>
<h3 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h3><p>step1:Calc the 3D pixels and the Gaussian Curvature Feature matrices<br>step2:Detect the Occlusion Boundary and establish the occlusion region in second depth<br>step3:Contruct the best view model<br>step4:Match the key points<br>step5:Solve the Objective formula<br>step6:Plan the next view of camera<br>step7:Acquire a depth image and calc the f(x)<br>step8:If the difference between two adjacent f(x) is less than a given threshold,then terminated,or jump to Step 4.</p>
<h3 id="Conclusions"><a href="#Conclusions" class="headerlink" title="Conclusions"></a>Conclusions</h3><p>1.Add emotion estimate in Best Next View to dynamic occlusion avoidance<br>2.Based the depth image to solve the R and T transformation<br>3.Propose the “Effective avoidance rate” to measure the performance of the algorithm.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这周回来帮崇雨审一个文章，燕大的关于动态物体避障的方案，总体来说写得比较自我，而且没有系统和实用的示例，只是从理论上写的一个方案，自己提出了很多新的东西，然而没办法去很好验证。整个流程是提取曲面特征，通过下一帧的Depth变化为依据，最大化The best Next Vie]]>
    </summary>
    
      <category term="paper" scheme="https://csrjtan.github.io/tags/paper/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[第一学期总结]]></title>
    <link href="https://csrjtan.github.io/2015/11/25/%E7%AC%AC%E4%B8%80%E5%AD%A6%E6%9C%9F%E6%80%BB%E7%BB%93/"/>
    <id>https://csrjtan.github.io/2015/11/25/第一学期总结/</id>
    <published>2015-11-25T00:52:01.000Z</published>
    <updated>2015-11-25T01:17:26.000Z</updated>
    <content type="html"><![CDATA[<h3 id="DJI_u65E0_u4EBA_u673A_u907F_u969C_u98DE_u884C_u9879_u76EE"><a href="#DJI_u65E0_u4EBA_u673A_u907F_u969C_u98DE_u884C_u9879_u76EE" class="headerlink" title="DJI无人机避障飞行项目"></a>DJI无人机避障飞行项目</h3><h4 id="u7814_u8BFB_u4E86CAMERA_CALIBRATION_2CSTEREO_VISION_2CSLAM"><a href="#u7814_u8BFB_u4E86CAMERA_CALIBRATION_2CSTEREO_VISION_2CSLAM" class="headerlink" title="研读了CAMERA CALIBRATION,STEREO VISION,SLAM"></a>研读了CAMERA CALIBRATION,STEREO VISION,SLAM</h4><p>其中做SLAM的时候基于opencv、pcl、g2o为依赖库的开发</p>
<h3 id="DJI_u90E8_u4EF6_u7684_u5B66_u4E60_u4F7F_u7528"><a href="#DJI_u90E8_u4EF6_u7684_u5B66_u4E60_u4F7F_u7528" class="headerlink" title="DJI部件的学习使用"></a>DJI部件的学习使用</h3><p>Guidance的数据订阅和传输接口，M100的GPS线损坏，而且室内校准较难，使用例程进行姿态控制</p>
<h3 id="u8BFE_u7A0BAdvanced_Algorithm"><a href="#u8BFE_u7A0BAdvanced_Algorithm" class="headerlink" title="课程Advanced Algorithm"></a>课程Advanced Algorithm</h3><p>学习了多种优化算法以及分析复杂度，课程report使用random algorithm来优化stereo matching的过程</p>
<h3 id="u4E00_u4E2A_u5B66_u671F_u8FC7_u53BB_u4E86_uFF0C_u5B66_u5230_u548C_u505A_u51FA_u6765_u7684_u6210_u679C_u4E0D_u591A_uFF0C_u53CD_u601D_u81EA_u5DF1_u7684_u6548_u7387_u4EE5_u53CA_u8FF7_u832B_uFF0C_u5BFC_u81F4_u9006_u98CE_u800C_u884C_uFF0C_u52A0_u6CB9_u5427_uFF0C_u4E0D_u7136_u8FDE_u6BD5_u4E1A_u90FD_u4E0D_u597D_u8BF4_u3002_u4E0D_u80FD_u518D_u4F9D_u8D56_u522B_u4EBA_u4E00_u8D77_u505A_u4E4B_u7C7B_u7684_uFF0C_u81EA_u5DF1_u72EC_u884C_u524D_u5F80_u5427_uFF0C_u95EE_u9898_u603B_u662F_u5B58_u5728_uFF0C_u95EE_u9898_u603B_u662F_u53EF_u4EE5_u89E3_u51B3_u7684_uFF0C_u4E0D_u8981_u9003_u907F_u62D6_u5EF6_u3002"><a href="#u4E00_u4E2A_u5B66_u671F_u8FC7_u53BB_u4E86_uFF0C_u5B66_u5230_u548C_u505A_u51FA_u6765_u7684_u6210_u679C_u4E0D_u591A_uFF0C_u53CD_u601D_u81EA_u5DF1_u7684_u6548_u7387_u4EE5_u53CA_u8FF7_u832B_uFF0C_u5BFC_u81F4_u9006_u98CE_u800C_u884C_uFF0C_u52A0_u6CB9_u5427_uFF0C_u4E0D_u7136_u8FDE_u6BD5_u4E1A_u90FD_u4E0D_u597D_u8BF4_u3002_u4E0D_u80FD_u518D_u4F9D_u8D56_u522B_u4EBA_u4E00_u8D77_u505A_u4E4B_u7C7B_u7684_uFF0C_u81EA_u5DF1_u72EC_u884C_u524D_u5F80_u5427_uFF0C_u95EE_u9898_u603B_u662F_u5B58_u5728_uFF0C_u95EE_u9898_u603B_u662F_u53EF_u4EE5_u89E3_u51B3_u7684_uFF0C_u4E0D_u8981_u9003_u907F_u62D6_u5EF6_u3002" class="headerlink" title="一个学期过去了，学到和做出来的成果不多，反思自己的效率以及迷茫，导致逆风而行，加油吧，不然连毕业都不好说。不能再依赖别人一起做之类的，自己独行前往吧，问题总是存在，问题总是可以解决的，不要逃避拖延。"></a>一个学期过去了，学到和做出来的成果不多，反思自己的效率以及迷茫，导致逆风而行，加油吧，不然连毕业都不好说。不能再依赖别人一起做之类的，自己独行前往吧，问题总是存在，问题总是可以解决的，不要逃避拖延。</h3>]]></content>
    <summary type="html">
    <![CDATA[<h3 id="DJI_u65E0_u4EBA_u673A_u907F_u969C_u98DE_u884C_u9879_u76EE"><a href="#DJI_u65E0_u4EBA_u673A_u907F_u969C_u98DE_u884C_u9879_u76EE" clas]]>
    </summary>
    
      <category term="总结" scheme="https://csrjtan.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[斯坦福公开课机器人学]]></title>
    <link href="https://csrjtan.github.io/2015/11/14/OpenClassRobotic1/"/>
    <id>https://csrjtan.github.io/2015/11/14/OpenClassRobotic1/</id>
    <published>2015-11-13T16:04:37.000Z</published>
    <updated>2015-11-14T02:56:19.000Z</updated>
    <content type="html"><![CDATA[<h3 id="1-_u6982_u8FF0"><a href="#1-_u6982_u8FF0" class="headerlink" title="1.概述"></a>1.概述</h3><p>这门课程主要讲述机器人的一些基本知识，包括运动学，动力学，机臂控制，一些前沿研究。<br>由于最近做定位地图，涉及较多robotic的知识，在这里直接看一下入门，之后希望可以对ROS、PCL、G2O等重要工具展开学习。</p>
<h4 id="2-_u7A7A_u95F4_u63CF_u8FF0_uFF0C_u5E7F_u4E49_u7684_u5750_u6807"><a href="#2-_u7A7A_u95F4_u63CF_u8FF0_uFF0C_u5E7F_u4E49_u7684_u5750_u6807" class="headerlink" title="2.空间描述，广义的坐标"></a>2.空间描述，广义的坐标</h4><p>在二维空间，一个刚性物体的姿态只有3个自由度，$x,y,\theta$<br>在三维空间，一个刚性物体的姿态会有6个自由度，$x,y,z,\theta,\gamma,\phi$</p>
<p>这里描述坐标系的转换可以用一个矩阵，其中旋转矩阵$ R_{AB}=R_{BA}^T $,具有<strong>正交性</strong>，<br>$ R_{AB}^{-1} = R_{BA} = R_{BA}^T $，并且满足:<br>$$ r_X^2 = r_Y^2 = r_Z^2 = 1 $$<br>$$ r_X * r_Y = r_X * r_Z = r_Y * r_Z = 0 $$<br>其中正交矩阵相关的一些矩阵分解有：QR、SVD、谱分解和极分解。</p>
<p>相对而言，T不会满足旋转矩阵R的这些特性，这里也是基于右手系的约束。<br>为了方便矩阵的运算，我们将R和T矩阵组合并添加一维[0 0 0 1]变成4 * 4的矩阵，形成<strong>齐次</strong>.</p>
<h4 id="3-_u8BA8_u8BBA_u6B27_u62C9_u89D2_u548C_u65CB_u8F6C"><a href="#3-_u8BA8_u8BBA_u6B27_u62C9_u89D2_u548C_u65CB_u8F6C" class="headerlink" title="3.讨论欧拉角和旋转"></a>3.讨论欧拉角和旋转</h4><p>介绍了柔性制动器，气压驱动，上节课讲的内容的转换，可以描述坐标系转换，或者点的映射。由于扩展了齐次坐标系，所以末端的坐标系可以直接从基座变换矩阵T相乘解得，但在描述旋转的时候，用3*3的矩阵有9个参数，过于<strong>冗余</strong>，我们考虑更为精炼的表达方式，更高效地表示旋转。</p>
<p>引入一个，对于刚性物体的坐标表示方式根据坐标系的表达而变化，分为</p>
<ul>
<li>Cartesion : $(x,y,z)$</li>
<li>Cylindrical: $(\rho,\theta,\tau)$</li>
<li>Spherical: $(r,\theta,\phi)$<br>这是针对应用的场景而变化的，对于某些运动变化，采用适用的坐标系能大大简化问题，适应与问题。</li>
</ul>
<p>首先来讨论用<strong>三个角</strong>来表示旋转，分别是yaw,roll,hawl.$$R_{AB} = R_Z(\alpha).R_Y(\beta).r_X(\gamma)$$<br>求解一系列矩阵运算之后，出现cp = 0 的时候，会出现<strong>奇异性</strong>(回头查google)的点，此时无法进一步计算（因为除0出错）,无法进行继续跟踪，而其他以三个参数为旋转的也无法解决这个奇异点的问题。于是尝试进行四个参数的旋转表达，便有了经典的<strong>欧拉角</strong>，Euler Prameters。</p>
<p>欧拉角指根据x,y,z轴旋转，一共有24种顺规，使用前先确定规则，</p>
<h4 id="4-DH_u53C2_u6570"><a href="#4-DH_u53C2_u6570" class="headerlink" title="4.DH参数"></a>4.DH参数</h4><p>引入了“蜂鸟”机器人，如何通过连杆和终端执行器控制机械手，建立正运动学。用DH参数描述来表达对连杆的控制，，从而精确定义坐标系，设置不同参数进行变换得到总的变换，从而建立正运动学</p>
<h4 id="5-_u4EFF_u7075_u957F_u7C7B_u673A_u68B0_u81C2"><a href="#5-_u4EFF_u7075_u957F_u7C7B_u673A_u68B0_u81C2" class="headerlink" title="5.仿灵长类机械臂"></a>5.仿灵长类机械臂</h4><p>介绍了如何用欧拉角进行坐标转换，对ROBOT建立数学模型。<br>首先选定较优的坐标原点，尽量方便表达和减少参数，进而根据连杆的变换推导出新的节点的坐标表达，建立坐标表达矩阵，这样的坐标表达就包括（yaw,hawl,roll,Distance)</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1-_u6982_u8FF0"><a href="#1-_u6982_u8FF0" class="headerlink" title="1.概述"></a>1.概述</h3><p>这门课程主要讲述机器人的一些基本知识，包括运动学，动力学，机臂控制，一些前沿研究。<]]>
    </summary>
    
      <category term="读书笔记" scheme="https://csrjtan.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[SLAM的学习总结]]></title>
    <link href="https://csrjtan.github.io/2015/11/08/SLAM%E7%9A%84%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    <id>https://csrjtan.github.io/2015/11/08/SLAM的学习总结/</id>
    <published>2015-11-08T09:31:46.000Z</published>
    <updated>2015-11-09T13:54:49.000Z</updated>
    <content type="html"><![CDATA[<h4 id="u597D_u4E45_u6CA1_u66F4_u65B0_u4E86_uFF0C_u6700_u8FD1_u786E_u5B9E_u4E1C_u897F_u6709_u70B9_u591A_u6709_u70B9_u4E71_uFF0C_u5FC5_u8981_u7684_u8D76_u7D27_u6765_u603B_u7ED3_u4E00_u4E0B_u4E86"><a href="#u597D_u4E45_u6CA1_u66F4_u65B0_u4E86_uFF0C_u6700_u8FD1_u786E_u5B9E_u4E1C_u897F_u6709_u70B9_u591A_u6709_u70B9_u4E71_uFF0C_u5FC5_u8981_u7684_u8D76_u7D27_u6765_u603B_u7ED3_u4E00_u4E0B_u4E86" class="headerlink" title="好久没更新了，最近确实东西有点多有点乱，必要的赶紧来总结一下了"></a>好久没更新了，最近确实东西有点多有点乱，必要的赶紧来总结一下了</h4><h3 id="u5173_u4E8ESLAM_u7684_u5B66_u4E60"><a href="#u5173_u4E8ESLAM_u7684_u5B66_u4E60" class="headerlink" title="关于SLAM的学习"></a>关于SLAM的学习</h3><p>首先，参考学习了很多关于SLAM的内容，从理论、研究到开源软件甚至于开源的调用库都知道不少，奈何自己在这方面确实尚浅，走了不少弯路。</p>
<h4 id="SLAM_u662F_u5373_u65F6_u5B9A_u4F4D_u548C_u5730_u56FE_u6784_u5EFA"><a href="#SLAM_u662F_u5373_u65F6_u5B9A_u4F4D_u548C_u5730_u56FE_u6784_u5EFA" class="headerlink" title="SLAM是即时定位和地图构建"></a>SLAM是即时定位和地图构建</h4><p>分为前后端，前端为点云的叠加构建地图，后端为根据位置和移动建图，并用非线性全局优化来修正叠加误差以及进行回环检测。（旧的方法还有涉及EKF的KALMAN滤波，但随着图增大算法会吃不消）</p>
<h4 id="u4E3B_u8981_u7684FrameWork_3A"><a href="#u4E3B_u8981_u7684FrameWork_3A" class="headerlink" title="主要的FrameWork:"></a>主要的FrameWork:</h4><p>1.通过RGB+D，反算三角原理计算得到空间坐标系上的点云<br>2.通过提取特征点和特征点匹配求出转换矩阵，从而将点云合并<br>3.将摄像机位置作为位姿顶点，转换矩阵作为转换边，得到图G(V,E)<br>4.利用位置叠加全局优化图G，这是非线性优化的过程</p>
<h4 id="u4F18_u5316_u6570_u5B66_u6A21_u578B_uFF1A"><a href="#u4F18_u5316_u6570_u5B66_u6A21_u578B_uFF1A" class="headerlink" title="优化数学模型："></a>优化数学模型：</h4><p>模型定义：<br><img src="http://7xl4js.com1.z0.glb.clouddn.com/slam_1.png" alt=""><br><img src="http://7xl4js.com1.z0.glb.clouddn.com/slam_2.png" alt=""><br>其中 $$Mothion: x_p^{x+1} = f(x_p^i,u_i)+w_i$$<br>$$Observations: z_{i,j} = h(x_p^i,x_L^j)+v_{i,j}$$<br>求解SLAM前，我们有$u_i,z_{i,j}$分别代表传感器量度以及传感器误差，我们要求$x_p，x_L$<br>继而误差就是等式左右相减，我们目的用最小二乘全局最优化以下式子：<br>$$min \phi=\sum_i(e_p^i)^2+\sum_{i,j}(e_L^{i,j})^2$$<br>所以这是一个<strong>非线性和非凸</strong>问题,可以通过估计一个起始猜测，然后寻找各个方向上的雅克比和Hessian矩阵进行牛顿迭代等非线性优化方法。由于G的结构是稀疏的，所以可以对SLAM的全局非线性优化进行稀疏求解。（如Sparse Cholesky Decomposition）</p>
<p>这里可以利用到的一些工具包括：ROS、OctoMap、SiftGPU、OpenGL,opencv、eigen、<strong>pcl、g2o</strong>等等</p>
<p>可以看的书《Multiple View Geometry in CV》和《线性代数该这样读》，还有很多资源，参考下面的LINK，三个阶段：1.基础理论工具学习 2.执行别人的代码和阅读论文 3.阅读并改写改进，突破发论文</p>
<p>这里放一些有用的网站：<br><a href="http://blog.csdn.net/heyijia0327/article/details/47813405" target="_blank" rel="external">Graph Slam Tutorial:g2o</a></p>
<p><a href="http://vision.in.tum.de/data/datasets/rgbd-dataset" target="_blank" rel="external">Computer Vision Group RGB-D SLAM</a></p>
<p><a href="http://www.cnblogs.com/gaoxiang12/p/4633316.html" target="_blank" rel="external">一起做RGB-D SLAM系列</a></p>
<p><a href="http://www.zhihu.com/question/35186064" target="_blank" rel="external">知乎</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="u597D_u4E45_u6CA1_u66F4_u65B0_u4E86_uFF0C_u6700_u8FD1_u786E_u5B9E_u4E1C_u897F_u6709_u70B9_u591A_u6709_u70B9_u4E71_uFF0C_u5FC5_u8981_]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[数据挖掘导论（3）]]></title>
    <link href="https://csrjtan.github.io/2015/11/02/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E5%AF%BC%E8%AE%BA%EF%BC%883%EF%BC%89/"/>
    <id>https://csrjtan.github.io/2015/11/02/数据挖掘导论（3）/</id>
    <published>2015-11-02T11:26:19.000Z</published>
    <updated>2015-11-03T06:46:26.000Z</updated>
    <content type="html"><![CDATA[<p>何女神，准备就期中考了，考到第7章，我有空继续看，顺便完善一下读书笔记，做人要有始有终。</p>
<h4 id="u56DE_u987E_u4E0A_u8282"><a href="#u56DE_u987E_u4E0A_u8282" class="headerlink" title="回顾上节"></a>回顾上节</h4><p>提到了决策树的生成，主要是选择合理的分裂属性，并且修正合理的生成树，以获得较少的训练误差和不会过于臃肿的树结构，基于Occam’s Razor Rules，这有利于更强的泛化和预测能力。</p>
<h3 id="u7B2C_u4E94_u7AE0"><a href="#u7B2C_u4E94_u7AE0" class="headerlink" title="第五章"></a>第五章</h3><p>这一章包含的内容多且重要，然而书本没有详细展开，这里我还是得仔细记录每一小节的内容。</p>
<h4 id="5-1_u57FA_u4E8E_u89C4_u5219_u7684_u5206_u7C7B_u5668"><a href="#5-1_u57FA_u4E8E_u89C4_u5219_u7684_u5206_u7C7B_u5668" class="headerlink" title="5.1基于规则的分类器"></a>5.1基于规则的分类器</h4><p>分类模型用析取范式 $R=(r_1 \bigvee r_2 \bigvee … \bigvee r_k)$<br>这里R成为<strong>规则集</strong><br>这里表示形式：$r_i:(条件_i)-&gt;y_i$<br>这里左边称为规则前提，右边为规则后件，包含预测结果。<br>分类规则的质量用覆盖率和准确率定义,D为数据集，A为规则前件，y为规则后件。<br>$$Converage（r) = \frac{|A|}{|D|}$$<br>$$Accuray(r)=\frac{|A\bigcap y|}{|A|}$$<br>基于定义，我们有<strong>互斥规则、穷举规则、有无序规则</strong></p>
<p>由于规则集中的规则不一定是互斥的，所有有可能分类的时候某条记录会属于多个类（也就是说某条记录会同时触发规则集中的超过1条的过则，而被触发的规则的类标号也不一样），这种情况有两种办法解决。<br>(1）有序规则。将规则集中的规则按照优先级降序排列，当一个测试记录出现时，由覆盖记录的最高秩的规则对其进行分类，这就避免由多条分类规则来预测而产生的类冲突问题<br>(2）无序规则。允许一条测试记录触发多条分类规则，把每条被触发规则的后件看作是对相应类的一次投票，然后计票确定测试记录的类标号。通常把记录指派到得票最多的类。</p>
<p>假设现在有一个记录它不能触发规则集合中的任何一个规则，那么它该如何就行分类呢？解决办法也有两个：<br>（1）穷举规则。如果对属性值的任一组合，R中都存在一条规则加以覆盖，则称规则集R具有穷举覆盖。这个性质确保每一条记录都至少被R中的一条规则覆盖。<br>(2）如果规则不是穷举的，那么必须添加一个默认规则rd：（）-&gt;yd来覆盖那些未被覆盖的记录。默认规则的前件为空，当所有其他规则失效时被触发。yd是默认类，通常被指定为没有被现存规则覆盖的训练记录的多数类.</p>
<p><strong>顺序覆盖算法</strong></p>
<pre><code>令E是训练记录，A是属性-值对的集合{（Aj,Vj）}
令Y0是类的有序集{y1,y2,...,yk}
令R={}是初始规则列表
for 每个类y in Y0-{yk} do
    while 终止条件不满足 do
        r = Learn-One-Rule(E,A,y)
        从E重删除被r覆盖的训练记录
        追加r到规则列表尾部:R=R V r
    end while
end for
把默认规则{}-&gt;yk插入到规则列表R尾部
</code></pre><p>这里是直接方法里的Learn-One-Rule函数，采用贪心原则。因为要找最佳规则是个NP-HARD问题，通过贪心方式近似，先产生一个初始规则r,不断求精，然后满足某种终止条件，修剪规则以改进泛化误差。书中介绍了规则增长的策略，这里不详述。</p>
<p>对于候选规则的选择，这里使用<strong>似然比</strong>作为统计量：<br>$$R=2\sum_{i=1}^kf_ilog(\frac{f_i}{e_i})$$<br>或者规则覆盖率的度量Laplace以及<strong>FOIL信息增益</strong><br>(在顺序覆盖算法中，需要删除覆盖到的训练记录，不然会重叠而误选。)可以使用<strong>RIPPER算法</strong>来建立规则集，而选取一个泛化能力较佳的模型。</p>
<h4 id="u8DDF_u51B3_u7B56_u6811_u6BD4_u8F83"><a href="#u8DDF_u51B3_u7B56_u6811_u6BD4_u8F83" class="headerlink" title="跟决策树比较"></a>跟决策树比较</h4><p>可以看到与决策树的相似性，这里我们可以用决策树作为参考，间接产生规则。<br>它们间的比较：</p>
<ul>
<li>规则集表达能力与之等价</li>
<li>基于规则分类器更易于解释，并性能相媲美</li>
<li>基于类的规则定序非常适应处理类分布不平衡的数据集</li>
</ul>
<h4 id="u603B_u7ED3"><a href="#u603B_u7ED3" class="headerlink" title="总结"></a>总结</h4><p>算法思想：先从训练集生成规则集合，用合取条件表示。对每个待分类的记录和规则集合中的规则进行比较，如果某条规则被触发，则记录被分类。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>何女神，准备就期中考了，考到第7章，我有空继续看，顺便完善一下读书笔记，做人要有始有终。</p>
<h4 id="u56DE_u987E_u4E0A_u8282"><a href="#u56DE_u987E_u4E0A_u8282" class="headerlink" t]]>
    </summary>
    
      <category term="读书笔记" scheme="https://csrjtan.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[数据挖掘导论（2）]]></title>
    <link href="https://csrjtan.github.io/2015/10/31/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E5%AF%BC%E8%AE%BA%EF%BC%882%EF%BC%89/"/>
    <id>https://csrjtan.github.io/2015/10/31/数据挖掘导论（2）/</id>
    <published>2015-10-31T08:41:57.000Z</published>
    <updated>2015-11-02T12:15:29.000Z</updated>
    <content type="html"><![CDATA[<h3 id="u8FD9_u5199_u4E00_u4E0B_u7B2C_u4E09_u7B2C_u56DB_u7AE0_u7684_u4E3B_u8981_u5185_u5BB9"><a href="#u8FD9_u5199_u4E00_u4E0B_u7B2C_u4E09_u7B2C_u56DB_u7AE0_u7684_u4E3B_u8981_u5185_u5BB9" class="headerlink" title="这写一下第三第四章的主要内容"></a>这写一下第三第四章的主要内容</h3><h4 id="1-_u7B2C_u4E09_u7AE0_u5305_u62EC_u6C47_u603B_u7EDF_u8BA1_u3001_u53EF_u89C6_u5316_u548COLAP"><a href="#1-_u7B2C_u4E09_u7AE0_u5305_u62EC_u6C47_u603B_u7EDF_u8BA1_u3001_u53EF_u89C6_u5316_u548COLAP" class="headerlink" title="1.第三章包括汇总统计、可视化和OLAP"></a>1.第三章包括汇总统计、可视化和OLAP</h4><p>统计的<strong>特征数据点</strong>包括：频数,众数,百分位数,位置度量:均值和中位数,散布度量：极差和方差，绝对平均偏差、中卫偏差，多元统计包括协方差矩阵。</p>
<p>协方差矩阵：<br>$$ covariance(x_i,x_j)=\frac{1}{m-1}\sum_{k=1}^m(x_{ki} - \overline{x_i})(x_{kj}-\overline{x_j}) $$</p>
<p>相关矩阵元素：$ r_{ij} = \frac{covariance(x_i,x_j)}{s_is_j}$</p>
<h4 id="2-_u53EF_u89C6_u5316"><a href="#2-_u53EF_u89C6_u5316" class="headerlink" title="2.可视化"></a>2.可视化</h4><p>目的：1.快速吸收信息 2.充分调用人的领域知识<br>利用一些图示模型：叶箱图、直方图、相对频率直方图、二维直方图、盒状图、饼图、经验累计分布函数、散布图、可视高维</p>
<h4 id="3-OLAP"><a href="#3-OLAP" class="headerlink" title="3.OLAP"></a>3.OLAP</h4><p>计算聚集量、维归约和转轴、切片和切块、上卷下钻</p>
<h3 id="u7B2C_u56DB_u7AE0_uFF1A_u5206_u7C7B_u3001_u51B3_u7B56_u6811_u548C_u6A21_u578B_u8BC4_u4F30"><a href="#u7B2C_u56DB_u7AE0_uFF1A_u5206_u7C7B_u3001_u51B3_u7B56_u6811_u548C_u6A21_u578B_u8BC4_u4F30" class="headerlink" title="第四章：分类、决策树和模型评估"></a>第四章：分类、决策树和模型评估</h3><h4 id="u57FA_u672C_u6982_u5FF5"><a href="#u57FA_u672C_u6982_u5FF5" class="headerlink" title="基本概念"></a>基本概念</h4><p>1.建立决策树<br>Hunt算法，采用贪心选择划分数据的属性<br>关键问题：如何分裂训练数据，如何停止分裂<br>首先是选择最佳划分的度量,用<strong>纯性度量,信息增益</strong>:<br>$$ Entropy(t)= -\sum_{i=0}^{c=1}p(i|t)log_2p(i|t) $$<br>$$ Gini(t)= 1-\sum_{i=0}^{c=1}[p(i|t)]^2 $$<br>$$ Classification_error(t)=1-max_i[p(i|t)] $$<br>归纳算法:</p>
<pre><code>TreeGrowth(E,F)
if stopping_cond(E,F)=true then
    leaf = createNode()
    leaf.label = Classify(E)
    return leaf
else
    root = createNode()
    root.test_cond = find_best_split(E,F)
    make V = {v|v is one of the output in root.test_cond}
    for each v in V do
    E(v) = {e|root.test_cond(e)=v and e in E}
    child = TreeGrowth(E(v) ,F)
    将child作为root派生结点添加到树，将边(root-&gt;child)标记为v
    end for 
end if 
return root
</code></pre><h4 id="2-_u5965_u5361_u59C6_u5243_u5200_uFF1A_u7ED9_u5B9A_u4E24_u4E2A_u76F8_u540C_u6CDB_u5316_u8BEF_u5DEE_u7684_u6A21_u578B_uFF0C_u8F83_u7B80_u5355_u7684_u66F4_u53EF_u53D6_u3002"><a href="#2-_u5965_u5361_u59C6_u5243_u5200_uFF1A_u7ED9_u5B9A_u4E24_u4E2A_u76F8_u540C_u6CDB_u5316_u8BEF_u5DEE_u7684_u6A21_u578B_uFF0C_u8F83_u7B80_u5355_u7684_u66F4_u53EF_u53D6_u3002" class="headerlink" title="2.奥卡姆剃刀：给定两个相同泛化误差的模型，较简单的更可取。"></a>2.奥卡姆剃刀：给定两个相同泛化误差的模型，较简单的更可取。</h4><h4 id="u603B_u7ED3"><a href="#u603B_u7ED3" class="headerlink" title="总结"></a>总结</h4><p>思想：地柜选择一个属性对对象集合的类标进行分类，如果分类某一属性时发现剩下的对象属于同一类，此时不必再选择属性分类，用一个叶节点代表。否则，继续选择下一属性，知道某一分类结果全在一类或没属性为止。根据选择属性顺序可以分为ID3,C4.5.针对决策树归纳中的过分拟合，可以使用先剪枝和后剪枝的方法。</p>
<p>特点：* 找到最优决策树是NP-C</p>
<pre><code>* 采用避免过拟合的方法后，决策树对噪声干扰具有较好鲁棒性。
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h3 id="u8FD9_u5199_u4E00_u4E0B_u7B2C_u4E09_u7B2C_u56DB_u7AE0_u7684_u4E3B_u8981_u5185_u5BB9"><a href="#u8FD9_u5199_u4E00_u4E0B_u7B2C_u4E09_u]]>
    </summary>
    
      <category term="读书笔记" scheme="https://csrjtan.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[关于LATEX在MAC上的配置学习]]></title>
    <link href="https://csrjtan.github.io/2015/10/30/study-20151030/"/>
    <id>https://csrjtan.github.io/2015/10/30/study-20151030/</id>
    <published>2015-10-30T09:16:52.000Z</published>
    <updated>2015-10-31T01:40:42.000Z</updated>
    <content type="html"><![CDATA[<h3 id="LATEX_u7684_u5B66_u4E60"><a href="#LATEX_u7684_u5B66_u4E60" class="headerlink" title="LATEX的学习"></a>LATEX的学习</h3><p>今天来到了科大找高中同学科长学习，在万圣节的前夕本是玩心重重，但在香港的生活忙碌又充实，他也准备MID-TERM了，所以转了一圈之后我们来到颇负盛名的科大图书馆学习。这里先爆个照！<br><img src="http://7xl4js.com1.z0.glb.clouddn.com/keda.jpg" alt=""></p>
<h4 id="u5356_u840C_u5B8C_u76F4_u63A5_u4E0A_u603B_u7ED3_uFF1A"><a href="#u5356_u840C_u5B8C_u76F4_u63A5_u4E0A_u603B_u7ED3_uFF1A" class="headerlink" title="卖萌完直接上总结："></a>卖萌完直接上总结：</h4><p>参考了网上挺多的资料，有些是过期失效或者怎么的。<br>步骤：<br>1.安装Sublime Text 2和MacTex</p>
<p>2.复制<a href="http://wbond.net/sublime_packages/package_control/installation" target="_blank" rel="external">http://wbond.net/sublime_packages/package_control/installation</a>里面的灰框代码到`Conttol+``里面，从而安装package_control</p>
<p>3.在ST里<code>Command+Shift+P</code>命令窗口输入<code>Install Package</code></p>
<p>4.装完继续安装<code>LaTeX Tools</code>，重启ST2</p>
<p>5.修改编译和中文环境（这一步我按照做没有成功，后来用另一个方法完成的，如果有相关的改进请提示我）终端运行</p>
<pre><code>sudo tlmgr update --self
sudo tlmgr install latexmk
</code></pre><p>然后在LaTeXTools.sublime-settings里面在builder-settings新增两个配置:</p>
<pre><code>&quot;program&quot; : &quot;xelatex&quot;,
&quot;command&quot; : [&quot;latexmk&quot;, &quot;-cd&quot;, &quot;-e&quot;, &quot;$pdflatex = &apos;xelatex -interaction=nonstopmode -synctex=1 %S %O&apos;&quot;, &quot;-f&quot;, &quot;-pdf&quot;],
</code></pre><p>最后LaTeXTools–Reconfigure LaTeXTools and migragte setttings来重建配置文件。</p>
<p>6.调用系统默认的Review来打开PDF，修改<br>    ~/Library/Application\ Support/Sublime\ Text/Packages/LaTeXTools/jumpToPDF.py,<br>将<code>if plat==&#39;darwub&#39;:</code>后的if-else语句注释，换成<code>subprocess.Popen([&#39;open&#39;]+[pdffile])</code></p>
<p>7.使用以下测试代码，在ST2上新建.tex文件，然后command+B</p>
<pre><code>\documentclass{article}
\usepackage{fontspec, xunicode, xltxtra}  
\setmainfont{Hiragino Sans GB}  
\title{Title}
\author{}

\begin{document}

\maketitle{}

\section{Introduction}

This is where you will write your content. 在这里写上内容。

\end{document}
</code></pre><p>8.最终大功告成！<br><img src="http://7xl4js.com1.z0.glb.clouddn.com/latex1.png" alt=""></p>
<h4 id="u53C2_u8003_u94FE_u63A5_uFF1A"><a href="#u53C2_u8003_u94FE_u63A5_uFF1A" class="headerlink" title="参考链接："></a>参考链接：</h4><p>部署MAC上的Sublime:<a href="http://www.readern.com/sublime-text-latex-chinese-under-mac.html" target="_blank" rel="external">http://www.readern.com/sublime-text-latex-chinese-under-mac.html</a><br>Economistry（英文）：<a href="http://economistry.com/2013/01/installing-and-using-latex-for-mac/" target="_blank" rel="external">http://economistry.com/2013/01/installing-and-using-latex-for-mac/</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="LATEX_u7684_u5B66_u4E60"><a href="#LATEX_u7684_u5B66_u4E60" class="headerlink" title="LATEX的学习"></a>LATEX的学习</h3><p>今天来到了科大找高中同学科长学习]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[小组Talk1]]></title>
    <link href="https://csrjtan.github.io/2015/10/28/group-talk1/"/>
    <id>https://csrjtan.github.io/2015/10/28/group-talk1/</id>
    <published>2015-10-28T15:48:09.000Z</published>
    <updated>2015-10-30T02:20:38.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u7406_u5927_u7B2C_u4E00_u6B21_u5C0F_u7EC4REPORT"><a href="#u7406_u5927_u7B2C_u4E00_u6B21_u5C0F_u7EC4REPORT" class="headerlink" title="理大第一次小组REPORT"></a>理大第一次小组REPORT</h2><p>讲讲进来三个月的工作成果和研究进展，分享一下所学内容<br>这里写下日记，总结之余，也将演讲内容在这里过一遍</p>
<h3 id="1-Big_Picture"><a href="#1-Big_Picture" class="headerlink" title="1.Big Picture"></a>1.Big Picture</h3><p>Target:实现无人机的自动导航以及躲避障碍物<br>使用SLAM：机器人从未知地点出发，运动过程中重复观测得到地图特征来定位自身未知和姿态，从而构建增量式地图，达到同时定位和地图构建的目的。<br>避障算法，Bug Algorithm:检测到障碍物，进行闪躲，但依然朝终点靠近<br>这里的起始点和终点乃至地图都可以pre-defined。</p>
<p>由于这里面核心用到的是环境的三维信息，所以Stereo Matching的精度技术显得尤为重要</p>
<h3 id="2-Stereo_Vision"><a href="#2-Stereo_Vision" class="headerlink" title="2.Stereo Vision"></a>2.Stereo Vision</h3><h4 id="2-1_Camera_Calibration"><a href="#2-1_Camera_Calibration" class="headerlink" title="2.1 Camera Calibration"></a>2.1 Camera Calibration</h4><p>这一节可以看之前camera calibration的日志，针孔平面可由相似三角求出，但由于针孔曝光不足，所以一般用透镜，所以引入了透镜畸变误差，建立数学模型解决。然后我们标定的目的主要是为了能求出摄像机的内参数，包括焦距和成像中心点偏移。以及畸变参数，从而对图像进行修正。</p>
<h3 id="2-2_Stereo_Matching"><a href="#2-2_Stereo_Matching" class="headerlink" title="2.2 Stereo Matching"></a>2.2 Stereo Matching</h3><p>这一节可以参考之前stereo matching的日志，图像的深度Z可以通过简单的三角测量求解所得。所以StereoMatching的主要流程就是图像校正、立体匹配、计算深度。其中主要的步骤在于立体匹配：包括了预处理滤波、代价聚合计算、视差计算以及视差精细等步骤。</p>
<h3 id="3-DJI_Developer"><a href="#3-DJI_Developer" class="headerlink" title="3.DJI Developer"></a>3.DJI Developer</h3><h4 id="3-1_Matrix_100"><a href="#3-1_Matrix_100" class="headerlink" title="3.1 Matrix 100"></a>3.1 Matrix 100</h4><p>首先介绍一下M100这个可扩展飞行平台，它主要特点的续航时间长，负重好，飞行稳定性强，搭载的N1飞控可扩展接口和开发设备接口十分多，强大的可扩展性。<br>平台主要提供了Android和Onboard SDK，其中Android SDK主要控制摄像机、电池和云台以及飞行参数，但由于N1连接遥控器再用USB与手机连接的，所以数据传输是不稳定且难以做到实时的，所以这一块一般用于做一些监控拍摄，指派任务的非实时任务为佳。</p>
<p>相对来说OnBoard SDK提供了开放协议从而对飞控进行命令委派，进而对飞行器进行姿态调整以及飞行模式切换等。这需要使用机载设备对采集的环境数据进行实时采集反馈。</p>
<h4 id="3-2_Guidance"><a href="#3-2_Guidance" class="headerlink" title="3.2 Guidance"></a>3.2 Guidance</h4><p>Guidance组件是一个强大的信息采集组件，具有5个超声结合双目的数据采集器，然后官方提供了GUIDANCE的数据采集例程，而且它们发了一个paper在CVPR15的WORKSHOP。</p>
<p>最后，这里提供一下这次GROUP_TALK的PPT。<br><a href="http://pan.baidu.com/s/1i3nRCtJ" target="_blank" rel="external">PPT&amp;数据采集</a><br>密码: d1s4</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u7406_u5927_u7B2C_u4E00_u6B21_u5C0F_u7EC4REPORT"><a href="#u7406_u5927_u7B2C_u4E00_u6B21_u5C0F_u7EC4REPORT" class="headerlink" title]]>
    </summary>
    
      <category term="group" scheme="https://csrjtan.github.io/tags/group/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Guidance:A Visual Sensing Platform For Robotic Applications]]></title>
    <link href="https://csrjtan.github.io/2015/10/28/paper-reading-20151028/"/>
    <id>https://csrjtan.github.io/2015/10/28/paper-reading-20151028/</id>
    <published>2015-10-28T12:38:38.000Z</published>
    <updated>2015-10-28T14:13:30.000Z</updated>
    <content type="html"><![CDATA[<h3 id="DJI_u5728CVPR15_u4E0A_u53D1_u7684_u5173_u4E8EGUIDANCE_u7EC4_u4EF6_u7684_u6587_u7AE0"><a href="#DJI_u5728CVPR15_u4E0A_u53D1_u7684_u5173_u4E8EGUIDANCE_u7EC4_u4EF6_u7684_u6587_u7AE0" class="headerlink" title="DJI在CVPR15上发的关于GUIDANCE组件的文章"></a>DJI在CVPR15上发的关于GUIDANCE组件的文章</h3><p>入手了GUIDANCE一周，这里对这篇文章细细品味一下。</p>
<p>由于缺乏一个强大的视觉感知平台，开发了一个易于扩展的数据采集平台。<br>这个论文可以主要参考一下DJI人员开发GUIDANCE时候，内置了什么样的算法。</p>
<h3 id="1-Introduction"><a href="#1-Introduction" class="headerlink" title="1.Introduction"></a>1.Introduction</h3><p>提到了VO（Visual Odometry）的概念，SLAM是VO[1]的扩展。关于SLAM[2][3]，是用于机器人定位位置识别。大部分是单目的，这里也有双目的方法[4]。这里GUIDANCE包括了5个方向的双目，可以提供深度图，超声数据，障碍物距离等内容。接下来，故事的展开分为内置函数，SDK接口以及相关应用</p>
<h3 id="2-_u5185_u7F6E_uFF1AGuidance_u662F_u5347_u7EA7_u7248_u7684_5B6_5D"><a href="#2-_u5185_u7F6E_uFF1AGuidance_u662F_u5347_u7EA7_u7248_u7684_5B6_5D" class="headerlink" title="2.内置：Guidance是升级版的[6]"></a>2.内置：Guidance是升级版的[6]</h3><p><img src="http://7xl4js.com1.z0.glb.clouddn.com/guidance_1.png" alt="SDK_Build_In"><br><a id="more"></a><br><img src="http://7xl4js.com1.z0.glb.clouddn.com/guidance_2.png" alt=""><br>对于Matching Refinement用了[7]</p>
<h3 id="4-_u53EF_u6269_u5C55_u7684_u667A_u80FD_u5E94_u7528_uFF1A"><a href="#4-_u53EF_u6269_u5C55_u7684_u667A_u80FD_u5E94_u7528_uFF1A" class="headerlink" title="4.可扩展的智能应用："></a>4.可扩展的智能应用：</h3><p>1.Autonomous Navigation<br>  拥有高精度的GPS定位<br>2.Visual SLAM[8]<br>  依赖高精度的VO结果<br>3.Depth Based Tracking</p>
<p>为了开发SLAM避障，请阅读下面黑体</p>
<p>[1]C. Forster, M. Pizzoli, and D. Scaramuzza. SVO: Fast semi- direct monocular visual odometry. In ICRA, 2014.<br><strong>[2]J. Engel, T. Schops, and D. Cremers. LSD-SLAM: Large- scale direct monocular SLAM. In ECCV, 2014.<br>[3]A. Davison. Real-time simultaneous localisation and map- ping with a single camera. In Computer Vision, 2003. Proceedings. Ninth IEEE International Conference on, pages 1403–1410 vol.2, Oct 2003 </strong><br>[4] F. Endres, J. Hess, N. Engelhard, J. Sturm, D. Cremers, and W. Burgard. An evaluation of the RGB-D SLAM system. In Robotics and Automation (ICRA), 2012 IEEE International Conference on, pages 1691–1696, May 2012.<br>[5]D. Honegger, L. Meier, P. Tanskanen, and M. Pollefeys. An open source and open hardware embedded metric optical flow cmos camera for indoor and outdoor applications. In Robotics and Automation (ICRA), IEEE International Con- ference on, pages 1736–1741, May 2013.<br>[6]G. Zhou, A. Liu, K. Yang, T. Wang, and Z. Li. An embedded solution to visual mapping for consumer drones. In Computer Vision and Pattern Recognition Workshops (CVPRW), IEEE Conference on, pages 670–675, 2014.</p>
<p>[7]B. D. Lucas and T. Kanade. An iterative image registration technique with an application to stereo vision. In Proceed- ings of the 7th International Joint Conference on Artificial<br>Intelligence - Volume 2, pages 674–679, 1981<br><strong>[8]G. Klein and D. Murray. Parallel tracking and mapping for small AR workspaces. In Sixth IEEE and ACM Internation- al Symposium on Mixed and Augmented Reality (ISMAR), 2007.</strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="DJI_u5728CVPR15_u4E0A_u53D1_u7684_u5173_u4E8EGUIDANCE_u7EC4_u4EF6_u7684_u6587_u7AE0"><a href="#DJI_u5728CVPR15_u4E0A_u53D1_u7684_u5173_u4E8EGUIDANCE_u7EC4_u4EF6_u7684_u6587_u7AE0" class="headerlink" title="DJI在CVPR15上发的关于GUIDANCE组件的文章"></a>DJI在CVPR15上发的关于GUIDANCE组件的文章</h3><p>入手了GUIDANCE一周，这里对这篇文章细细品味一下。</p>
<p>由于缺乏一个强大的视觉感知平台，开发了一个易于扩展的数据采集平台。<br>这个论文可以主要参考一下DJI人员开发GUIDANCE时候，内置了什么样的算法。</p>
<h3 id="1-Introduction"><a href="#1-Introduction" class="headerlink" title="1.Introduction"></a>1.Introduction</h3><p>提到了VO（Visual Odometry）的概念，SLAM是VO[1]的扩展。关于SLAM[2][3]，是用于机器人定位位置识别。大部分是单目的，这里也有双目的方法[4]。这里GUIDANCE包括了5个方向的双目，可以提供深度图，超声数据，障碍物距离等内容。接下来，故事的展开分为内置函数，SDK接口以及相关应用</p>
<h3 id="2-_u5185_u7F6E_uFF1AGuidance_u662F_u5347_u7EA7_u7248_u7684_5B6_5D"><a href="#2-_u5185_u7F6E_uFF1AGuidance_u662F_u5347_u7EA7_u7248_u7684_5B6_5D" class="headerlink" title="2.内置：Guidance是升级版的[6]"></a>2.内置：Guidance是升级版的[6]</h3><p><img src="http://7xl4js.com1.z0.glb.clouddn.com/guidance_1.png" alt="SDK_Build_In"><br>]]>
    
    </summary>
    
      <category term="paper" scheme="https://csrjtan.github.io/tags/paper/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[摄像头校正（Camera Calibration）]]></title>
    <link href="https://csrjtan.github.io/2015/10/27/camera-calibration/"/>
    <id>https://csrjtan.github.io/2015/10/27/camera-calibration/</id>
    <published>2015-10-27T02:29:57.000Z</published>
    <updated>2015-10-27T15:10:26.000Z</updated>
    <content type="html"><![CDATA[<h3 id="u4E3A_u4E86_u603B_u7ED3_u4E00_u4E0B_u8FDB_u5165_u7406_u5927_u4EE5_u6765_u5BF9_u4E8EStereo_Vision_u7684_u5B66_u4E60_uFF0C_u8FD9_u91CC_u5206_u4EAB_u4E00_u4E0B_u5BF9_u4E8ECamera_Calibration_u7684_u5B66_u4E60"><a href="#u4E3A_u4E86_u603B_u7ED3_u4E00_u4E0B_u8FDB_u5165_u7406_u5927_u4EE5_u6765_u5BF9_u4E8EStereo_Vision_u7684_u5B66_u4E60_uFF0C_u8FD9_u91CC_u5206_u4EAB_u4E00_u4E0B_u5BF9_u4E8ECamera_Calibration_u7684_u5B66_u4E60" class="headerlink" title="为了总结一下进入理大以来对于Stereo Vision的学习，这里分享一下对于Camera Calibration的学习"></a>为了总结一下进入理大以来对于Stereo Vision的学习，这里分享一下对于Camera Calibration的学习</h3><p>首先分享一下好的资源<a href="http://wycwang.blogspot.hk/2012/09/camera-calibration-part-1-camera-model.html" target="_blank" rel="external">Richard’s blog</a> 《学习opencv》的第十一章，照相机匹配，还有张正友的经典论文。</p>
<h3 id="1-_u9488_u5B54_u6A21_u578B_28Pinhole_model_29"><a href="#1-_u9488_u5B54_u6A21_u578B_28Pinhole_model_29" class="headerlink" title="1.针孔模型(Pinhole model)"></a>1.针孔模型(Pinhole model)</h3><p><img src="http://7xl4js.com1.z0.glb.clouddn.com/calibration1.png" alt=""></p>
<p>从高中物理的针孔成像定理以及相似三角形定义可得,Z为到针孔距离，f为焦距:<br>$$-x=f\frac{X}{Z}$$</p>
<p>换一个方式，由于人眼看到的并非是倒像，其实可以如下图一样，将成像平面前移到眼睛前方，或者进行一个重新对应成像的过程，从而把倒像恢复，但大小不变的。<br><img src="http://7xl4js.com1.z0.glb.clouddn.com/calibration2.png" alt=""><br>$$x=f\frac{X}{Z}$$</p>
<p>为了使得影像中心没有偏差，加入位移参数$C_x和C_y$，另外成像平面的像素长宽的比例不一样，所以可以加入$s_x和s_y$调整。但这是可以和焦距融合的，所以最终得到公式：<br>$$q=M* Q$$<br><img src="http://7xl4js.com1.z0.glb.clouddn.com/calibration3.png" alt=""><br>$f_x ，f_y ，c_x ，c_y$为摄像机的内参数，一旦标定是固定不变的。</p>
<h3 id="2-_u900F_u955C_u6A21_u578B"><a href="#2-_u900F_u955C_u6A21_u578B" class="headerlink" title="2.透镜模型"></a>2.透镜模型</h3><p>由于针孔对光线的采集不足，需要长曝光，这是不可取的。所以选用透镜，但这回带来透镜畸变，主要是径向（Radial）和切向(Tangent)畸变<br><img src="http://7xl4js.com1.z0.glb.clouddn.com/calibration4.png" alt=""><br>校正选用的Model如下，其中径向由泰勒展开的前三个偶数项（由于中心对称的偶函数），而切向的恢复拟合模型可以参考详细的数学方法，这里不关注。</p>
<p><img src="http://7xl4js.com1.z0.glb.clouddn.com/calibration5.png" alt="校正radial"></p>
<p><img src="http://7xl4js.com1.z0.glb.clouddn.com/calibration6.png" alt="校正tangent"><br>这里k1,k2,p1,p2,k3成为摄像机的形变参数(Distortion parameteres)</p>
<h3 id="3-Calibration"><a href="#3-Calibration" class="headerlink" title="3.Calibration"></a>3.Calibration</h3><p>外部参数是用来将世界坐标系和Camera坐标系之间的坐标系统进行转换。通过3个维度的旋转和平移可得：<br><img src="http://7xl4js.com1.z0.glb.clouddn.com/calibration7.png" alt=""></p>
<h3 id="4-_u5F20_u6B63_u53CB_u65B9_u6CD5"><a href="#4-_u5F20_u6B63_u53CB_u65B9_u6CD5" class="headerlink" title="4.张正友方法"></a>4.张正友方法</h3><p>由于OpenCV以及matlab所使用的方法都是基于张正友的方法，这里介绍一下，其特点是校正方法的弹性以及校正物件比较容易，为一个平面物件。<br>由于校正物体为平面物体，成像也是一个平面物体，而平面物体上的点Transform到另一个平面上，这在CV领域理称为Planar Homography<br><img src="http://7xl4js.com1.z0.glb.clouddn.com/calibration8.png" alt="Planar Homography"><br>基于如此假设，减少一个Z轴上的旋转向量，得到的映射方程可以简化为如下：<br><img src="http://7xl4js.com1.z0.glb.clouddn.com/calibration9.png" alt=""><br>通过$H=A*[r_1 r_2 t]$代入可得以下解：<br><img src="http://7xl4js.com1.z0.glb.clouddn.com/calibration10.png" alt=""></p>
<h4 id="u5982_u6B64_uFF0C_u6211_u4EEC_u6709Homography_Constrain_u7684_u7EA6_u675F"><a href="#u5982_u6B64_uFF0C_u6211_u4EEC_u6709Homography_Constrain_u7684_u7EA6_u675F" class="headerlink" title="如此，我们有Homography Constrain的约束"></a>如此，我们有Homography Constrain的约束</h4><p>$r_1 r_2$为相互垂直的旋转向量，且大小相同,即$r_1^T*r_2=0$以及$||r_1||=||r_2||和r_1^T*r_1=r_2^T*r_2$从而代入上面的式子进行矩阵求解，最终得到如下结果：<br><img src="http://7xl4js.com1.z0.glb.clouddn.com/calibration11.png" alt=""><br>其中$B=A^{-T}A^{-1}$，B为对称矩阵，所以只需要知道6个矩阵元素就好。由此推出要求得一个解，至少需要3幅图像的6对已知对应点。（多多益善）<br>此外，由于$r_1 和 r_2$不一定相互垂直，所以有时需要对R进行奇异值分解。</p>
<p>有解的前提是2NK&gt;=6K+4,即是(N-3)K&gt;=2</p>
<h3 id="4-OpenCV_u7684_u76F8_u5173_u51FD_u6570"><a href="#4-OpenCV_u7684_u76F8_u5173_u51FD_u6570" class="headerlink" title="4.OpenCV的相关函数"></a>4.OpenCV的相关函数</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//寻找棋盘角点</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cvfindChessboardCorners</span><span class="params">(</span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">void</span>* image,</span><br><span class="line">	CvSize 		pattern_size,</span><br><span class="line">	CvPoint2D32f*	corners,</span><br><span class="line">	<span class="keyword">int</span>*		corner_count = <span class="literal">NULL</span></span><br><span class="line">	<span class="keyword">int</span>		flags = CV_CALIB_V_ADAPTIVE_THRESH</span><br><span class="line">	)</span></span>;</span><br><span class="line"><span class="comment">//画出找到的角点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cvDrawChessboardCorner</span><span class="params">(</span><br><span class="line">	CvArr*	image,</span><br><span class="line">	CvSize	pattern_size,</span><br><span class="line">	CvPoint2D32f* corners,</span><br><span class="line">	<span class="keyword">int</span> count,</span><br><span class="line">	<span class="keyword">int</span> pattern_was_found</span><br><span class="line">	)</span></span>;</span><br><span class="line"><span class="comment">//摄像机标定</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cvCalibrateCamera2</span><span class="params">(</span><br><span class="line">	CvMat* object_points,</span><br><span class="line">	CvMat* image_points,</span><br><span class="line">	<span class="keyword">int</span>* point_counts,</span><br><span class="line">	CvSize image_size,</span><br><span class="line">	CvMat* intrinsic_matrix,</span><br><span class="line">	CvMat* distortion_coeffs,</span><br><span class="line">	CvMat* rotation_vectors = <span class="literal">NULL</span>,</span><br><span class="line">	CvMat* translation_vectors = <span class="literal">NULL</span>,</span><br><span class="line">	<span class="keyword">int</span> flags = <span class="number">0</span></span><br><span class="line">	)</span></span>;</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>计算完内参数后，也由单应性条件计算得到外参数</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="u4E3A_u4E86_u603B_u7ED3_u4E00_u4E0B_u8FDB_u5165_u7406_u5927_u4EE5_u6765_u5BF9_u4E8EStereo_Vision_u7684_u5B66_u4E60_uFF0C_u8FD9_u91CC]]>
    </summary>
    
      <category term="Stereo Vision" scheme="https://csrjtan.github.io/tags/Stereo-Vision/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Small Vision Systems :Hardware and Implementation]]></title>
    <link href="https://csrjtan.github.io/2015/10/25/paper-reading-20151025/"/>
    <id>https://csrjtan.github.io/2015/10/25/paper-reading-20151025/</id>
    <published>2015-10-25T12:50:44.000Z</published>
    <updated>2015-10-27T04:32:37.000Z</updated>
    <content type="html"><![CDATA[<p><strong>Author</strong>:Kurt Konolige<br>这篇文章是opencv里面的StereoMatchingBM算法的参考算法，所以特意找出来研读一番，虽然是1998的产物，但还是值得一看的，它实际有效地用于移动机器人。它的特点是快，实时。但当参数不Tuned的时候，效果不佳。所以需要进行良好的标定和参数的调整。对于一张480*320的32位深度图计算只需要30~40毫秒的时间。这与opencv里面的StereoMatchingGC算法形成对比，GC算法耗时长，以上图则需要几秒但恢复精度高。</p>
<h4 id="2-1_Area_Correlation__u8FD9_u7BC7_u6587_u7AE0_u7684StereoMatching_u4E3B_u8981_u5E94_u7528_u5728_u79FB_u52A8_u673A_u5668_u4EBA_u4E0A_uFF0C_u5B83_u7528_u5230_u7684_u533A_u57DF_u5173_u8054_u6B65_u9AA4_u6709_u4E94_uFF1A"><a href="#2-1_Area_Correlation__u8FD9_u7BC7_u6587_u7AE0_u7684StereoMatching_u4E3B_u8981_u5E94_u7528_u5728_u79FB_u52A8_u673A_u5668_u4EBA_u4E0A_uFF0C_u5B83_u7528_u5230_u7684_u533A_u57DF_u5173_u8054_u6B65_u9AA4_u6709_u4E94_uFF1A" class="headerlink" title="2.1 Area Correlation 这篇文章的StereoMatching主要应用在移动机器人上，它用到的区域关联步骤有五："></a>2.1 Area Correlation 这篇文章的StereoMatching主要应用在移动机器人上，它用到的区域关联步骤有五：</h4><p>1.Geometry correction:图像的几何和扭曲的恢复调整<br>2.Image Transform:灰度图像素值的去误差调整<br>3.Area Correlation:通过Searching Window区域关联匹配<br>4.Exrema Extraction:最佳点提取，用于生成深度图<br>5.Post-filtering:深度图后处理，去噪滤波等,去除误匹配点，如重复和平滑区域的无匹配等</p>
<h4 id="2-2_Epipolar_Geometry"><a href="#2-2_Epipolar_Geometry" class="headerlink" title="2.2 Epipolar Geometry"></a>2.2 Epipolar Geometry</h4><p>极平面约束导致，p从参照图映射到匹配图，肯定在极曲线(epipolar curves)上。假若图片是理想映射，则该epipolar curves是一条直线。为了达到这样的理想条件，为此，确保图像在同一平面，扫描线和图像中心水平对齐，共同拥有相同的焦距，最好还需要知道内外参数。所以照相机的标定起到重要作用。</p>
<p>实际应用中，不断计算标定不实际，只能确定内参数后，再根据偏差进行自动标定。</p>
<h3 id="3-_u8BE5_u8BBA_u6587_u7CFB_u7EDF_u7684_u7B97_u6CD5"><a href="#3-_u8BE5_u8BBA_u6587_u7CFB_u7EDF_u7684_u7B97_u6CD5" class="headerlink" title="3.该论文系统的算法"></a>3.该论文系统的算法</h3><p>1.LOG滤波去噪，用L1绝对值比较<br>2.进行深度搜索<br>3.后处理，去除奇异点，使用左右和右左校验<br>4.使用X4的插值</p>
<p>作者还对比了使用标定照相机内参后，得到的深度图更为清晰稳定。而针对left/right匹配时，寻找对应最优点采用了hill-climbing和遍历周围最小空间，进行贪心选择。最后对比了一系列StereoMatching组合方法的精度、时间、耗能的区别。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong>Author</strong>:Kurt Konolige<br>这篇文章是opencv里面的StereoMatchingBM算法的参考算法，所以特意找出来研读一番，虽然是1998的产物，但还是值得一看的，它实际有效地用于移动机器人。它的特点是快，实时。但当]]>
    </summary>
    
      <category term="paper" scheme="https://csrjtan.github.io/tags/paper/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[数据挖掘导论（1）]]></title>
    <link href="https://csrjtan.github.io/2015/10/25/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E5%AF%BC%E8%AE%BA%EF%BC%881%EF%BC%89/"/>
    <id>https://csrjtan.github.io/2015/10/25/数据挖掘导论（1）/</id>
    <published>2015-10-25T03:06:29.000Z</published>
    <updated>2015-10-25T09:17:55.000Z</updated>
    <content type="html"><![CDATA[<h3 id="u5468_u672B_u548C_u4F55_u5973_u795E_u4E00_u8D77_u8BFB_u4E66_uFF0C_u5979_u6700_u8FD1_u5B66_u6570_u636E_u6316_u6398_uFF0C_u6240_u4EE5_u6211_u5C31_u966A_u8BFB_uFF0C_u8FD9_u91CC_u8BB0_u5F55_u4E00_u4E0B_u8BFB_u4E66_u5FC3_u5F97_u3002"><a href="#u5468_u672B_u548C_u4F55_u5973_u795E_u4E00_u8D77_u8BFB_u4E66_uFF0C_u5979_u6700_u8FD1_u5B66_u6570_u636E_u6316_u6398_uFF0C_u6240_u4EE5_u6211_u5C31_u966A_u8BFB_uFF0C_u8FD9_u91CC_u8BB0_u5F55_u4E00_u4E0B_u8BFB_u4E66_u5FC3_u5F97_u3002" class="headerlink" title="周末和何女神一起读书，她最近学数据挖掘，所以我就陪读，这里记录一下读书心得。"></a>周末和何女神一起读书，她最近学数据挖掘，所以我就陪读，这里记录一下读书心得。</h3><p>首先，这本书应该是数据挖掘领域的经典，可以找到网上的数据挖掘导论PDF<br>作者是Michingan State U的Associate Professor <a href="http://www.cse.msu.edu/~ptan/" target="_blank" rel="external">Pang-Ning Tan</a>、University of Minnesota的<a href="http://www-users.cs.umn.edu/~kumar/" target="_blank" rel="external">Vipin Kumar</a></p>
<p>好，马上开始正题：</p>
<h4 id="u4E66_u672C_u5185_u5BB9_u4E0E_u7EC4_u7EC7"><a href="#u4E66_u672C_u5185_u5BB9_u4E0E_u7EC4_u7EC7" class="headerlink" title="书本内容与组织"></a>书本内容与组织</h4><p>第一章，绪论<br>第二章，讨论数据基本类型、质量、预处理及相似性和相异性度量<br>第三章，关于数据数据探查<br>第四、五章，关于分类<br>第六、七章，讨论关联分析<br>第八、九章，讨论聚类分析<br>第十章，讨论数据挖掘的异常检测<br><a id="more"></a></p>
<h3 id="u7B2C_u4E8C_u7AE0__u6570_u636E"><a href="#u7B2C_u4E8C_u7AE0__u6570_u636E" class="headerlink" title="第二章 数据"></a>第二章 数据</h3><p>1.1 属性Attri,对象的性质和特征。测量标度是属性的数值、符号甚至关联规则（函数）。主要是将物理世界的连续量，量化离散成适当的、计算机可以处理的数据。</p>
<p>1.2 数据集的特性：维度高、稀疏性、适当分辨率</p>
<p>2.1 数据记录的方式：矩阵、稀疏矩阵、基于图形的数据、有序数据、时序数据、空间数据</p>
<p>2.2 数据质量，受到测量误差和收集错误影响，包括噪声、精度、离群点、遗漏值、重复值以及不一致值。数据集之于应用也会受到时效性、相关性的。</p>
<p>2.3 数据预处理：<strong>聚集、抽样、维归约、特征子集选择、特征创建、离散化和二元化、变量变换</strong></p>
<p>聚集动机：减少内存和处理时间、使用高层的数据视图起到了范围和<strong>标度转换</strong>的作用</p>
<p>抽样：抽取有代表性有效的数据样本，方法有单随机（无放回和有放回）抽样和分层抽样，为了确定适合大小的样本容量，还可以进行自适应或者渐进的抽样。</p>
<p>维归约：就是降维，将旧属性合并成新属性，避免维度灾难。可以用线性代数方法，将<strong>高维空间投影到低维空间</strong>，比如PCA找出主成分并利用正交特性捕捉数据最大变差，SVD也相似。</p>
<p><strong>特征子集选择</strong>：嵌入方法，嵌入到算法模型，算法来决定特征属性。与嵌入相反的过滤方法，使算法与特征选择相关度小。包装方法来找到最佳属性子集。或者直接使用特征加权。</p>
<p>特征创建：1.特征提取 2.映射到新空间（傅里叶变换） 3.构造特征</p>
<p>二元化：将属性转换成二元属性<br>离散化：非监督离散化和监督离散化，<strong>基于信息熵</strong>的方法较佳<br>$$ e_i =- \sum_{j=1}^k p_{ij}log_2p_{ij} $$<br>定义$m_{ij}$是区间i中类j的值的个数，则$p_{ij}=m_{ij}/m_i$是第i个区间种类j的概率<br>区间的熵是区间纯度的度量，如果区间只有1个值，则熵为0，不影响总熵。如果一个区间中值类出现频率相等（区间不纯，含信息多），则熵最大。决策树的属性选取与此有相似的思想。</p>
<p>变量变换：1.简单函数：将不具有高斯分布的数据变换成高斯分布或者压缩大的数值（注意是否变换导致数据集特性的丢失，思考以下问题：如需要保序么？作用到全部值？变换对0~1之间的值有如何影响？）2.规范化：例如以0为均值，1为标准差。通常用于方便计算，并使数据集具有特定的特质</p>
<p>相似性和相异性：用邻近度表示相似或相异，包括相关和欧几距离，Jaccard和余弦相似度量，前两者使用时间序列稠密数据或二维点，后两者适用文档、图像等稀疏数据。一般得到邻近度后，原始数据便不再需要。<br><img src="http://7xl4js.com1.z0.glb.clouddn.com/datamine_1.png" alt=""><br>通常我们会定义一些距离，如L0、L1、$L_\infty$,它们满足<strong>非负性、对称性和三角不等式</strong>,满足此条件称为度量（metric）,由此可延伸出测度学习（Metric Learning)。其中还可以用集合差，时间之间的距离<br>余弦 $cos(x,y)=\frac{x}{||x||}.\frac{y}{||y||}$</p>
<p>相关性 $corr(x,y)=\frac{covariance(x,y)}{standard\_deviation(x)*standard\_deviation(y)} =\frac{s_xy}{s_xs_y}$</p>
<p>Bregman散度：给定严格凸函数$\phi$,则该函数生成的Bregman散度D(x,y)通过下面公式给出：<br>$$D(x,y)=\phi(x)-\phi(y)-&lt;\Delta\phi(y),(x-y)&gt;$$<br>其中$\Delta\phi(y)$计算$\phi$的梯度，$&lt;\Delta\phi(y),(x-y)&gt;$是$\Delta\phi(y)$和(x-y)的内积。</p>
<p>2.4 邻近度计算问题<br>1.距离度量的标准化和相关性（假定属性相同类型）<br>$$mahalanobis(x,y)=(x-y)\sum^{-1}(x-y)^T$$<br>其中$\sum^{-1}$是数据协方差矩阵的逆，第ij个元素是第i个和第j个属性的协方差。这个是为了减少不同尺度变量的影响，虽然计算量大，但对于属性相关的对象是值得的。<br>2.组合异种属性的相似度<br>3.使用权值<br>$$similarity(x,y)=\frac{\sum_{k=1}^nw_k\delta_ks_k(x,y)}{\sum_{k=1}^n}\delta_k$$<br>其中$\delta=0$，如果第k个属性是非对成熟性，并且两个对象在该属性上的值都是0，或者其中一个对象的第k个属性具有遗漏值。$\delta=1$，则两个对象之间的相似度有以上定义，以上的公式包含了组合异种属性和使用权值的效果。</p>
<p>2.5 关于如何选取正确的邻近性度量<br>选取与数据类型相适应的：稠密和连续的数据，通常使用距离度量。<strong>稀疏数据</strong>常常包含非对称数据，通常使用<strong>忽略0-0匹配</strong>的相似性度量。因为对象相似依赖于共同具有的性质，而不是缺失的性质，若考虑稀疏数据缺失的性质，则它们都高度相似。所以<strong>余弦、Jaccard和广义Jaccard度量</strong>更适合。<br>对于比较时间序列，如果量值重要，则用欧几距离。假若<strong>序列形状</strong>重要，则<strong>考虑相关度</strong>（使用考虑量和级的差异的内置规范化）。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="u5468_u672B_u548C_u4F55_u5973_u795E_u4E00_u8D77_u8BFB_u4E66_uFF0C_u5979_u6700_u8FD1_u5B66_u6570_u636E_u6316_u6398_uFF0C_u6240_u4EE5_u6211_u5C31_u966A_u8BFB_uFF0C_u8FD9_u91CC_u8BB0_u5F55_u4E00_u4E0B_u8BFB_u4E66_u5FC3_u5F97_u3002"><a href="#u5468_u672B_u548C_u4F55_u5973_u795E_u4E00_u8D77_u8BFB_u4E66_uFF0C_u5979_u6700_u8FD1_u5B66_u6570_u636E_u6316_u6398_uFF0C_u6240_u4EE5_u6211_u5C31_u966A_u8BFB_uFF0C_u8FD9_u91CC_u8BB0_u5F55_u4E00_u4E0B_u8BFB_u4E66_u5FC3_u5F97_u3002" class="headerlink" title="周末和何女神一起读书，她最近学数据挖掘，所以我就陪读，这里记录一下读书心得。"></a>周末和何女神一起读书，她最近学数据挖掘，所以我就陪读，这里记录一下读书心得。</h3><p>首先，这本书应该是数据挖掘领域的经典，可以找到网上的数据挖掘导论PDF<br>作者是Michingan State U的Associate Professor <a href="http://www.cse.msu.edu/~ptan/">Pang-Ning Tan</a>、University of Minnesota的<a href="http://www-users.cs.umn.edu/~kumar/">Vipin Kumar</a></p>
<p>好，马上开始正题：</p>
<h4 id="u4E66_u672C_u5185_u5BB9_u4E0E_u7EC4_u7EC7"><a href="#u4E66_u672C_u5185_u5BB9_u4E0E_u7EC4_u7EC7" class="headerlink" title="书本内容与组织"></a>书本内容与组织</h4><p>第一章，绪论<br>第二章，讨论数据基本类型、质量、预处理及相似性和相异性度量<br>第三章，关于数据数据探查<br>第四、五章，关于分类<br>第六、七章，讨论关联分析<br>第八、九章，讨论聚类分析<br>第十章，讨论数据挖掘的异常检测<br>]]>
    
    </summary>
    
      <category term="读书笔记" scheme="https://csrjtan.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[论文阅读方法和技巧]]></title>
    <link href="https://csrjtan.github.io/2015/10/22/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E6%96%B9%E6%B3%95/"/>
    <id>https://csrjtan.github.io/2015/10/22/论文阅读方法/</id>
    <published>2015-10-22T08:58:39.000Z</published>
    <updated>2015-10-22T09:01:29.000Z</updated>
    <content type="html"><![CDATA[<h4 id="u5173_u4E8E_u8BBA_u6587_u9605_u8BFB_u7684_u65B9_u6CD5_u548C_u5FC3_u5F97"><a href="#u5173_u4E8E_u8BBA_u6587_u9605_u8BFB_u7684_u65B9_u6CD5_u548C_u5FC3_u5F97" class="headerlink" title="关于论文阅读的方法和心得"></a>关于论文阅读的方法和心得</h4><p><a href="https://www.evernote.com/shard/s608/sh/b2f2b9b0-91a5-4abf-81f4-599d3fa52bb9/01af8a34804f5cd1/res/bda4e9d8-e543-4cfd-9bb1-f42e7a626894/%E9%98%85%E8%AF%BB%E8%AE%BA%E6%96%87.pdf" target="_blank" rel="external">PDF</a></p>
<p><img src="http://7xl4js.com1.z0.glb.clouddn.com/论文阅读.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="u5173_u4E8E_u8BBA_u6587_u9605_u8BFB_u7684_u65B9_u6CD5_u548C_u5FC3_u5F97"><a href="#u5173_u4E8E_u8BBA_u6587_u9605_u8BFB_u7684_u65B9_u]]>
    </summary>
    
      <category term="读书笔记" scheme="https://csrjtan.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[代码大全（1）]]></title>
    <link href="https://csrjtan.github.io/2015/10/20/%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8%EF%BC%88%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B01%EF%BC%89/"/>
    <id>https://csrjtan.github.io/2015/10/20/代码大全（读书笔记1）/</id>
    <published>2015-10-20T05:25:34.000Z</published>
    <updated>2015-10-22T05:09:39.000Z</updated>
    <content type="html"><![CDATA[<h3 id="u6574_u7406_u4E00_u4E0B_u6700_u8FD1_u7684_u8BFB_u4E66_u7B14_u8BB0_uFF0C_u9996_u5148_u5E94_u8BE5_u662F_u300A_u4EE3_u7801_u5927_u5168_u300B_u8FD9_u672C_u4E66_uFF0C_u8FD9_u91CC_u5199_u4E00_u4E0B_u7B2C_u4E00_u90E8_u5206_u201C_u6253_u597D_u57FA_u7840_u201D"><a href="#u6574_u7406_u4E00_u4E0B_u6700_u8FD1_u7684_u8BFB_u4E66_u7B14_u8BB0_uFF0C_u9996_u5148_u5E94_u8BE5_u662F_u300A_u4EE3_u7801_u5927_u5168_u300B_u8FD9_u672C_u4E66_uFF0C_u8FD9_u91CC_u5199_u4E00_u4E0B_u7B2C_u4E00_u90E8_u5206_u201C_u6253_u597D_u57FA_u7840_u201D" class="headerlink" title="整理一下最近的读书笔记，首先应该是《代码大全》这本书，这里写一下第一部分“打好基础”"></a>整理一下最近的读书笔记，首先应该是《代码大全》这本书，这里写一下第一部分“打好基础”</h3><p>最近的工作重心，由CV的识别和3D重建转移了，所以paper读得少了，但不能停。在理大的学习需要自觉，意识到自己在专注上的缺乏，所以需要继续更新博客，完善这个博客来希望自己有所提高。废话少说，直接来读书心得了。<a id="more"></a><br><img src="http://7xl4js.com1.z0.glb.clouddn.com/构建项目.png" alt=""></p>
<h3 id="chap_1-_u8FDB_u5165_u67B6_u6784_u7684_u4E16_u754C"><a href="#chap_1-_u8FDB_u5165_u67B6_u6784_u7684_u4E16_u754C" class="headerlink" title="chap 1.进入架构的世界"></a>chap 1.进入架构的世界</h3><p>软件架构包括：定义问题、需求分析、规划构建、软件架构、<strong>详细设计</strong>、<strong>编码和单元测试</strong>、集成测试、集成、系统测试以及保障维护</p>
<p>作者强调设计和架构是很重要的，不要一上来就抠码，接下来分析如何设计，这对软件质量有实质性的帮助。</p>
<h3 id="chap_2-_u7528_u9690_u55BB_u6765_u5145_u5206_u7406_u89E3_u8F6F_u4EF6_u5F00_u53D1"><a href="#chap_2-_u7528_u9690_u55BB_u6765_u5145_u5206_u7406_u89E3_u8F6F_u4EF6_u5F00_u53D1" class="headerlink" title="chap 2.用隐喻来充分理解软件开发"></a>chap 2.用隐喻来充分理解软件开发</h3><p>软件领域有一些共同的隐喻，用于方便交流，更好地理解抽象概念。</p>
<h3 id="chap_3-_u524D_u671F_u51C6_u5907"><a href="#chap_3-_u524D_u671F_u51C6_u5907" class="headerlink" title="chap 3.前期准备"></a>chap 3.前期准备</h3><p><strong>涉及</strong>：程序组织、主要的类（80/20法则）、数据设计、业务规则、用户界面设计、资源管理、安全性、性能、可伸缩小、互用性、国际化/本地化、输入输出、错误处理、容错性、<br>架构可能性、过度工程、关于“买”还是“造”的决策、关于复用、变更策略、架构总体质量<br>目标：在于降低风险，同时增强系统清晰度可读性</p>
<h3 id="chap_4-_u5173_u952E_u7684_u201C_u6784_u5EFA_u201D_u51B3_u7B56"><a href="#chap_4-_u5173_u952E_u7684_u201C_u6784_u5EFA_u201D_u51B3_u7B56" class="headerlink" title="chap 4.关键的“构建”决策"></a>chap 4.关键的“构建”决策</h3><p>选择编程语言、编程约定（人为规则）、深入一种语言、<strong>发明自己编码约定标准类库以及其他改进措施</strong></p>
<h3 id="chap_5-_u8F6F_u4EF6_u6784_u5EFA_u4E2D_u7684_u8BBE_u8BA1"><a href="#chap_5-_u8F6F_u4EF6_u6784_u5EFA_u4E2D_u7684_u8BBE_u8BA1" class="headerlink" title="chap 5.软件构建中的设计"></a>chap 5.软件构建中的设计</h3><p>正确认识设计：险恶、无章法、确定取舍、调整顺序、不确定、启发式过程</p>
<p>要点：管理复杂度</p>
<p><strong>目标</strong>：最小复杂度、易于维护、松散耦合、可扩展、可充用、高扇入（大量高层类用同一基础类）、低扇出（减少使用不同底层类的个数）、可移植性、精简性、层次性、用标准技术</p>
<p>层次：软件系统-&gt;子系统或包（定义通讯规则来分隔）-&gt; 类 -&gt; 子程序 -&gt;内部编程</p>
<p><em>找出现实世界对象：辩识对象及其方法属性，确定对对象进行的操作，确定各对象对其他对对象的操作，确定对象可见部分，定义接口</em></p>
<p>最后就是将类形成一致的抽象，继而层次化各个类，尽可能达到信息隐藏：1.隐藏复杂度 2.隐藏变化源</p>
<p>为此，我们要明确信息隐藏的障碍和难点：信息过渡分散、有循环的依赖、误把类内数据当全局数据、找出容易改变的区域隔离开（包括业务规则、硬件依赖、IO、困难的设计区域、枚举出状态变量）</p>
<p><strong>保持松散耦合</strong>：常见简单数据参数耦合、简单对象耦合、对象参数耦合、语义耦合（复杂！）</p>
<h4 id="u5B66_u4E60_u4E00_u4E9B_u5E38_u7528_u7684_u8BBE_u8BA1_u6A21_u5F0F_uFF1A_u9002_u914D_u5668_u3001_u6865_u63A5_u3001_u88C5_u9970_u5668_u3001_u5916_u89C2_u3001_u5DE5_u5382_u65B9_u6CD5_u3001_u89C2_u5BDF_u8005_u3001_u5355_u4EF6_u3001_u7B56_u7565_u548C_u6A21_u677F_u65B9_u6CD5"><a href="#u5B66_u4E60_u4E00_u4E9B_u5E38_u7528_u7684_u8BBE_u8BA1_u6A21_u5F0F_uFF1A_u9002_u914D_u5668_u3001_u6865_u63A5_u3001_u88C5_u9970_u5668_u3001_u5916_u89C2_u3001_u5DE5_u5382_u65B9_u6CD5_u3001_u89C2_u5BDF_u8005_u3001_u5355_u4EF6_u3001_u7B56_u7565_u548C_u6A21_u677F_u65B9_u6CD5" class="headerlink" title="学习一些常用的设计模式：适配器、桥接、装饰器、外观、工厂方法、观察者、单件、策略和模板方法"></a>学习一些常用的设计模式：适配器、桥接、装饰器、外观、工厂方法、观察者、单件、策略和模板方法</h4><p>最后需要明确项目的类型来规划设计到哪一个细节阶段，并记录<strong>设计成果</strong>，保留设计挂图</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="u6574_u7406_u4E00_u4E0B_u6700_u8FD1_u7684_u8BFB_u4E66_u7B14_u8BB0_uFF0C_u9996_u5148_u5E94_u8BE5_u662F_u300A_u4EE3_u7801_u5927_u5168_u300B_u8FD9_u672C_u4E66_uFF0C_u8FD9_u91CC_u5199_u4E00_u4E0B_u7B2C_u4E00_u90E8_u5206_u201C_u6253_u597D_u57FA_u7840_u201D"><a href="#u6574_u7406_u4E00_u4E0B_u6700_u8FD1_u7684_u8BFB_u4E66_u7B14_u8BB0_uFF0C_u9996_u5148_u5E94_u8BE5_u662F_u300A_u4EE3_u7801_u5927_u5168_u300B_u8FD9_u672C_u4E66_uFF0C_u8FD9_u91CC_u5199_u4E00_u4E0B_u7B2C_u4E00_u90E8_u5206_u201C_u6253_u597D_u57FA_u7840_u201D" class="headerlink" title="整理一下最近的读书笔记，首先应该是《代码大全》这本书，这里写一下第一部分“打好基础”"></a>整理一下最近的读书笔记，首先应该是《代码大全》这本书，这里写一下第一部分“打好基础”</h3><p>最近的工作重心，由CV的识别和3D重建转移了，所以paper读得少了，但不能停。在理大的学习需要自觉，意识到自己在专注上的缺乏，所以需要继续更新博客，完善这个博客来希望自己有所提高。废话少说，直接来读书心得了。]]>
    
    </summary>
    
      <category term="读书笔记" scheme="https://csrjtan.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
